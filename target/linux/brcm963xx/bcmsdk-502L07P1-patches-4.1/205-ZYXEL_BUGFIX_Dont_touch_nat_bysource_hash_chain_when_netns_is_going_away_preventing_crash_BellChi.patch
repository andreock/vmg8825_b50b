Index: linux-4.1.52/net/netfilter/nf_nat_core.c
===================================================================
--- linux-4.1.52.orig/net/netfilter/nf_nat_core.c	2018-11-01 11:02:17.283708502 +0800
+++ linux-4.1.52/net/netfilter/nf_nat_core.c	2018-11-02 16:12:00.807769349 +0800
@@ -685,6 +685,7 @@
 /* No one using conntrack by the time this called. */
 static void nf_nat_cleanup_conntrack(struct nf_conn *ct)
 {
+	struct net *net = nf_ct_net(ct);
 	struct nf_conn_nat *nat = nf_ct_ext_find(ct, NF_CT_EXT_NAT);
 
 	if (nat == NULL || nat->ct == NULL)
@@ -693,7 +694,8 @@
 	NF_CT_ASSERT(nat->ct->status & IPS_SRC_NAT_DONE);
 
 	spin_lock_bh(&nf_nat_lock);
-	hlist_del_rcu(&nat->bysource);
+	if (net->ct.nat_bysource != NULL)
+		hlist_del_rcu(&nat->bysource);
 	spin_unlock_bh(&nf_nat_lock);
 }
 
@@ -836,11 +838,18 @@
 
 static void __net_exit nf_nat_net_exit(struct net *net)
 {
+	struct hlist_head *htable = NULL;
 	struct nf_nat_proto_clean clean = {};
 
 	nf_ct_iterate_cleanup(net, nf_nat_proto_clean, &clean, 0, 0);
+
+	spin_lock_bh(&nf_nat_lock);
+	htable = net->ct.nat_bysource;
+	net->ct.nat_bysource = NULL;
+	spin_unlock_bh(&nf_nat_lock);
+
 	synchronize_rcu();
-	nf_ct_free_hashtable(net->ct.nat_bysource, net->ct.nat_htable_size);
+	nf_ct_free_hashtable(htable, net->ct.nat_htable_size);
 }
 
 static struct pernet_operations nf_nat_net_ops = {
