diff -ruN linux-4.1.52.orig/net/ipv4/netfilter/nf_nat_pt.c linux-4.1.52/net/ipv4/netfilter/nf_nat_pt.c
--- linux-4.1.52.orig/net/ipv4/netfilter/nf_nat_pt.c	2019-04-12 16:21:38.000000000 +0800
+++ linux-4.1.52/net/ipv4/netfilter/nf_nat_pt.c	2019-04-18 12:42:24.870210776 +0800
@@ -426,15 +426,29 @@
                     PT_MAX_PORTS, total_outport_cnt);
             return cnt;
         }
+//Frank:   if protocol = ALL  ==>  add twice...
 
         // sum of the inports <= PT_MAX_EXPECTED
-        if(total_inport_cnt + (open[2] - open[1] + 1) > PT_MAX_EXPECTED) 
-        {
-            printk("nf_nat_pt: inport range is greater than maximum number total %d. Total inport used = %d.\n", 
-                    PT_MAX_EXPECTED, total_inport_cnt);
-        return cnt;
-        }
-        total_inport_cnt += (open[2] - open[1] + 1);
+        if (open[0] == PT_PROTO_ALL)
+	{
+		if(total_inport_cnt + 2*(open[2] - open[1] + 1) > PT_MAX_EXPECTED) 
+		{
+		printk("nf_nat_pt: inport range is greater than maximum number total %d. Total inport used = %d.\n", 
+			PT_MAX_EXPECTED, total_inport_cnt);
+		return cnt;
+		}
+		total_inport_cnt += 2*(open[2] - open[1] + 1);
+	}
+	else
+	{
+		if(total_inport_cnt + (open[2] - open[1] + 1) > PT_MAX_EXPECTED) 
+		{
+		printk("nf_nat_pt: inport range is greater than maximum number total %d. Total inport used = %d.\n", 
+			PT_MAX_EXPECTED, total_inport_cnt);
+		return cnt;
+		}
+		total_inport_cnt += (open[2] - open[1] + 1);
+	}
 
         outport[idx*3] = trigger[0];
         outport[idx*3+1] = trigger[1];
diff -ruN linux-4.1.52.orig/net/netfilter/nf_conntrack_expect.c linux-4.1.52/net/netfilter/nf_conntrack_expect.c
--- linux-4.1.52.orig/net/netfilter/nf_conntrack_expect.c	2018-03-28 04:15:21.000000000 +0800
+++ linux-4.1.52/net/netfilter/nf_conntrack_expect.c	2019-04-18 12:35:16.334210776 +0800
@@ -644,7 +644,13 @@
 		if (!nf_ct_expect_hsize)
 			nf_ct_expect_hsize = 1;
 	}
-	nf_ct_expect_max = nf_ct_expect_hsize * 4;
+//	nf_ct_expect_max = nf_ct_expect_hsize * 4;
+
+// Frank:  Fix for the port range of porttrigger
+// BugFix:  #96605  [NAT] Port Triggering(Port Range) can't work.
+
+	nf_ct_expect_max = 1000;
+
 	nf_ct_expect_cachep = kmem_cache_create("nf_conntrack_expect",
 				sizeof(struct nf_conntrack_expect),
 				0, 0, NULL);
