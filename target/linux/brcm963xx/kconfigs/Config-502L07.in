# This file is translate from <BRCM SDK 5.02L.07>/bcm963xx/targets/config.in
# you should double check/compile with original PROFILE if you use this file to generate PROFILE for other platforms.

menu "Broadcom SDK Configuration"
	depends on BRCM963xx_SDK_VER_502L07

menu "Chip and Board configuration selection"
choice
	prompt "Broadcom Commengine chip"
	default BRCMSDK502L07_BRCM_63138
	help
		This option decides which chip will be supported.

	config BRCMSDK502L07_BRCM_63268
		bool "63268"
		help 
			Support BCM963268

	config BRCMSDK502L07_BRCM_6838
		bool "6838"
		help
			Support BCM96838

	config BRCMSDK502L07_BRCM_6848
		bool "6848"
		help
			Support BCM96848

	config BRCMSDK502L07_BRCM_6858
		bool "6858"
		help
			Support BCM96858

	config BRCMSDK502L07_BRCM_6846
		bool "6846"
		help
			Support BCM96846

	config BRCMSDK502L07_BRCM_6878
		bool "6878"
		help
			Support BCM96878

	config BRCMSDK502L07_BRCM_47622
		bool "47622"
		help
			Support BCM947622
			
	config BRCMSDK502L07_BRCM_63178
		bool "63178"
		help
			Support BCM963178

	config BRCMSDK502L07_BRCM_6856
		bool "6856"
		help
			Support BCM96856

	config BRCMSDK502L07_BRCM_63138
		bool "63138"
		help
			Support BCM963138

	config BRCMSDK502L07_BRCM_63148
		bool "63148"
		help
			Support BCM963148

	config BRCMSDK502L07_BRCM_63158
		bool "63158"
		help
			Support BCM963158

	config BRCMSDK502L07_BRCM_63381
		bool "63381"
		help
			Support BCM963381

	config BRCMSDK502L07_BRCM_47189
		bool "47189"
		help
			Support BCM947189

	config BRCMSDK502L07_BRCM_4908
		bool "4908"
		help
			Support BCM94908
endchoice #prompt "Broadcom Commengine chip"

config BRCMSDK502L07_BRCM_CHIP
	string
	default "63268"		if BRCMSDK502L07_BRCM_63268
	default "6838"		if BRCMSDK502L07_BRCM_6838
	default "6848"		if BRCMSDK502L07_BRCM_6848
	default "6858"		if BRCMSDK502L07_BRCM_6858
	default "6846"		if BRCMSDK502L07_BRCM_6846
	default "6878"		if BRCMSDK502L07_BRCM_6878
	default "47622"		if BRCMSDK502L07_BRCM_47622
	default "63178"		if BRCMSDK502L07_BRCM_63178
	default "6856"		if BRCMSDK502L07_BRCM_6856
	default "63138"		if BRCMSDK502L07_BRCM_63138
	default "63148"		if BRCMSDK502L07_BRCM_63148
	default "63158"		if BRCMSDK502L07_BRCM_63158
	default "63381"		if BRCMSDK502L07_BRCM_63381
	default "47189"		if BRCMSDK502L07_BRCM_47189
	default "4908"		if BRCMSDK502L07_BRCM_4908
config BRCM502L07_RM_QUOTES_BRCM_CHIP
	def_bool y

config BRCMSDK502L07_BRCM_CHIP_REV
	string "Chip revision" 

config BRCMSDK502L07_BRCM_BUILD_MULTIARCH
	string "Build Multi-architecture userspace" 

config BRCMSDK502L07_BRCM_BOARD_ID
	string "Board ID"

config BRCMSDK502L07_BRCM_VOICE_BOARD_ID
	string "Voice Board ID"

config BRCMSDK502L07_BRCM_GPON_SERIAL_NUMBER
	string "GPON Serial Number"
	default "ZYXE12345678"
config BRCM502L07_RM_QUOTES_BRCM_GPON_SERIAL_NUMBER
	def_bool y

config BRCMSDK502L07_BRCM_GPON_PASSWORD
	string "GPON Password"
	default "1234567890"
config BRCM502L07_RM_QUOTES_BRCM_GPON_PASSWORD
	def_bool y

config BRCMSDK502L07_BRCM_GPON_CT_LOID
	string
	default ""
config BRCM502L07_RM_QUOTES_BRCM_GPON_CT_LOID
	def_bool y

config BRCMSDK502L07_BRCM_GPON_CT_PASSWORD
	string
	default ""
config BRCM502L07_RM_QUOTES_BRCM_GPON_CT_PASSWORD
	def_bool y

if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6858)

	config BRCMSDK502L07_BUILD_BRCM_XDSL_DISTPOINT
		string "xDSL Distpoint support"
		default ""

	if (BRCMSDK502L07_BUILD_BRCM_XDSL_DISTPOINT != "")
		choice
			prompt "xDSL dsp interface"
			default BRCMSDK502L07_BRCM_XDSL_DISTPOINT_USE_RGMII0

			config BRCMSDK502L07_BRCM_XDSL_DISTPOINT_USE_RGMII0
				bool "RGMII0"

			config BRCMSDK502L07_BRCM_XDSL_DISTPOINT_USE_RGMII1
				bool "RGMII1"
		endchoice

		config BRCMSDK502L07_BRCM_XDSL_DISTPOINT_USE_G9991
			bool "xDSL Distpoint G.999.1"

		if BRCMSDK502L07_BRCM_XDSL_DISTPOINT_USE_G9991
			config BRCMSDK502L07_BRCM_XDSL_DISTPOINT_INBAND_ADDRESS
				int "xDSL Distpoint inband address"
		endif
	endif #if (BRCMSDK502L07_BUILD_BRCM_XDSL_DISTPOINT != "")
endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6858)

config BRCMSDK502L07_BRCM_FLASHBLK_SIZE
	int "Flash memory block size in Kbytes"
	default 128

config BRCMSDK502L07_BRCM_NUM_MAC_ADDRESSES
	int "Number of Mac addresses"

config BRCMSDK502L07_BRCM_BASE_MAC_ADDRESS
	string "Base Mac address"

config BRCMSDK502L07_BRCM_PSI_SIZE
	int "PSI Size"
	default 0

# there is also a BUILD_BACKUP_PSI below.  Consolidate these two?
config BRCMSDK502L07_BRCM_BACKUP_PSI
	int "Backup Psi Support: 0-not support,1-support"
	default 0

config BRCMSDK502L07_BRCM_MAIN_TP_NUM
	int "Main Thread Number for CMT core"

# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BUILD_DEFAULTS_VOLUME
#	bool "Manage defaults volume"
#	default n
#
#config BRCMSDK502L07_BRCM_DEFAULTS_VOLSIZE
#	int "Defaults volume size (MB) - zero to fill volume"
#	default 0
#	depends on BRCMSDK502L07_BUILD_DEFAULTS_VOLUME
#
#config BRCMSDK502L07_BUILD_LOCAL_VOLUME
#	bool "Manage /local volume"
#	default n
#
#config BRCMSDK502L07_BRCM_LOCAL_VOLSIZE
#	int "Local (/local) volume size (MB) - zero to fill volume"
#	default 0
#	depends on BRCMSDK502L07_BUILD_LOCAL_VOLUME
# pureSDK502L07 not exist <<<

endmenu #menu "Chip and Board configuration selection"

###################################################################################
menu "Toolchain selection"

if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158)
	choice
		prompt "Userspace build architecture"
		default BRCMSDK502L07_USER_ARCH_ARM
		
		config BRCMSDK502L07_USER_ARCH_ARM
			bool "arm"

		config BRCMSDK502L07_USER_ARCH_AARCH64
			bool "aarch64" 
	endchoice
endif

config BRCMSDK502L07_PROFILE_ARCH
	string
	default "mipsel" if (BRCMSDK502L07_BRCM_60333)
	default "arm" if (((!BRCMSDK502L07_USER_ARCH_AARCH64) && (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158)) || (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_47189 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878))
	default "aarch64" if ((BRCMSDK502L07_USER_ARCH_AARCH64) && (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158))
	default "i386" if (BRCMSDK502L07_BUILD_BRCM_CMS && BRCMSDK502L07_DESKTOP_LINUX)
	default "mips"
config BRCM502L07_RM_QUOTES_PROFILE_ARCH
	def_bool y

config BRCMSDK502L07_KERNEL_ARCH
	string
	default "aarch64" if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158)
	default "arm" if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_47189 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)
config BRCM502L07_RM_QUOTES_KERNEL_ARCH
	def_bool y

choice
	prompt "Toolchain Selection"
	default BRCMSDK502L07_BRCM_USE_STD_TOOLCHAIN

	config BRCMSDK502L07_BRCM_USE_STD_TOOLCHAIN
		bool "Broadcom-Crosstools-Toolchain"

	config BRCMSDK502L07_BRCM_USE_ALT_TOOLCHAIN
		bool "Alternate-Toolchain"
endchoice

if (BRCMSDK502L07_BRCM_USE_ALT_TOOLCHAIN)
config BRCMSDK502L07_BRCM_ALT_TOOLCHAIN_BASE
	string "Alternate Toolchain Base Directory"
config BRCMSDK502L07_BRCM_ALT_ARM_TOOLCHAIN_TOPDIR
	string "Alternate ARM toolchain top directory"
config BRCMSDK502L07_BRCM_ALT_ARM_TOOLCHAIN_PREFIX
	string "Alternate ARM toolchain prefix"
config BRCMSDK502L07_BRCM_ALT_ARM_TOOLCHAIN_VER
	string "Alternate ARM toolchain version"
config BRCMSDK502L07_BRCM_ALT_ARM_TOOLCHAIN_SYSROOT_DIR
	string "Alternate ARM toolchains sysroot directory"
config BRCMSDK502L07_BRCM_ALT_AARCH64_TOOLCHAIN_TOPDIR
	string "Alternate AARCH64 toolchain top directory"
config BRCMSDK502L07_BRCM_ALT_AARCH64_TOOLCHAIN_PREFIX
	string "Alternate AARCH64 toolchain prefix"
config BRCMSDK502L07_BRCM_ALT_AARCH64_TOOLCHAIN_VER
	string "Alternate AARCH64 toolchain version"
config BRCMSDK502L07_BRCM_ALT_AARCH64_TOOLCHAIN_SYSROOT_DIR
	string "Alternate AARCH64 toolchains sysroot directory"
endif

choice
	prompt "Base Library"
	default BRCMSDK502L07_BRCM_UCLIBC if (BRCMSDK502L07_PROFILE_ARCH = "arm" || BRCMSDK502L07_PROFILE_ARCH != "aarch64")
	default BRCMSDK502L07_BRCM_GLIBC if (BRCMSDK502L07_PROFILE_ARCH = "aarch64")
	
	config BRCMSDK502L07_BRCM_UCLIBC
		bool "UCLIBC"
		depends on (BRCMSDK502L07_PROFILE_ARCH = "arm" || BRCMSDK502L07_PROFILE_ARCH != "aarch64")

	config BRCMSDK502L07_BRCM_GLIBC
		bool "GLIBC"
		depends on (BRCMSDK502L07_PROFILE_ARCH = "arm" || BRCMSDK502L07_PROFILE_ARCH = "aarch64")
endchoice

endmenu # menu "Toolchain selection"

###################################################################################
menu "File system selection"

choice
	prompt "Root file system"
	default BRCMSDK502L07_BRCM_ROOTFS_CONFIG

	config BRCMSDK502L07_BRCM_ROOTFS_SQUASHFS
		bool "Legacy_SQUASHFS_Presets"

	config BRCMSDK502L07_BRCM_ROOTFS_ALL
		bool "Legacy_JFFS2+UBIFS+SQUASHFS_Presets"

	config BRCMSDK502L07_BRCM_ROOTFS_CONFIG
		bool "Configurable"
endchoice # choice prompt "Root file system"

config BRCMSDK502L07_BRCM_FLASH_BUILD_NOR
	bool
	default "y" if BRCMSDK502L07_BRCM_ROOTFS_ALL || BRCMSDK502L07_BRCM_ROOTFS_SQUASHFS
	depends on BRCMSDK502L07_BRCM_ROOTFS_ALL || BRCMSDK502L07_BRCM_ROOTFS_SQUASHFS

config BRCMSDK502L07_BRCM_FLASH_BUILD_NAND
	bool "    Build NAND Images"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL
	default n
	depends on BRCMSDK502L07_BRCM_ROOTFS_ALL || BRCMSDK502L07_BRCM_ROOTFS_CONFIG

config BRCMSDK502L07_BRCM_FLASH_NAND_LAYOUT_SPLIT
	bool "        Split JFFS2/UBI layout (deprecated)"
	depends on (BRCMSDK502L07_BRCM_ROOTFS_CONFIG && !BRCMSDK502L07_BRCM_6846) || (BRCMSDK502L07_BRCM_ROOTFS_ALL && !BRCMSDK502L07_BRCM_6846 && !BRCMSDK502L07_BRCM_6856 && !BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BRCM_FLASH_NAND_LAYOUT_PUREUBI
	bool "        Pure UBI layout"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL
	depends on BRCMSDK502L07_BRCM_ROOTFS_CONFIG || BRCMSDK502L07_BRCM_ROOTFS_ALL

config BRCMSDK502L07_BRCM_FLASH_NAND_ROOTFS_UBIFS
	bool "        NAND ROOTFS Filesystem UBIFS"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL
	depends on BRCMSDK502L07_BRCM_ROOTFS_CONFIG || BRCMSDK502L07_BRCM_ROOTFS_ALL

config BRCMSDK502L07_BRCM_FLASH_NAND_ROOTFS_SQUBI
	bool "        NAND ROOTFS Filesystem SQUASHFS"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL
	depends on BRCMSDK502L07_BRCM_ROOTFS_CONFIG || BRCMSDK502L07_BRCM_ROOTFS_ALL

config BRCMSDK502L07_BUILD_EMMC_IMG
	bool "    Build eMMC Images"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC
	depends on BRCMSDK502L07_BRCM_ROOTFS_CONFIG || (BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC)

config BRCMSDK502L07_BRCM_FLASH_EMMC_ROOTFS_EXT4
	bool "        eMMC ROOTFS Filesystem EXT4"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC
	depends on (BRCMSDK502L07_BRCM_ROOTFS_CONFIG && BRCMSDK502L07_BUILD_EMMC_IMG) || (BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC)

config BRCMSDK502L07_BRCM_FLASH_EMMC_ROOTFS_SQUASHFS
	bool "        eMMC ROOTFS Filesystem SQUASHFS"
	default y if BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC
	depends on (BRCMSDK502L07_BRCM_ROOTFS_CONFIG && BRCMSDK502L07_BUILD_EMMC_IMG) || (BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC)

menu "NAND Options"
	config BRCMSDK502L07_BUILD_NAND_IMG_BLKSIZE_16KB
		bool "NAND image with 16KB block size"
		depends on ((BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND) && (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63381))

	config BRCMSDK502L07_BUILD_NAND_KERNEL_LZMA
		bool "NAND image with lzma kernel"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_NAND_KERNEL_LZ4
		bool "NAND image with lz4 kernel"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_NAND_IMG_BLKSIZE_128KB
		bool "NAND image with 128KB block size"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_NAND_IMG_BLKSIZE_256KB
		bool "NAND image with 256KB block size"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_NAND_IMG_BLKSIZE_512KB
		bool "NAND image with 512KB block size"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_NAND_IMG_BLKSIZE_1024KB
		bool "NAND image with 1024KB block size"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)	

	config BRCMSDK502L07_BRCM_ROOTFS_RW
		bool "Mount UBI and JFFS2 ROOTFS as read-write (required by Modular Software Update and OSGi)"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BUILD_MTDUTILS
		bool "Include MTD UTILS diagnostics on device"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)

	config BRCMSDK502L07_BLD_FLASH_TOOLS
		bool "Include CFE NAND debug tools"
		depends on (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)
endmenu

config BRCMSDK502L07_BRCM_MISC1_PARTITION_SIZE
	int "MISC1 partition SIZE"
	default 0

config BRCMSDK502L07_BRCM_MISC2_PARTITION_SIZE
	int "MISC2 partition SIZE"
	default 0

config BRCMSDK502L07_BRCM_MISC3_PARTITION_SIZE
	int "MISC3 partition SIZE"
	default 0

config BRCMSDK502L07_BRCM_MISC4_PARTITION_SIZE
	int "MISC4(Data) partition SIZE"
	default 4

config BRCMSDK502L07_BRCM_CFG_USER_PARTITIONS 
	bool "Configure User Partitions"
	default n

config BRCMSDK502L07_BRCM_PARTITION_CFG_FILE
	string "        Name of Partition Configuration File"
	depends on (BRCMSDK502L07_BRCM_CFG_USER_PARTITIONS)

config BRCMSDK502L07_BUILD_E2FSPROGS
	def_bool y
	depends on ((BRCMSDK502L07_BRCM_ROOTFS_CONFIG && BRCMSDK502L07_BUILD_EMMC_IMG) || (BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC) || (BRCMSDK502L07_BUILD_MODSW_EE))

config BRCMSDK502L07_BUILD_GPTFDISK
	def_bool y
	depends on (BRCMSDK502L07_BRCM_ROOTFS_CONFIG && BRCMSDK502L07_BUILD_EMMC_IMG) || (BRCMSDK502L07_BRCM_ROOTFS_ALL && BRCMSDK502L07_BRCM_DRIVER_EMMC)

	config BRCMSDK502L07_BUILD_LIBPOPT
		def_bool y
		depends on BRCMSDK502L07_BUILD_GPTFDISK

	config BRCMSDK502L07_BUILD_LIBUUID
		def_bool y
		depends on BRCMSDK502L07_BUILD_GPTFDISK


config BRCMSDK502L07_BRCM_SQUASHFS_FRAGMENT_CACHE_SIZE
	int "  SquashFS fragment cache size in # of blocks"
	default 1
	depends on (BRCMSDK502L07_BRCM_FLASH_BUILD_NOR)

choice
	prompt "NOR Flash Kernel Image Compression"
	default BRCMSDK502L07_BUILD_NOR_KERNEL_LZMA
	depends on (BRCMSDK502L07_BRCM_FLASH_BUILD_NOR)

	config BRCMSDK502L07_BUILD_NOR_KERNEL_LZMA
		bool "LZMA"

	config BRCMSDK502L07_BUILD_NOR_KERNEL_LZ4
		bool "LZ4"
endchoice

config BRCMSDK502L07_DISABLE_NOR_RAW_PARTITION
	bool "Disable NOR Flash raw partition"
	depends on (BRCMSDK502L07_BRCM_FLASH_BUILD_NOR && (BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_47622))

config BRCMSDK502L07_BRCM_KERNEL_ROOTFS
	string
	default "squashfs" if BRCMSDK502L07_BRCM_ROOTFS_SQUASHFS
	default "all"    if (BRCM502L07_BRCM_FLASH_BUILD_NAND || BRCMSDK502L07_BRCM_FLASH_BUILD_NAND)
config BRCM502L07_RM_QUOTES_BRCM_KERNEL_ROOTFS
	def_bool y

config BRCMSDK502L07_BRCM_RAMDISK_BOOT_EN
	bool "Enable boot from RAMDISK support"

config BRCMSDK502L07_BRCM_RAMDISK_SIZE
	int "  RAMDISK size (if not used, kernel will release it automatically)"
	default 8192
	depends on BRCMSDK502L07_BRCM_RAMDISK_BOOT_EN

config BRCMSDK502L07_BRCM_NFS_MOUNT_EN
	bool "Enable NFS Mount"

config BRCMSDK502L07_BRCM_INCREMENTAL_IMAGE_LOAD
	bool "Enable Incremental Image loading"

config BRCMSDK502L07_BRCM_NO_AUTOCOMMIT_IMAGE
	bool "Delay commit of image until successful reboot to Linux [instead of default commit image after write]"

endmenu #menu "File system selection"

###################################################################################
menu "Kernel configuration selection"

choice
	prompt "Linux Version"
	default BRCMSDK502L07_LINUX_3_4_0_RT
	help
		select kernel version

	config BRCMSDK502L07_LINUX_3_4_0_RT
		bool "Linux_3.4_Rt"

	config BRCMSDK502L07_LINUX_3_14_0
		bool "Linux_3.4"

	config BRCMSDK502L07_LINUX_4_1_0
		bool "Linux_4.1_0"

	config BRCMSDK502L07_LINUX_4_19_0
		bool "Linux_4.19_0"
endchoice #prompt "Linux Version"

config BRCMSDK502L07_PROFILE_KERNEL_VER
	string
	default "LINUX_3_4_0_RT" if BRCMSDK502L07_LINUX_3_4_0_RT
	default "LINUX_3_14_0" if BRCMSDK502L07_LINUX_3_14_0
	default "LINUX_4_1_0" if BRCMSDK502L07_LINUX_4_1_0
	default "LINUX_4_19_0" if BRCMSDK502L07_LINUX_4_19_0
config BRCM502L07_RM_QUOTES_PROFILE_KERNEL_VER
	def_bool y

# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BRCM_SMP_EN
#	bool "Enable kernel SMP support"
# pureSDK502L07 not exist <<<

config BRCMSDK502L07_BRCM_KERNEL_PREEMPT
	bool "Enable kernel preemption"

config BRCMSDK502L07_BRCM_SCHED_RT_PERIOD
	int "Scheduler RT period"
	default 1000000

config BRCMSDK502L07_BRCM_SCHED_RT_RUNTIME
	int "Scheduler RT runtime"
	default 1000000

config BRCMSDK502L07_BRCM_SCHED_RT_SHARE
	bool "Scheduler RT RQ sharing"

config BRCMSDK502L07_BRCM_PROC_CPU_AFFINITY_HINT
	bool "Allow process to recover its cpu affinity mask when feasible"

config BRCMSDK502L07_BRCM_CONFIG_HIGH_RES_TIMERS
	bool "High resolution timer support"

config BRCMSDK502L07_BCM_HARDIRQ_COUNT_CYCLES
	bool "Count cycles spent in HardIRQ"

config BRCMSDK502L07_BCM_CGROUPS
	bool "CGROUPS"

config BRCMSDK502L07_BCM_CGROUP_BCM
	bool "Broadcom CGROUPS modifications"
	depends on BRCMSDK502L07_BCM_CGROUPS

config BRCMSDK502L07_BCM_KERNEL_CMDLINE_BOOL
	bool "Enable compiled-in kernel cmdline"

config BRCMSDK502L07_BCM_KERNEL_CMDLINE
	string "CMDLINE"
	depends on BRCMSDK502L07_BCM_KERNEL_CMDLINE_BOOL

config BRCMSDK502L07_BCM_KERNEL_CMDLINE_OVERRIDE
	bool "Override cmdline from bootloader with this cmdline"
	depends on BRCMSDK502L07_BCM_KERNEL_CMDLINE_BOOL
	
config BRCMSDK502L07_BRCM_ANDROID
	bool "Enable Android support"

if BRCMSDK502L07_BRCM_6838
	config BRCMSDK502L07_BCM_SUPPORT_512MB_DDR
		bool "Support 512MB DDR"
endif

config BRCMSDK502L07_BRCM_WAN_2_WAN_FWD_ENABLED
	bool "Enable Packet Forwarding between two WAN Interfaces"

config BRCMSDK502L07_BRCM_KERNEL_BONDING
	bool "Enable Kernel Bonding Driver"

config BRCMSDK502L07_BRCM_RUNNER_FLOODING
	bool "Enable Runner Flooding to LAN ports"

config BRCMSDK502L07_BRCM_SPECTRE_PATCH_ENABLE
	bool "Enable Spectre Patch"

config BRCMSDK502L07_BP_PHYS_INTF
	bool "Enable Board Parameter Physical Interface Configuration"

config  BRCMSDK502L07_BRCM_CMA_RSVMEM
	bool "Enable Linux CMA based memory reservation"

###################################################################################
menu "Kernel Cryptographic selection"

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO
	bool "Cryptographic API"

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_HMAC
	bool "HMAC support"           if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_NULL
	bool "Null algorithms"        if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_MD5
	bool "MD5 digest algorithms"  if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_SHA1
	bool "SHA1 digest algorithms" if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_SHA2
	bool "SHA2 digest algorithms" if BRCMSDK502L07_BRCM_KERNEL_CRYPTO && (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_DES
	bool "DES and Triple DES EDE cipher algorithms" if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_AES
	bool "AES cipher algorithms"   if BRCMSDK502L07_BRCM_KERNEL_CRYPTO

endmenu #menu "Kernel Cryptographic selection"

###################################################################################
menu "Misc Drivers (other drivers are grouped with their features)"

config BRCMSDK502L07_BRCM_DRIVER_PCI
	bool "PCI"

config BRCMSDK502L07_BRCM_PCIE_SSC
	bool "Enable Spread Spectrum Clocking"

config BRCMSDK502L07_BRCM_PCIE_PLATFORM
	bool "PCI Express repower module"
	depends on (BRCMSDK502L07_BRCM_DRIVER_PCI && (BRCMSDK502L07_KERNEL_ARCH="arm" || BRCMSDK502L07_KERNEL_ARCH="aarch64"))

config BRCMSDK502L07_BRCM_DRIVER_PCI_MSI
	bool "Use PCI MSI Interrupts (EXPERIMENTAL)"
	depends on (BRCMSDK502L07_BRCM_DRIVER_PCI && (BRCMSDK502L07_KERNEL_ARCH="arm" || BRCMSDK502L07_KERNEL_ARCH="aarch64"))

config BRCMSDK502L07_BRCM_DRIVER_I2C
	tristate "I2C"
	depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_DRIVER_OPTICALDET
	tristate "Optical WAN detect"
	depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BRCM_PON_WAN_TYPE_AUTO_DETECT
	def_bool y if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846)

config BRCMSDK502L07_BRCM_DRIVER_HS_UART
	tristate "High Speed UART"
	depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BRCM_DRIVER_EMMC
	bool "EMMC"
	depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856)

config BRCMSDK502L07_BRCM_DRIVER_I2S
	tristate "I2S"
	depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158)

config BRCMSDK502L07_BRCM_DRIVER_ISDN
	tristate "ISDN"

config BRCMSDK502L07_BRCM_DRIVER_EXT_TIMER
	bool "EXT_TIMER"

config BRCMSDK502L07_BRCM_DRIVER_WDT # BRCMSDK502L07_BRCM_DRIVER_WATCHDOG_TIMER @ 416L05
	default y if (BRCMSDK502L07_SECURE_BOOT_ARCH="GEN3") && (BCM_FAILSAFE_BOOT = "y")
	bool "Watchdog Timer"

config BRCMSDK502L07_BRCM_DRIVER_TIMER
	bool "Broadcom Timer"
	depends on BRCMSDK502L07_BRCM_DRIVER_EXT_TIMER

config BRCMSDK502L07_BRCM_DRIVER_OTP
	tristate "OTP"
	depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6858|| BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_4908)

config BRCMSDK502L07_BRCM_DRIVER_PMC
	bool "PMC"
	depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BRCM_DRIVER_ACP
	bool "ACP"
	depends on BRCMSDK502L07_BRCM_63138
	
endmenu #menu "Misc Drivers (other drivers are grouped with their features)"
endmenu #menu "Kernel configuration selection"

###################################################################################
menu "Major Feature Selection"

choice
	prompt "Select Configuration System"
	default BRCMSDK502L07_BUILD_BRCM_CMS

	config BRCMSDK502L07_BUILD_BRCM_BASE_SHELL
		bool "BASE_SHELL"

	config BRCMSDK502L07_BUILD_BRCM_CMS
		bool "CMS"

	config BRCMSDK502L07_BUILD_BRCM_HNDROUTER
		bool "HNDROUTER"
endchoice

choice
	prompt "Data Model Selection"
	default BRCMSDK502L07_BUILD_DM_HYBRID
	depends on BRCMSDK502L07_BUILD_BRCM_CMS

	config BRCMSDK502L07_BUILD_DM_LEGACY98
		bool "TR98"

	config BRCMSDK502L07_BUILD_DM_HYBRID
		bool "Hybrid_TR98+TR181"

	config BRCMSDK502L07_BUILD_DM_PURE181
		bool "Pure_TR181"

	config BRCMSDK502L07_BUILD_DM_DETECT
		bool "DM_Detect"
endchoice

config BRCMSDK502L07_DESKTOP_LINUX
	bool "Build CMS for DESKTOP LINUX"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS

config BRCMSDK502L07_BUILD_DESKTOP_BEEP
	bool "Build DESKTOP BEEP"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS && BRCMSDK502L07_DESKTOP_LINUX

config BRCMSDK502L07_BUILD_CUSTOMER
	bool "Support Customer features"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS

config BRCMSDK502L07_BUILD_CUSTOMER_NAME
	string "Customer Name"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS && BRCMSDK502L07_BUILD_CUSTOMER

config BRCMSDK502L07_BRCM_KERNEL_NF_FIREWALL_EXT
	tristate "Firewall support extension"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS && BRCMSDK502L07_BUILD_CUSTOMER

config BRCMSDK502L07_BUILD_CONSOLED
	bool "consoled"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS

# 502L07 modified >>>
#comment "Build HND Router"
config BRCMSDK502L07_BUILD_BSTREAM_IQOS
	bool "Build HND Broadstrem iQos"
# 502L07 modified <<<

config BRCMSDK502L07_BUILD_GENCFG_TOOLS
	bool "Build Generic Config tools" if !(BRCMSDK502L07_BUILD_BRCM_CMS || BRCMSDK502L07_BUILD_BRCM_HNDROUTER)

config BRCMSDK502L07_BUILD_BTEST_TOOLS
	bool "Build Internal Boardtest Config tools" if !(BRCMSDK502L07_BUILD_BRCM_CMS || BRCMSDK502L07_BUILD_BRCM_HNDROUTER)
		
choice
	prompt "Busybox build type"
	default BRCM502L07_BUSYBOX_DONT_BUILD

config BRCM502L07_BUSYBOX_DONT_BUILD
	bool "don't build"

config BRCM502L07_BUSYBOX_DYNAMIC_BUILD
	bool "dynamic"

config BRCM502L07_BUSYBOX_STATIC_BUILD
	bool "static"

endchoice

if (BRCM502L07_BUSYBOX_DYNAMIC_BUILD || BRCM502L07_BUSYBOX_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_BUSYBOX
		string
		default "dynamic" if BRCM502L07_BUSYBOX_DYNAMIC_BUILD
		default "static"  if BRCM502L07_BUSYBOX_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_BUSYBOX
		def_bool y

menu "Busybox Options"
	choice
		prompt "Busybox Feature Group"
		default BRCMSDK502L07_BUILD_BUSYBOX_BRCM_FULL

		config BRCMSDK502L07_BUILD_BUSYBOX_BRCM_LITE
			bool "Lite"

		config BRCMSDK502L07_BUILD_BUSYBOX_BRCM_FULL
			bool "Full"

		config BRCMSDK502L07_BUILD_BUSYBOX_BRCM_VANILLA
			bool "Vanilla"		
	endchoice

	config BRCMSDK502L07_BUILD_WGET_HTTPS
		bool "Support Wget Https in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_GUNZIP
		bool "Support gunzip in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_GZIP
		bool "Support gzip in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_UNTAR
		bool "Support untar in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_TAR
		bool "Support tar in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_TELNET
		bool "Support telnet in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_VI
		bool "Support vi in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_AWK
		bool "Support awk in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_PIDOF
		bool "Support pidof in busybox"

	config BRCMSDK502L07_BUILD_BUSYBOX_NTPD
		bool "Support ntpd in busybox"
endmenu
endif #if (BRCM502L07_BUSYBOX_DYNAMIC_BUILD || BRCM502L07_BUSYBOX_STATIC_BUILD)

config BRCMSDK502L07_BUILD_IPV6
	bool "Enable IPV6"

# tristate2 --->>>
choice
	prompt "Interface Grouping(vconfig)"
	default BRCM502L07_VCONFIG_DONT_BUILD

	config BRCM502L07_VCONFIG_DONT_BUILD
		bool "don't build"

	config BRCM502L07_VCONFIG_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_VCONFIG_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_VCONFIG_DYNAMIC_BUILD || BRCM502L07_VCONFIG_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_VCONFIG
		string
		default "dynamic" if BRCM502L07_VCONFIG_DYNAMIC_BUILD
		default "static"  if BRCM502L07_VCONFIG_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_VCONFIG
		def_bool y
endif
# tristate2 ---<<<

config BRCMSDK502L07_BUILD_BRCM_INTERNAL
	bool "Prompt for internal Broadcom Engineering Parameters"

config BRCMSDK502L07_BUILD_NEWLIBS
	depends on BRCMSDK502L07_BUILD_BRCM_INTERNAL
	bool "Build new libraries regardless"

config BRCMSDK502L07_BRCM_DRIVER_SPDSVC
	tristate "Broadcom Speed Service"
        select PACKAGE_brcm-license

config BRCMSDK502L07_BRCM_DRIVER_SPDTEST
	tristate "Broadcom TCP/UDP Speed Test Offload"
	depends on (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_4908)

config BRCMSDK502L07_BRCM_DRIVER_LICENSE
	tristate "Broadcom License"
	depends on (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_4908)

config BRCMSDK502L07_BUILD_BOOT_BLOCK_HOUSEKEEPING
	bool "Building NAND Housekeeping Utility"

if (BRCMSDK502L07_BUILD_BOOT_BLOCK_HOUSEKEEPING)
config BRCMSDK502L07_HOUSEKEEPING_BOOTBLOCK_TIME_UNTIL_NEXT_CHECK
	int "Total uptime until next boot block check"
	default 8640000

config BRCMSDK502L07_HOUSEKEEPING_BOOTBLOCK_CHECK_FILE_SYNC_TIME
	int "Total uptime until next boot block check"
	default 3600

config BRCMSDK502L07_HOUSEKEEPING_BOOTBLOCK_CHECK_BOOT_COUNTS
	int "Total uptime until next boot block check"
	default 100
	
config BRCMSDK502L07_HOUSEKEEPING_SLEEP_DURATION
	int "sleep time for housekeeping task"
	default 3600
endif

endmenu #menu "Major Feature Selection"

###################################################################################
if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)
menu "DSL/XTM selection"

choice
	prompt "xDSL PHY"
	depends on (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)
	default BRCMSDK502L07_BUILD_PHY_MULTIMODE

	config BRCMSDK502L07_BUILD_PHY_ADSL
		bool "ADSL"

	config BRCMSDK502L07_BUILD_PHY_VDSL
		bool "VDSL"

	config BRCMSDK502L07_BUILD_PHY_MULTIMODE
		bool "Multi-mode"
endchoice

config BRCMSDK502L07_BRCM_PHY_BONDING
	bool "Support xDSL Bonding"
	depends on (BRCMSDK502L07_BRCM_6368 || BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_MULTI_PHY
	bool "Support xDSL Multi-PHY"
	depends on (BRCMSDK502L07_BRCM_6368 || BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_EXT_PHY_BONDING
	bool "Support xDSL External Bonding"
	depends on (BRCMSDK502L07_BRCM_6368 || BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_PHY_BONDING5B
	bool "Support xDSL 5-band Bonding"
	depends on (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_PHY_GINP_RTX
	bool "Support xDSL G.inp Retransmission"
	depends on (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_PHY_BONDING_C0
	bool "Support xDSL Multiple Bonding PHY"
	depends on (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_PHY_GFAST
	bool "Support xDSL G.fast"
	depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63158)

config BRCMSDK502L07_BRCM_PHY_CO
	bool "Support xDSL CO"
	depends on (BRCMSDK502L07_BRCM_63158)

config BRCMSDK502L07_BRCM_55153_DPU
	bool "Support 55153 DPU"
	depends on (BRCMSDK502L07_BRCM_63158)

config BRCMSDK502L07_BRCM_PHY_GFASTCOMBO
	bool "Support xDSL G.fast Combo"
	depends on BRCMSDK502L07_BRCM_PHY_GFAST

choice
	prompt "xDSL standard"
	default BRCMSDK502L07_BRCM_ADSL_ANNEX_A

	config BRCMSDK502L07_BRCM_ADSL_ANNEX_A
		bool "ANNEX_A"

	config BRCMSDK502L07_BRCM_ADSL_ANNEX_B
		bool "ANNEX_B"

	config BRCMSDK502L07_BRCM_ADSL_ANNEX_C
		bool "ANNEX_C"

	config BRCMSDK502L07_BRCM_ADSL_SADSL
		bool "SADSL"
endchoice #prompt "xDSL standard"

config BRCMSDK502L07_BRCM_ADSL_STANDARD
	string
	default "ANNEX_A" if BRCMSDK502L07_BRCM_ADSL_ANNEX_A
	default "ANNEX_B" if BRCMSDK502L07_BRCM_ADSL_ANNEX_B
	default "ANNEX_C" if BRCMSDK502L07_BRCM_ADSL_ANNEX_C
	default "SADSL" if BRCMSDK502L07_BRCM_ADSL_SADSL
config BRCM502L07_RM_QUOTES_BRCM_ADSL_STANDARD
	def_bool y

config BRCMSDK502L07_CPE_ANNEX_A
	def_bool y
	depends on BRCMSDK502L07_BRCM_ADSL_ANNEX_A

config BRCMSDK502L07_CPE_ANNEX_B
	def_bool y
	depends on BRCMSDK502L07_BRCM_ADSL_ANNEX_B

config BRCMSDK502L07_BRCM_ANNEXAB_COMBO
	depends on BRCMSDK502L07_BRCM_ADSL_ANNEX_A
	bool "Support ADSL AnnexAB Combo"

config BRCMSDK502L07_BRCM_DRIVER_ADSL
	tristate "xDSL Driver"

if (BRCMSDK502L07_BRCM_DRIVER_ADSL || BRCMSDK502L07_BRCM_DRIVER_ADSL = "m" )
	config BRCMSDK502L07_BUILD_DSL
		def_bool y
# tristate3 --->>>
	choice
		prompt "xDSL Control Utility"
		default BRCM502L07_XDSLCTL_DYNAMIC_BUILD

		config BRCM502L07_XDSLCTL_DONT_BUILD
			bool "don't build"

		config BRCM502L07_XDSLCTL_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_XDSLCTL_STATIC_BUILD
			bool "static"
	endchoice

if (BRCM502L07_XDSLCTL_DYNAMIC_BUILD || BRCM502L07_XDSLCTL_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_XDSLCTL
		string
		default "dynamic" if BRCM502L07_XDSLCTL_DYNAMIC_BUILD
		default "static"  if BRCM502L07_XDSLCTL_STATIC_BUILD
endif
# tristate3 ---<<<
	config BRCM502L07_RM_QUOTES_BUILD_XDSLCTL
		def_bool y
		depends on BRCM502L07_XDSLCTL_DYNAMIC_BUILD || BRCM502L07_XDSLCTL_STATIC_BUILD

		config BRCMSDK502L07_BUILD_DSLDIAGD
		bool "DSL Diag daemon"

	config BRCMSDK502L07_BUILD_DSL_LOOP_DIAG
		bool "DSL Loop Diagnostics"

	config BRCMSDK502L07_BRCM_PHY_LOOPBACK
		bool "Support xDSL Phy Loopback"

	config BRCMSDK502L07_BUILD_DSL_SELT_TEST
		bool "DSL SELT TEST"

	config BRCMSDK502L07_BRCM_DRIVER_XTM
		tristate "XTM Driver"
		default m

# tristate4 --->>>
	choice
		prompt "XTM Control Utility"
		default BRCM502L07_XTMCTL_DYNAMIC_BUILD

		config BRCM502L07_XTMCTL_DONT_BUILD
			bool "don't build"

		config BRCM502L07_XTMCTL_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_XTMCTL_STATIC_BUILD
			bool "static"
	endchoice

if (BRCM502L07_XTMCTL_DYNAMIC_BUILD || BRCM502L07_XTMCTL_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_XTMCTL
		string
		default "dynamic" if BRCM502L07_XTMCTL_DYNAMIC_BUILD
		default "static"  if BRCM502L07_XTMCTL_STATIC_BUILD
endif
# tristate4 ---<<<
	config BRCM502L07_RM_QUOTES_BUILD_XTMCTL
		def_bool y
		depends on BRCM502L07_XTMCTL_DYNAMIC_BUILD || BRCM502L07_XTMCTL_STATIC_BUILD

	config BRCMSDK502L07_BUILD_ATMWAN
		bool "ATM as WAN Interface"

	config BRCMSDK502L07_BUILD_PTMWAN
		bool "PTM as WAN Interface"

	config BRCMSDK502L07_BUILD_ATMLOOPBACK
		def_bool y if BRCMSDK502L07_BUILD_ATMWAN
		def_bool n if !BRCMSDK502L07_BUILD_ATMWAN


	config BRCMSDK502L07_BRCM_DRIVER_EXT_BONDING
		tristate 'External xDSL Bonding Driver'
		default n if BRCMSDK502L07_BRCM_EXT_PHY_BONDING


endif #if (BRCMSDK502L07_BRCM_DRIVER_ADSL)

if (!BRCMSDK502L07_BRCM_DRIVER_ADSL && BRCMSDK502L07_BRCM_DRIVER_ADSL != "m" )
	config BRCMSDK502L07_BUILD_DSL
		def_bool n

	#config BRCMSDK502L07_BUILD_XDSLCTL
	#	string
	#	default "n"
	#config BRCM502L07_RM_QUOTES_BUILD_XDSLCTL
	#	def_bool y
	#	depends on BRCMSDK502L07_BUILD_XDSLCTL

	config BRCMSDK502L07_BUILD_DSLDIAGD
		def_bool n

	config BRCMSDK502L07_BUILD_BEEP_DSLDIAGD
		def_bool n

	config BRCMSDK502L07_BUILD_DSL_LOOP_DIAG
		def_bool n

	config BRCMSDK502L07_BRCM_DRIVER_XTM
		def_tristate n

	#config BRCMSDK502L07_BUILD_XTMCTL
	#	string
	#	default "n"
	#config BRCM502L07_RM_QUOTES_BUILD_XTMCTL
	#	def_bool y
	#	depends on BRCMSDK502L07_BUILD_XTMCTL

	config BRCMSDK502L07_BUILD_ATMWAN
		def_bool n

	config BRCMSDK502L07_BUILD_PTMWAN
		def_bool n

	config BRCMSDK502L07_BUILD_ATMLOOPBACK
		def_bool n

	config BRCMSDK502L07_BRCM_DRIVER_EXT_BONDING
		def_tristate n
endif #if !(BRCMSDK502L07_BRCM_DRIVER_ADSL)

endmenu #menu "DSL/XTM selection"
endif #if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158)

###################################################################################
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_6878)
comment "WAN Selection"
menu "GPON Selection"

config BRCMSDK502L07_BRCM_DRIVER_GPON
	tristate "GPON Driver"

config BRCMSDK502L07_BCM_MAX_GEM_PORTS
	int "Number of GEM Ports (32-256)"
	default 256

if (BRCMSDK502L07_BRCM_DRIVER_GPON)
# Build GPON is for CMS, it just means we have GPON on this system.
config BRCMSDK502L07_BUILD_GPON
	def_bool y

# what are these two for?  Cannot find any files that use these >>>
config BRCMSDK502L07_BRCM_GPON
	def_bool y
config BRCMSDK502L07_BRCM_OMCI
	def_bool y
## what are these two for?  Cannot find any files that use these <<<

if ( BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 )
config BRCMSDK502L07_BUILD_NGPON
	bool "XGPON1/XGS/NGPON2 support"

config BRCMSDK502L07_BUILD_NGPON_AMD2
	bool "989.3AMD2 / 9807.1AMD1 support"

endif #if ( BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 )

endif #if (BRCMSDK502L07_BRCM_DRIVER_GPON)

config BRCMSDK502L07_BUILD_OMCI
	bool "Support GPON OMCI"

config BRCMSDK502L07_BUILD_BCMIPC
	bool "Support BCM IPC"

config BRCMSDK502L07_BUILD_OMCI_AUTH
	bool "Support OMCI Authentication"
	depends on BRCMSDK502L07_BUILD_OMCI

config BRCMSDK502L07_BUILD_VENDOR_OMCI
	bool "Support Vendor-specific OMCI"
	depends on BRCMSDK502L07_BUILD_OMCI

config BRCMSDK502L07_BUILD_VENDOR_OMCI_NAME
	bool "Vendor-specific OMCI Name"
	depends on BRCMSDK502L07_BUILD_OMCI && BRCMSDK502L07_BUILD_VENDOR_OMCI

choice
	prompt "GPONIF Utility"
	default BRCM502L07_GPONIF_DONT_BUILD

	config BRCM502L07_GPONIF_DONT_BUILD
		bool "don't build"

	config BRCM502L07_GPONIF_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_GPONIF_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_GPONIF
	string
	default "dynamic" if BRCM502L07_GPONIF_DYNAMIC_BUILD
	default "static"  if BRCM502L07_GPONIF_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_GPONIF
	def_bool y
	depends on BRCM502L07_GPONIF_DYNAMIC_BUILD || BRCM502L07_GPONIF_STATIC_BUILD

choice
	prompt "GPOND Utility"
	default BRCM502L07_GPOND_DONT_BUILD

	config BRCM502L07_GPOND_DONT_BUILD
		bool "don't build"

	config BRCM502L07_GPOND_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_GPOND_STATIC_BUILD
		bool "static"
endchoice
	
config BRCMSDK502L07_BUILD_GPOND
	string
	default "dynamic" if BRCM502L07_GPOND_DYNAMIC_BUILD
	default "static"  if BRCM502L07_GPOND_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_GPOND
	def_bool y
	depends on BRCM502L07_GPOND_DYNAMIC_BUILD || BRCM502L07_GPOND_STATIC_BUILD
	
choice
	prompt "GPONCTL Utility"
	default BRCM502L07_GPONCTL_DONT_BUILD

	config BRCM502L07_GPONCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_GPONCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_GPONCTL_STATIC_BUILD
		bool "static"
endchoice
	
config BRCMSDK502L07_BUILD_GPONCTL
	string
	default "dynamic" if BRCM502L07_GPONCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_GPONCTL_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_GPONCTL
	def_bool y
	depends on BRCM502L07_GPONCTL_DYNAMIC_BUILD || BRCM502L07_GPONCTL_STATIC_BUILD

choice
	prompt "GponRG"
	default BRCMSDK502L07_USE_GPONRG_OMCI_LIGHT

	config BRCMSDK502L07_USE_GPONRG_OMCI_LIGHT
		bool "GponRGt-OMCI-Light"

	config BRCMSDK502L07_USE_GPONRG_OMCI_FULL
		bool "GponRG-OMCI-Full"

	config BRCMSDK502L07_USE_GONRG_NONE
		bool "None"

	config BRCM502L07_USE_GONRG_NO
		bool "Nothing"
endchoice


config BRCMSDK502L07_BUILD_GPONRG_OMCI_LIGHT
	string
	default "y" if BRCMSDK502L07_USE_GPONRG_OMCI_LIGHT
	default "" if !BRCMSDK502L07_USE_GPONRG_OMCI_LIGHT
	depends on BRCMSDK502L07_BRCM_OMCI





config BRCMSDK502L07_BUILD_GPONRG_OMCI_FULL
	bool
	default y if BRCMSDK502L07_USE_GPONRG_OMCI_FULL
	default n if !BRCMSDK502L07_USE_GPONRG_OMCI_FULL



config BRCMSDK502L07_BUILD_OMCI_TR69_DUAL_STACK
	bool "Support GPON OMCI TR69 dual stack"
	depends on BRCMSDK502L07_USE_GPONRG_OMCI_FULL
	
config BRCMSDK502L07_BRCM_NO_LAN_PORTS_MIXED_MODE
	bool "Disable RG/ONT mixed mode for LAN ports"
	depends on BRCMSDK502L07_USE_GPONRG_OMCI_FULL

choice
	prompt "GPON ONU Type"
	default BRCMSDK502L07_BRCM_GPON_HGU

	config BRCMSDK502L07_BRCM_GPON_SFU
		bool "SFU"

	config BRCMSDK502L07_BRCM_GPON_HGU
		bool "HGU"

	config BRCMSDK502L07_BRCM_GPON_NONE
		bool "None"
		
	config BRCM502L07_BRCM_GPON_NO
		bool "Nothing"
endchoice

config BRCMSDK502L07_GPON_ONU_TYPE
	string
	default "GPON_HGU" if BRCMSDK502L07_BRCM_GPON_HGU
	default "GPON_SFU" if BRCMSDK502L07_BRCM_GPON_SFU
	depends on (BRCMSDK502L07_BRCM_GPON_HGU || BRCMSDK502L07_BRCM_GPON_SFU)
config BRCM502L07_RM_QUOTES_GPON_ONU_TYPE
	def_bool y
	depends on (BRCMSDK502L07_BRCM_GPON_HGU || BRCMSDK502L07_BRCM_GPON_SFU)



config BRCMSDK502L07_BUILD_OMCI_TR69_DUAL_STACK
	bool "Support GPON OMCI TR69 dual stack"
	depends on (BRCMSDK502L07_USE_GPONRG_OMCI_FULL || BRCMSDK502L07_USE_GONRG_NONE)

config BRCMSDK502L07_BRCM_NO_LAN_PORTS_MIXED_MODE
	bool "Disable RG/ONT mixed mode for LAN ports"
	depends on BRCMSDK502L07_USE_GPONRG_OMCI_FULL

config BRCMSDK502L07_BUILD_GPON_ONU
	string
	default "y" if BRCMSDK502L07_USE_GONRG_NONE
	default "" if !BRCMSDK502L07_USE_GONRG_NONE
	depends on BRCMSDK502L07_BRCM_DRIVER_GPON


# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BCM_GPON_802_1Q_ENABLED
#	bool "Enable 802.1Q mode"
#	depends on !BRCMSDK502L07_USE_GPONRG_OMCI_LIGHT
# pureSDK502L07 not exist <<<

# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BCM_GPON_AE_AUTO_SWITCH
#	bool "Enable GPON-ActiveE Auto Switch"
# pureSDK502L07 not exist <<<

endmenu #menu "GPON Selection"
endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

###################################################################################
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BUILD_BRCM_INTERNAL || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_63158)
menu "EPON Selection"

if BRCMSDK502L07_BUILD_BRCM_INTERNAL
	config BRCMSDK502L07_BRCM_DRIVER_EPON
		tristate "EPON LUE Driver"
endif

if !(BRCMSDK502L07_BUILD_BRCM_INTERNAL)
	config BRCMSDK502L07_BRCM_DRIVER_EPON_STACK
		tristate "EPON Stack Driver"

	config BRCMSDK502L07_EPON_CLOCK_TRANSPORT
		bool "EPON Clock Transport Support"
endif

# pureSDK502L07 not exist >>>
#if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6836 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846)
#	config BRCMSDK502L07_BRCM_EPON_STACK
#		tristate "EPON Stack Driver"
#
#	config BRCMSDK502L07_BRCM_EPON_STACK_IMPL
#		int "EPON Stack Driver Implementation"
#		default 1
#
#	config BRCMSDK502L07_BUILD_EPONCTL
#		tristate "EPON Control Utility"
#
#	config BRCMSDK502L07_EPON_CLOCK_TRANSPORT
#		bool "EPON Clock Transport Support"
#endif
# pureSDK502L07 not exist <<<

config BRCMSDK502L07_EPON_10G_SUPPORT
	depends on (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158)
	bool "Rate 10G Support"

config BRCMSDK502L07_BUILD_EPONCTL
	tristate "EPON Control Utility"

config BRCMSDK502L07_BUILD_EPON_SDK
	bool "EPON SDK"

if (BRCMSDK502L07_BUILD_EPON_SDK)
	menu "OAM Stack Selection"
		config BRCMSDK502L07_BUILD_EPON_BCM_OAM
			bool "Broadcom  "

		config BRCMSDK502L07_BUILD_EPON_CTC_OAM
			bool "CTC      "

		config BRCMSDK502L07_BUILD_EPON_DPOE_OAM
			bool "DPoE     "
			
		config BRCMSDK502L07_BUILD_EPON_DPOE_SSD
			depends on BUILD_EPON_DPOE_OAM
			bool "SSD     "
	endmenu #menu "OAM Stack Selection"
		
	config BRCMSDK502L07_BUILD_EPON_SDK_VOICE_OAM
		bool "EPON SDK VOICE OAM"

	config BRCMSDK502L07_BUILD_EPONWAN
		bool "EPON as WAN"

	config BRCMSDK502L07_OVERRIDE_EPON_MAC_ADDR
		bool "Override EPON MAC Address In Personality"

	if (BRCMSDK502L07_OVERRIDE_EPON_MAC_ADDR)
		config BRCMSDK502L07_MLLID_SUPPORTED
			bool "Multiple LLID SUpport"
	endif

	choice
		prompt "EPON ONU Type"
		default BRCMSDK502L07_BRCM_EPON_SFU

		config BRCMSDK502L07_BRCM_EPON_SFU
			bool "SFU"

		config BRCMSDK502L07_BRCM_EPON_SBU
			bool "SBU"

		config BRCMSDK502L07_BRCM_EPON_HGU
			bool "HGU"
	endchoice

	config BRCMSDK502L07_EPON_ONU_TYPE
		string
		default "EPON_SFU" if BRCMSDK502L07_BRCM_EPON_SFU
		default "EPON_SBU" if BRCMSDK502L07_BRCM_EPON_SBU
		default "EPON_HGU" if BRCMSDK502L07_BRCM_EPON_HGU		
	config BRCM502L07_RM_QUOTES_EPON_ONU_TYPE
		def_bool y

	if BRCMSDK502L07_BUILD_BRCM_INTERNAL
		config BRCMSDK502L07_EPON_UNI_UNI_ENABLED
			bool "UNI 2 UNI Communication"

		config BRCMSDK502L07_EPON_DS_DLF_FORWARD
			bool "Unresolved Downstream Forward"
	endif
endif #if (BRCMSDK502L07_BUILD_EPON_SDK)

endmenu #menu "EPON Selection"
endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BUILD_BRCM_INTERNAL || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_63158)

###################################################################################
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BUILD_BRCM_INTERNAL)
comment "PacketCable Selection"
menu "EPON Selection"

	config BRCMSDK502L07_BRCM_PKTCBL_SUPPORT
		tristate "PacketCable Support"
		depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)

endmenu #menu "EPON Selection"
endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BUILD_BRCM_INTERNAL)

###################################################################################
menu "Ethernet, Switch, and VLAN Selection"

config BRCMSDK502L07_BRCM_DRIVER_ETHERNET
	tristate "Ethernet Driver"

config BRCMSDK502L07_BRCM_DRIVER_ETHERNET_CONFIG
	depends on BRCMSDK502L07_BRCM_DRIVER_ETHERNET
	bool "Support Configuration for Ethernet Speed/Type"

config BRCMSDK502L07_BUILD_ETHWAN
	depends on BRCMSDK502L07_BRCM_DRIVER_ETHERNET
	bool "Ethernet as WAN"

config BRCMSDK502L07_BRCM_ENET_4908_GMAC
	depends on (BRCMSDK502L07_BRCM_4908)
	bool "Enable GMAC-Only Traffic"

config BRCMSDK502L07_BRCM_ENET_MULTI_IMP_SUPPORT
	depends on (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)
	bool "Enable Multiple Switch IMP Ports"

config BRCMSDK502L07_BCM_DEF_NR_RX_DMA_CHANNELS
	int
	default 1 if BRCMSDK502L07_BRCM_63381
	default 2 if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_47189)

config BRCMSDK502L07_BCM_DEF_NR_TX_DMA_CHANNELS
	int
	default 1 if BRCMSDK502L07_BRCM_63381
	default 2 if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_47189)

if (BRCMSDK502L07_BRCM_DRIVER_ETHERNET)
	config BRCMSDK502L07_BRCM_GMAC
		tristate "Support for GMAC"
		depends on BRCMSDK502L07_BRCM_63268

	if BRCMSDK502L07_BRCM_GMAC
		choice
			prompt "GMAC Control Utility"
			default BRCM502L07_GMACCTL_DONT_BUILD

			config BRCM502L07_GMACCTL_DONT_BUILD
				bool "don't build"

			config BRCM502L07_GMACCTL_DYNAMIC_BUILD
				bool "dynamic"

			config BRCM502L07_GMACCTL_STATIC_BUILD
				bool "static"
		endchoice

		config BRCMSDK502L07_BUILD_GMACCTL
			string
			default "dynamic" if BRCM502L07_GMACCTL_DYNAMIC_BUILD
			default "static"  if BRCM502L07_GMACCTL_STATIC_BUILD

		config BRCM502L07_RM_QUOTES_BUILD_GMACCTL
			def_bool y
			depends on BRCM502L07_GMACCTL_DYNAMIC_BUILD || BRCM502L07_GMACCTL_STATIC_BUILD
	endif
endif #if (BRCMSDK502L07_BRCM_DRIVER_ETHERNET)
if (!BRCMSDK502L07_BRCM_DRIVER_ETHERNET && BRCMSDK502L07_BRCM_DRIVER_ETHERNET != "m" )
	config BRCMSDK502L07_BRCM_DRIVER_ENET_SYSPORT
		depends on (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
		tristate "System Port Test Driver"
	
	config BRCMSDK502L07_BRCM_ENET_4908_GMAC
		depends on BRCMSDK502L07_BRCM_4908
		bool "Enable GMAC-Only Traffic (No RDP)"
		
	config BRCMSDK502L07_BRCM_ENET_MULTI_IMP_SUPPORT
		depends on BRCMSDK502L07_BRCM_4908
		bool "Enable Multiple Switch IMP Ports"
endif #if !(BRCMSDK502L07_BRCM_DRIVER_ETHERNET)
choice
	prompt "Switch Scheduling Mode (SP = strict priority, WRR = weighted round robin)"
	default BRCMSDK502L07_BRCM_SWITCH_SCHED_SP

	config BRCMSDK502L07_BRCM_SWITCH_SCHED_SP
		bool "SP"

	config BRCMSDK502L07_BRCM_SWITCH_SCHED_WRR
		bool "WRR"
endchoice

config BRCMSDK502L07_BUILD_BCM_ALLOW_REAL_HW_SWITCHING
	bool "Allow Real HW Switching (using physical HW switch)"

config BRCMSDK502L07_BUILD_ETHSWCTL
	bool "ETHSWCTL Utility"

config BRCMSDK502L07_BUILD_SWMDK
	bool "SWITCHMDK"
	depends on BRCMSDK502L07_BUILD_ETHSWCTL

if (BRCMSDK502L07_BUILD_SWMDK)
	config BRCMSDK502L07_BRCM_EXT_SWITCH
		bool "External Switch Present"

	config BRCMSDK502L07_BRCM_EXT_SWITCH_TYPE
		int "External Switch Number" if BRCMSDK502L07_BRCM_EXT_SWITCH
		default 53115 if BRCMSDK502L07_BRCM_EXT_SWITCH
		default 0

	config BRCMSDK502L07_BRCM_EXT_SWITCH_REV
		string "External Switch Revision" if BRCMSDK502L07_BRCM_EXT_SWITCH
		default "a0" if BRCMSDK502L07_BRCM_EXT_SWITCH
		default ""

	if BRCMSDK502L07_BRCM_EXT_SWITCH_REV=""
		config BRCM502L07_RM_QUOTES_BRCM_EXT_SWITCH_REV
			def_bool y
	endif

	config BRCMSDK502L07_BRCM_PORTS_ON_INT_EXT_SW
		def_bool y if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63381)
		def_bool n if !(BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63381)
		depends on BRCMSDK502L07_BRCM_EXT_SWITCH

	config BRCMSDK502L07_BCM_PHY_54616
		bool "54616 PHY Support"


endif #if (BRCMSDK502L07_BUILD_SWMDK)

config BRCMSDK502L07_BUILD_MDK_SHELL
	bool "MDKSHELL" 
	def_bool y if BRCMSDK502L07_BUILD_SWMDK
		
config BRCMSDK502L07_BRCM_DRIVER_VLAN
	tristate "VLAN Driver"

choice
	prompt "VLAN Control Utility"
	default BRCM502L07_VLANCTL_DONT_BUILD

	config BRCM502L07_VLANCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_VLANCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_VLANCTL_STATIC_BUILD
			bool "static"
endchoice

config BRCMSDK502L07_BUILD_VLANCTL
	string
	default "dynamic" if BRCM502L07_VLANCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_VLANCTL_STATIC_BUILD
config BRCM502L07_RM_QUOTES_BUILD_VLANCTL
	def_bool y
	depends on BRCM502L07_VLANCTL_DYNAMIC_BUILD || BRCM502L07_VLANCTL_STATIC_BUILD

if (BRCMSDK502L07_BUILD_VLANCTL = "dynamic" || BRCMSDK502L07_BUILD_VLANCTL = "static")
config BRCMSDK502L07_BUILD_LANVLAN
	bool "Support LAN Side Vlan"
	
config BRCMSDK502L07_BUILD_VLAN_AGGR
	bool "Support VLAN Aggregation"


config BRCMSDK502L07_BRCM_VLAN_ROUTED_WAN_USES_ROOT_DEV_MAC
	bool "Assign Same MAC address to Routed WAN Interface as root"

endif
	


config BRCMSDK502L07_BUILD_ETHTOOL
	bool "Ethtool Support"

config BRCMSDK502L07_BUILD_ETHTOOL_APP
	bool "Build Ethtool Application"
	depends on BRCMSDK502L07_BUILD_ETHTOOL

endmenu #menu "Ethernet, Switch, and VLAN Selection"

###################################################################################
menu "USB, SATA and Storage Options Selection"

config BRCMSDK502L07_BUILD_SATA
	bool "SATA support"

config BRCMSDK502L07_BRCM_DRIVER_SATA_TEST
	tristate "SATA compliance test utility"
	depends on BRCMSDK502L07_BUILD_SATA

config BRCMSDK502L07_BUILD_SATA_TEST
	string
	default "y" if BRCMSDK502L07_BRCM_DRIVER_SATA_TEST
config BRCM502L07_RM_QUOTES_BUILD_SATA_TEST
	def_bool y
	depends on BRCMSDK502L07_BUILD_SATA_TEST

config BRCMSDK502L07_LINUX_DRIVER_USB_HOST
	bool "USB Host"
	depends on BRCMSDK502L07_BRCM_DRIVER_PCI

config BRCMSDK502L07_LINUX_DRIVER_USB3_HOST
	bool "USB 3.0 Host"
	depends on BRCMSDK502L07_LINUX_DRIVER_USB_HOST

config BRCMSDK502L07_LINUX_DRIVER_USBNET
	bool "USB Network Communication Class device support"
	depends on BRCMSDK502L07_LINUX_DRIVER_USB_HOST

config BRCMSDK502L07_BRCM_DRIVER_USBNET_THREAD
	bool "Run USBNET in kernel thread"

config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_USBNET
	bool "USBNET/LTE SW Acceleration Support"   
	depends on BRCMSDK502L07_LINUX_DRIVER_USBNET && BRCMSDK502L07_BRCM_DRIVER_PKTFLOW

config BRCMSDK502L07_LINUX_KERNEL_USBMASS
	bool "USB Mass Storage Support (experimental)"
	depends on BRCMSDK502L07_LINUX_DRIVER_USB_HOST

config BRCMSDK502L07_LINUX_KERNEL_USB_DEVICEFS
	bool "USB DeviceFS"
	depends on BRCMSDK502L07_LINUX_DRIVER_USB_HOST

config BRCMSDK502L07_BUILD_LIBUSB
	bool "LIBUSB support"

choice
	prompt "Ftp Server"
	default BRCM502L07_FTPD_DONT_BUILD

	config BRCM502L07_FTPD_DONT_BUILD
		bool "don't build"

	config BRCM502L07_FTPD_DYNAMIC_BUILD
			bool "dynamic"

	config BRCM502L07_FTPD_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_FTPD
	string
	default "dynamic" if BRCM502L07_FTPD_DYNAMIC_BUILD
	default "static"  if BRCM502L07_FTPD_STATIC_BUILD
config BRCM502L07_RM_QUOTES_BUILD_FTPD
	def_bool y
	depends on BRCM502L07_FTPD_DYNAMIC_BUILD || BRCM502L07_FTPD_DYNAMIC_BUILD

# this is the old way, which links ftpd with storge, will clean up after samba
config BRCMSDK502L07_BUILD_FTPD_STORAGE
	bool "Support for storage"
	def_bool y if (BRCM502L07_FTPD_DYNAMIC_BUILD || BRCM502L07_FTPD_STATIC_BUILD)
	def_bool n if !(BRCM502L07_FTPD_DYNAMIC_BUILD || BRCM502L07_FTPD_STATIC_BUILD)

config BRCMSDK502L07_BUILD_STORAGESERVICE
	bool "TR140-Storage Service"

config BRCMSDK502L07_BUILD_NTFS_3G
	bool "NTFS-3G support"
	depends on BRCMSDK502L07_BUILD_STORAGESERVICE

if (BRCMSDK502L07_BUILD_STORAGESERVICE)
choice
	prompt "Samba support"
	default BRCMSDK502L07_BUILD_SAMBA

	config BRCMSDK502L07_BUILD_SAMBA
		bool "Samba"

	config BRCMSDK502L07_BUILD_BEEP_SAMBA
		bool "Samba_as_BEEP_Package"
		depends on BRCMSDK502L07_BUILD_MODSW_EE

	config BRCMSDK502L07_BUILD_SAMBA_NONE
		bool "None"
		depends on BRCMSDK502L07_BUILD_MODSW_EE
endchoice
endif


config BRCMSDK502L07_BRCM_DRIVER_USB
	tristate "USB Device"

endmenu	# USB, SATA and Storage Options Selection

###################################################################################
if (BRCMSDK502L07_BRCM_FLASH_BUILD_NOR)
menu "Auxillary flash file system selection (on NOR)"

config BRCMSDK502L07_BUILD_AUXFS_JFFS2
	bool "JFFS2"

if BRCMSDK502L07_BUILD_AUXFS_JFFS2
	config BRCMSDK502L07_BRCM_KERNEL_AUXFS_JFFS2
		string
		default "y"
	config BRCM502L07_RM_QUOTES_BRCM_KERNEL_AUXFS_JFFS2
		def_bool y
endif

config BRCMSDK502L07_BRCM_AUXFS_PERCENT
	int "Percent of NOR Flash for auxillary file system 0-80"
	default 64 if (BRCMSDK502L07_DISABLE_NOR_RAW_PARTITION)

endmenu #menu "Auxillary flash file system selection"
endif #if (BRCMSDK502L07_BRCM_FLASH_BUILD_NOR)
###################################################################################
if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)
menu "Moca Selection"

config BRCMSDK502L07_BRCM_DRIVER_MoCA
	tristate "MoCA"

if BRCMSDK502L07_BRCM_DRIVER_MoCA
	config BRCMSDK502L07_BRCM_DRIVER_MoCA_CTP_CANDIDATE
		bool "CTP Candidate"

	config BRCMSDK502L07_BUILD_MoCACTL
		string
		default "y"
	config BRCM502L07_RM_QUOTES_BUILD_MoCACTL
		def_bool y

	config BRCMSDK502L07_BUILD_MOCAWAN
		bool "MOCA as WAN"

	config BRCMSDK502L07_BUILD_6802_MOCA
		bool "Support 6802 Moca"

	config BRCMSDK502L07_BRCM_MOCA_AVS
		bool "Support 6802 AVS"
		depends on BRCMSDK502L07_BUILD_6802_MOCA		

	config BRCMSDK502L07_MOCA_LAN_DISCONN
		bool "MoCA LAN Disconnected"

	config BRCMSDK502L07_MOCA_WAN_DISCONN
		bool "MoCA WAN Disconnected"

	choice
		prompt "MoCA Daemon"
		default BRCM502L07_MoCAD_DONT_BUILD

		config BRCM502L07_MoCAD_DONT_BUILD
			bool "don't build"

		config BRCM502L07_MoCAD_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_MoCAD_STATIC_BUILD
			bool "static"
	endchoice

	config BRCMSDK502L07_BUILD_MoCAD
		string
		default "dynamic" if BRCM502L07_MoCAD_DYNAMIC_BUILD
		default "static"  if BRCM502L07_MoCAD_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_MoCAD
		def_bool y
		depends on BRCM502L07_MoCAD_DYNAMIC_BUILD || BRCM502L07_MoCAD_STATIC_BUILD

	choice
		prompt "MoCA Programmer"
		default BRCM502L07_MoCAP_DONT_BUILD

		config BRCM502L07_MoCAP_DONT_BUILD
			bool "don't build"

		config BRCM502L07_MoCAP_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_MoCAP_STATIC_BUILD
			bool "static"
	endchoice

	config BRCMSDK502L07_BUILD_MoCAP
		string
		default "dynamic" if BRCM502L07_MoCAP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_MoCAP_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_MoCAP
		def_bool y
		depends on BRCM502L07_MoCAP_DYNAMIC_BUILD || BRCM502L07_MoCAP_STATIC_BUILD

	config BRCMSDK502L07_BUILD_MoCACTL2
		string
		default "y" if BRCM502L07_MoCAD_DYNAMIC_BUILD || BRCM502L07_MoCAD_STATIC_BUILD
		default ""
	config BRCM502L07_RM_QUOTES_BUILD_MoCACTL2
		def_bool y

endif # BRCMSDK502L07_BRCM_DRIVER_MoCA
endmenu # Moca Selection
endif #if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

###################################################################################
menu "WLAN Selection"

config BRCMSDK502L07_BRCM_DRIVER_WIRELESS
	tristate "Wireless Driver"
	depends on BRCMSDK502L07_BRCM_DRIVER_PCI

config BRCMSDK502L07_BRCM_DRIVER_DHD
	tristate "Wireless DHD driver support"
	depends on BRCMSDK502L07_BRCM_DRIVER_PCI

config BRCMSDK502L07_BUILD_HND_NIC
	bool "Do not build dongle firmware"


if (BRCMSDK502L07_BRCM_DRIVER_WIRELESS=y || BRCMSDK502L07_BRCM_DRIVER_WIRELESS=m)
config BRCMSDK502L07_BRCM_WAPI
	bool "Wireless WAPI support"

config BRCMSDK502L07_BRCM_WLALTBLD
	string "Wireless Alternate Build"
	depends on BRCMSDK502L07_BRCM_DRIVER_WIRELESS

config BRCM502L07_BUILD_WIFIWAN
	bool "WiFi as WAN"  if BRCMSDK502L07_BRCM_WLALTBLD="apsta"
	default n

config BRCMSDK502L07_BUILD_WIFIWAN
	string
	default "y" if BRCM502L07_BUILD_WIFIWAN
	default ""  if BRCMSDK502L07_BRCM_WLALTBLD!="apsta"

config BRCM502L07_RM_QUOTES_BUILD_WIFIWAN
	def_bool y  if BRCMSDK502L07_BUILD_WIFIWAN!="n"

choice
	prompt "Wireless brand selection"
	default BRCMSDK502L07_BRCM_WLMEDIA

	config BRCMSDK502L07_BRCM_WLMEDIA
		bool "MEDIA"

	config BRCMSDK502L07_WLBRAND_none
		bool "none"
endchoice

config BRCMSDK502L07_BRCM_WLBRAND
	string
	default "MEDIA" if BRCMSDK502L07_BRCM_WLMEDIA
	default ""

config BRCM502L07_RM_QUOTES_BRCM_WLBRAND
	def_bool y

comment "WLAN IMPL selection"
config BRCMSDK502L07_BCM_WLIMPL
	int "Use IMPL selection"

choice
	prompt "Wireless Control Utility"
	default BRCM502L07_WLCTL_DONT_BUILD

	config BRCM502L07_WLCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_WLCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_WLCTL_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_WLCTL
	string
	default "dynamic" if BRCM502L07_WLCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_WLCTL_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_WLCTL
	def_bool y
	depends on BRCM502L07_WLCTL_DYNAMIC_BUILD || BRCM502L07_WLCTL_STATIC_BUILD

choice
	prompt "DHD Control Utility"
	default BRCM502L07_DHDCTL_DONT_BUILD

	config BRCM502L07_DHDCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_DHDCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_DHDCTL_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_DHDCTL
	string
	default "dynamic" if BRCM502L07_DHDCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_DHDCTL_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_DHDCTL
	def_bool y
	depends on BRCM502L07_DHDCTL_DYNAMIC_BUILD || BRCM502L07_DHDCTL_STATIC_BUILD

config BRCMSDK502L07_BUILD_WLHSPOT
	bool "Wireless HSPOT V2.0"

config BRCMSDK502L07_BUILD_WBD
	bool "WiFi Blanket"

config BRCMSDK502L07_BUILD_WLVISUALIZATION
	bool "WiFi Insight"

choice
	prompt "Wireless Service Mangement"
	default BRCMSDK502L07_BUILD_UNIFIED_WLMNGR

	config BRCMSDK502L07_BUILD_UNIFIED_WLMNGR
		bool "wlmngr"

	config BRCMSDK502L07_BUILD_BRCM_UNFWLCFG
		bool "wlssk"

	config BRCMSDK502L07_BUILD_NO_WLMNGR
		bool "BUILD_NO_WLMNGR"
endchoice

# pureSDK502L07 modified >>>
#config BRCMSDK502L07_BUILD_UNIFIED_WLMNGR
#	bool "Unified Wireless Mangager"
# pureSDK502L07 modified <<<

config BRCMSDK502L07_BUILD_BRCM_CPEROUTER
	bool "BCA_CPEROUTER compile"

config BRCMSDK502L07_BRCM_NVRAM_INCLUDE_IMAGE
	bool "Install board-specific default nvram file from image"

choice
	prompt "Wireless Network Authentication Service"
	default BRCM502L07_NAS_DONT_BUILD

	config BRCM502L07_NAS_DONT_BUILD
		bool "don't build"

	config BRCM502L07_NAS_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_NAS_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_NAS
	string
	default "dynamic" if BRCM502L07_NAS_DYNAMIC_BUILD
	default "static"  if BRCM502L07_NAS_STATIC_BUILD

config BRCM502L07_RM_QUOTES_BUILD_NAS
	def_bool y
	depends on BRCM502L07_NAS_DYNAMIC_BUILD || BRCM502L07_NAS_STATIC_BUILD

choice
	prompt "Wireless LAN configuration method"
	default BRCMSDK502L07_WLSETUP_none

	config BRCMSDK502L07_WLSETUP_WPS
		bool "WPS"

	config BRCMSDK502L07_WLSETUP_none
		bool "none"
endchoice

config BRCMSDK502L07_BUILD_WPS_BTN
	string
	default "dynamic" if BRCMSDK502L07_WLSETUP_WPS
	default ""

config BRCM502L07_RM_QUOTES_BUILD_WPS_BTN
	def_bool y

# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BUILD_LLTD
#	string
#	default "dynamic" if BRCMSDK502L07_WLSETUP_WPS
#	default ""
#
#config BRCM502L07_RM_QUOTES_BUILD_LLTD
#	def_bool y
# pureSDK502L07 not exist <<<

config BRCMSDK502L07_BUILD_WSC
	string
	default "dynamic" if BRCMSDK502L07_WLSETUP_WPS
	default ""

config BRCM502L07_RM_QUOTES_BUILD_WSC
	def_bool y

choice
	prompt "NVRAM emulation"
	default BRCM502L07_NVRAM_DONT_BUILD

	config BRCM502L07_NVRAM_DONT_BUILD
		bool "don't build"

	config BRCM502L07_NVRAM_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_NVRAM_STATIC_BUILD
		bool "static"
endchoice

# pureSDK502L07 not exist >>>
#config BRCMSDK502L07_BUILD_BRCM_UNFWLCFG
#	bool "Enable Broadcom Unified WLAN Configuration (UNFWLCFG)"
# pureSDK502L07 not exist <<<

config BRCMSDK502L07_BUILD_NVRAM
	string
	default "dynamic" if BRCM502L07_NVRAM_DYNAMIC_BUILD
	default "static"  if BRCM502L07_NVRAM_STATIC_BUILD
	depends on  !BRCMSDK502L07_BUILD_BRCM_UNFWLCFG

config BRCM502L07_RM_QUOTES_BUILD_NVRAM
        def_bool y
		depends on BRCM502L07_NVRAM_DYNAMIC_BUILD || BRCM502L07_NVRAM_STATIC_BUILD

config BRCMSDK502L07_BCM_WLAN_16BIT_STATION_CHAIN_IDX_SUPPORT
	bool "16bit Station Chain Index support"

config BRCMSDK502L07_BUILD_BCM_CPEPKTC
	bool "Build CPE-specific Packet Chaining"

config BRCMSDK502L07_BUILD_BCM_PKTFWD
	bool "Build Packet Forwarder Handoff"

config BRCMSDK502L07_BUILD_BCM_PKTFWD_FLCTL
	bool "  Build credit based Host Flow Control"
	depends on BRCMSDK502L07_BUILD_BCM_PKTFWD

config BRCMSDK502L07_BRCM_DRIVER_EAPFWD
	tristate "Build EAP Forwarder"
	depends on (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_6858)

config BRCMSDK502L07_BUILD_HND_MFG
	bool "Build HND Mfg image"

config BRCMSDK502L07_BUILD_BCM_WLAN_NO_MFGBIN
	bool "Build image without wlan mfg binaries"

config BRCMSDK502L07_BUILD_BCM_WLAN_REMOVE_INTERNAL_DEBUG
	bool "Build NO internal/debug image"

config BRCMSDK502L07_BUILD_HND_EAP
	bool "Build EAP image"

config BRCMSDK502L07_BUILD_HND_EAP_AP1
	bool "Build EAP AP1 image"

config BRCMSDK502L07_BUILD_BCM_WLAN_DPDCTL
	bool "Build Wireless Deep Power Down control"
endif # if (BRCMSDK502L07_BRCM_DRIVER_WIRELESS=y || BRCMSDK502L07_BRCM_DRIVER_WIRELESS=m)
	
# 502L07 modified >>>
#config BRCMSDK502L07_BUILD_HND_MFG
#	bool "Build HND Mfg image"
#	depends on ( BRCMSDK502L07_BRCM_DRIVER_WIRELESS=y || BRCMSDK502L07_BRCM_DRIVER_WIRELESS=m)
# 502L07 modified <<<

if BRCMSDK502L07_LINUX_DRIVER_USB_HOST
	config BRCMSDK502L07_BRCM_DRIVER_WIRELESS_USBAP
		tristate "USB Dongle Wireless"
		def_tristate y if BRCMSDK502L07_LINUX_KERNEL_USB_DEVICEFS
endif
endmenu # WLAN Selection

###################################################################################
menu "Voice/Phone Selection"

config BRCMSDK502L07_BRCM_VOICE_SUPPORT
	bool "Enable Voice Support"

if (BRCMSDK502L07_BRCM_VOICE_SUPPORT)
	# ===========================
	# Voice Application selection
	# ===========================

	choice
		prompt "Main Voice Application"
		default BRCMSDK502L07_BRCM_VOICE_APP_SIP

		config BRCMSDK502L07_BRCM_VOICE_APP_SIP
			bool "SIP"

		config BRCMSDK502L07_BRCM_VOICE_APP_EPTAPP
			bool "EPTAPP"

	endchoice
	
#	config BRCMSDK502L07_BUILD_CERT
#	string
#	default "dynamic" if BRCM502L07_BUILD_CERT_DYNAMIC_BUILD
#	default "static"  if BRCM502L07_BUILD_CERT_STATIC_BUILD
#
#	if (BRCMSDK502L07_BUILD_CERT!="")
#	config BRCM502L07_RM_QUOTES_BUILD_CERT
#		def_bool y
#	endif

	choice
		prompt "SSL and Certificate"
		default BRCM502L07_BUILD_CERT_DYNAMIC_BUILD

		config BRCM502L07_BUILD_CERT_DONT_BUILD
			bool "don't build"

		config BRCM502L07_BUILD_CERT_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_BUILD_CERT_STATIC_BUILD
			bool "static"
	endchoice
	
	# Endpoint application selection and configuration
	if (BRCMSDK502L07_BRCM_VOICE_APP_EPTAPP)
		comment "Endpoint Application Configuration Options"
		config BRCMSDK502L07_BRCM_EPTAPP_PBDT_CLI_SUPPORT
			bool "Pull-break Dialtone CLI Support"
	endif

	# ==================
	# Features selection
	# ==================
  
	choice
		prompt "Voice Data Model Selection"
		default BRCMSDK502L07_BUILD_DM_TR104_V1

		config BRCMSDK502L07_BUILD_DM_TR104_V1
			bool "TR104v1"

		config BRCMSDK502L07_BUILD_DM_TR104_V2
			bool "TR104v2"
	endchoice 

	config BRCMSDK502L07_BRCM_VOICE_ANNOUNCEMENT
		bool "Announcement Support"
		depends on BRCMSDK502L07_BRCM_VOICE_APP_EPTAPP

	config BRCMSDK502L07_BRCM_VOICE_DECT_SUPPORT
		bool "DECT Support"
		depends on (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)

	config BRCMSDK502L07_BRCM_VOICE_DECT_TEST
		bool "Low-level DECT Test"
		depends on (BRCMSDK502L07_BRCM_VOICE_DECT_SUPPORT && (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148))

	config BRCMSDK502L07_BUILD_AVS_DEVICE_SDK
		bool "Enable AVS DEVICE SDK"
		depends on (BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622)

	config BRCMSDK502L07_BUILD_AUDIO_SUPPORT
		bool "Enable Audio Framework"
		depends on (BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622)

	config BRCMSDK502L07_BUILD_BCM_DSP_ALSA_BRIDGE
		bool "Enable DSP-ALSA bridge device"
		depends on (BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622)
	menu "Locale Selection"
		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_NORTH_AMERICA
			bool "North America"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_AUSTRALIA
			bool "Australia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_AUSTRIA
			bool "Austria"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_BELGIUM
			bool "Belgium"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_BRAZIL
			bool "Brazil"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_CHILE
			bool "Chile"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_CHINA
			bool "China"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_CYPRUS
			bool "Cyprus"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_CZECH
			bool "Czech Republic"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_DENMARK
			bool "Denmark"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_ETSI
			bool "ETSI"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_FINLAND
			bool "Finland"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_FRANCE
			bool "France"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_GERMANY
			bool "Germany"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_HUNGARY
			bool "Hungary"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_INDIA
			bool "India"

		#config BRCMSDK502L07_BRCM_VOICE_COUNTRY_IRELAND
		#	bool "Ireland"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_ITALY
			bool "Italy"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_JAPAN
			bool "Japan"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_NETHERLANDS
			bool "Netherlands"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_NEW_ZEALAND
			bool "New Zealand"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_NORWAY
			bool "Norway"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_POLAND
			bool "Poland"

		#config BRCMSDK502L07_BRCM_VOICE_COUNTRY_ROMANIA
		#	bool "Romania"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_SLOVAKIA
			bool "Slovakia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_SLOVENIA
			bool "Slovenia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_SPAIN
			bool "Spain"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_SWEDEN
			bool "Sweden"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_SWITZERLAND
			bool "Switzerland"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_TAIWAN
			bool "Taiwan"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_TR57
			bool "TR57"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_UK
			bool "United Kingdom"

		#config BRCMSDK502L07_BRCM_VOICE_COUNTRY_UNITED_ARAB_EMIRATES
		#	bool "United Arab Emirates"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_TURKEY
			bool "Turkey"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_CROATIA
			bool "Croatia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_COLOMBIA
			bool "Colombia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_BOSNIA
			bool "Bosnia"

		config BRCMSDK502L07_BRCM_VOICE_COUNTRY_GREECE
			bool "Greece"
	endmenu	#menu "Locale Selection"

	config BRCMSDK502L07_BRCM_VOICE_HALCAP_NETWORK_SUPPORT
		bool "HAL Capture Network Support"
	
	config BRCMSDK502L07_BRCM_VOICE_LOW_POWER_IDLE
		bool "Low Power State when Idle"

	config BRCMSDK502L07_BRCM_VOICE_PSTN_SUPPORT
		bool "PSTN Support"
		depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63381)

	if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63178)
		config BRCMSDK502L07_BRCM_NTR_SUPPORT
			bool "NTR Support"

		if (BRCMSDK502L07_BRCM_NTR_SUPPORT)
			if (BRCMSDK502L07_BRCM_63268)
				config BRCMSDK502L07_BRCM_NTR_BONDING
					def_bool y
			endif

			menu "NTR Options"
			comment "NTR Options"
				config BRCMSDK502L07_BRCM_NTR_MDM_SUPPORT
					bool "Enable NTR MDM (Highly Recommended)"

				choice
					prompt "NTR Mode"
					default BRCMSDK502L07_BRCM_NTR_MODE_NATIVE

					config BRCMSDK502L07_BRCM_NTR_MODE_NATIVE
						bool "Native"

					config BRCMSDK502L07_BRCM_NTR_MODE_COMP
						bool "Compatibility"

					config BRCMSDK502L07_BRCM_NTR_MODE_INT
						bool "Internal"

					config BRCMSDK502L07_BRCM_NTR_MODE_NATIVE_BOND
						bool "Native-Bonding"
						depends on BRCMSDK502L07_BRCM_NTR_BONDING

					config BRCMSDK502L07_BRCM_NTR_MODE_COMP_BOND
						bool "Compatibility-Bonding"
						depends on BRCMSDK502L07_BRCM_NTR_BONDING

					config BRCMSDK502L07_BRCM_NTR_MODE_INT_BOND
						bool "Internal-Bonding"
						depends on BRCMSDK502L07_BRCM_NTR_BONDING
				endchoice

				choice
					prompt "NTR reference clock"
					default BRCMSDK502L07_BRCM_NTR_REF_CLK_256KHZ

					config BRCMSDK502L07_BRCM_NTR_REF_CLK_8KHZ
						bool "8KHz"
						depends on BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63178

					config BRCMSDK502L07_BRCM_NTR_REF_CLK_16KHZ
						bool "16KHz"
						depends on BRCMSDK502L07_BRCM_63268

					config BRCMSDK502L07_BRCM_NTR_REF_CLK_256KHZ
						bool "256KHz"
						depends on BRCMSDK502L07_BRCM_63268
				endchoice
			endmenu	#menu "NTR Options"
		endif #if (BRCMSDK502L07_BRCM_NTR_SUPPORT)
	endif #if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63178)

	config BRCMSDK502L07_BRCM_VOICE_RANDOM_PORTS
		bool "Randomize Port Numbers"

	config BRCMSDK502L07_BRCM_VOICE_RECORDING
		bool "Recording Support"

	config BRCMSDK502L07_BRCM_VOICE_SRTP_SUPPORT
		bool "SRTP Support" 
		depends on BRCMSDK502L07_BRCM_VOICE_APP_SIP

	# ==============================
	# Debug/Extra Features selection
	# ==============================
	comment "===== EXTRA OPTIONS ====="
	
	menu "General Options"
	comment "General Options"
		config BRCMSDK502L07_BRCM_VOICE_MEM_DEBUG
			bool "Enable dynamic memory tracking"

		config BRCMSDK502L07_BRCM_VOICE_COMPILE_WITH_DEBUG
			bool "Compile with Debug Information"

		config BRCMSDK502L07_BRCM_VOICE_DSP_CONLY
			depends on (PROFILE_ARCH = "arm" )
			bool "Use C-Only DSP library"
			
		config BRCMSDK502L07_BRCM_VOICE_STRIP_SYMBOLS
			bool "Strip Symbols"
	endmenu #menu "General Options"
		
	menu "DSPHAL Options"
	comment "DSPHAL Options"
		config BRCMSDK502L07_BRCM_VOICE_DPLL_LOCK_WAIT
			bool "Wait for DPLLs to lock"

		config BRCMSDK502L07_BRCM_VOICE_DSPHAL_EGRESS_1KHZ_TONE
			bool "Enable Egress 1KHz debug tone"

		config BRCMSDK502L07_BRCM_VOICE_DSPHAL_INGRESS_1KHZ_TONE
			bool "Enable Ingress 1KHz debug tone"

		config BRCMSDK502L07_BRCM_VOICE_DSPHAL_CAPTURE
			bool "Enable HAL Audio Capture"
	endmenu #menu "DSPHAL Options"		

	menu "SLIC/SLAC Options"
	comment "SLIC/SLAC Options"
		config BRCMSDK502L07_BRCM_VOICE_SLICSLAC_DEBUG
			bool "Enable Slic/Slac driver debug prints"

		config BRCMSDK502L07_BRCM_VRG_SLACVENDOR_CFG_ZARLINK
			bool "Support Microsemi Slac"

		config BRCMSDK502L07_BRCM_VRG_SLACVENDOR_CFG_SILABS
			bool "Support SILABS Slac"
	endmenu #menu "SLIC/SLAC Options"	

endif #if (BRCMSDK502L07_BRCM_VOICE_SUPPORT)

endmenu # Voice/Phone Selection

###################################################################################
menu "WAN Protocols and VPN"

choice
	prompt "PPP Daemon"
	default BRCM502L07_PPPD_DONT_BUILD

	config BRCM502L07_PPPD_DONT_BUILD
		bool "don't build"

	config BRCM502L07_PPPD_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_PPPD_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_PPPD_DYNAMIC_BUILD || BRCM502L07_PPPD_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_PPPD
		string
		default "dynamic" if BRCM502L07_PPPD_DYNAMIC_BUILD
		default "static"  if BRCM502L07_PPPD_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_PPPD
		def_bool y
		depends on BRCM502L07_PPPD_DYNAMIC_BUILD || BRCM502L07_PPPD_STATIC_BUILD
endif

config BRCMSDK502L07_PPP_AUTODISCONN
	bool "Turn on Autodisconn in PPP"

config BRCMSDK502L07_BUILD_WANVLANMUX
	bool "Support Multiple WAN Connections using VLAN ID (VLAN MUX)"

choice
	prompt "IPSec"
	default BRCM502L07_IPSEC_TOOLS_DONT_BUILD

	config BRCM502L07_IPSEC_TOOLS_DONT_BUILD
		bool "don't build"

	config BRCM502L07_IPSEC_TOOLS_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_IPSEC_TOOLS_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_IPSEC_TOOLS_DYNAMIC_BUILD || BRCM502L07_IPSEC_TOOLS_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_IPSEC_TOOLS
		string
		default "dynamic" if BRCM502L07_IPSEC_TOOLS_DYNAMIC_BUILD
		default "static"  if BRCM502L07_IPSEC_TOOLS_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_IPSEC_TOOLS
		def_bool y
		depends on (BRCM502L07_IPSEC_TOOLS_DYNAMIC_BUILD || BRCM502L07_IPSEC_TOOLS_STATIC_BUILD)

	if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_47622)
		config BRCMSDK502L07_BRCM_DRIVER_SPU
			tristate "SPU Driver"

		config BRCMSDK502L07_BUILD_CRYPTODEV_LINUX
			tristate "Cryptodev Linux"

		if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)
			choice
				prompt "SPUCTL"
				default BRCM502L07_SPUCTL_DONT_BUILD

				config BRCM502L07_SPUCTL_DONT_BUILD
					bool "don't build"

				config BRCM502L07_SPUCTL_DYNAMIC_BUILD
					bool "dynamic"

				config BRCM502L07_SPUCTL_STATIC_BUILD
					bool "static"
			endchoice

			config BRCMSDK502L07_BUILD_SPUCTL
				string
				default "dynamic" if BRCM502L07_SPUCTL_DYNAMIC_BUILD
				default "static"  if BRCM502L07_SPUCTL_STATIC_BUILD

			config BRCM502L07_RM_QUOTES_BUILD_SPUCTL
				def_bool y
				depends on (BRCM502L07_SPUCTL_DYNAMIC_BUILD || BRCM502L07_SPUCTL_STATIC_BUILD)
		endif #if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)
	endif #if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908)
endif #if (BRCM502L07_IPSEC_TOOLS_DYNAMIC_BUILD || BRCM502L07_IPSEC_TOOLS_STATIC_BUILD)

choice
	prompt "OpenVPN"
	default BRCM502L07_OPENVPN_DONT_BUILD

	config BRCM502L07_OPENVPN_DONT_BUILD
		bool "don't build"

	config BRCM502L07_OPENVPN_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_OPENVPN_STATIC_BUILD
		bool "static"
endchoice

config BRCMSDK502L07_BUILD_OPENVPN
	string
	default "dynamic" if BRCM502L07_OPENVPN_DYNAMIC_BUILD
	default "static"  if BRCM502L07_OPENVPN_STATIC_BUILD

config BRCMSDK502L07_BUILD_L2TPAC
	bool "Enable L2TP AC tunnel (Client side)"

config BRCMSDK502L07_BUILD_PPTPAC
	bool "Enable PPTP AC tunnel (Client side)"

config BRCMSDK502L07_BUILD_GRE_TUNNEL
	bool "GRE"

config BRCMSDK502L07_BUILD_ACCEL_PPTP
	bool "ACCEL_PPTP"

endmenu # menu "WAN Protocols and VPN"

###################################################################################
menu "Firewall, ALGs, and Networking Features"

menu "Netfilter and firewall selection"
	config BRCMSDK502L07_BRCM_KERNEL_NETFILTER
		tristate "Netfilter/firewall/mangling/nat"

	config BRCMSDK502L07_BRCM_KERNEL_NF_FIREWALL
		tristate "Firewall support"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_MANGLE
		tristate "Packet mangling support"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT
		tristate "NAT support"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_DYNDSCP
		tristate "Dynamic DSCP mangling support"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_LAYER7_FILTER
		tristate "Layer 7 filtering support"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_FTP
		tristate "FTP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_SIP
		tristate "SIP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_TFTP
		tristate "TFTP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_H323
		tristate "H323 ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_H323_SIGNAL_PROXY
		tristate "H323 ALG-SIGNAL PROXY"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_H323

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_IRC
		tristate "IRC ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_WM
		tristate "Windows Media Player ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_PT
		tristate "Port Triggering ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_PPTP
		tristate "PPTP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_IPSEC
		tristate "IPSec ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_RTSP
		tristate "RTSP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_SNMP
		tristate "SNMP ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_NAT_ALG_TALK
		tristate "TALK ALG"
		depends on BRCMSDK502L07_BRCM_KERNEL_NF_NAT

	config BRCMSDK502L07_BRCM_KERNEL_NF_LOG
		tristate "Logging event"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

	config BRCMSDK502L07_BRCM_KERNEL_NF_PPPREMOTE
		tristate "Remote access support in PPP IP extension"
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

# 502L07 not exist >>>
#	config BRCMSDK502L07_BRCM_KERNEL_NF_REGARDLESS_DROP_NO_ACCEL_FIRST
#		tristate "Drop non-accelerated flows first when conntrack table is full"
#		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER
# 502L07 not exist <<<

	config BRCMSDK502L07_BRCM_KERNEL_NF_REGARDLESS_DROP_ORDER
		int "Netfilter Regardless Connection drop order"
		default 1
		depends on BRCMSDK502L07_BRCM_KERNEL_NETFILTER

endmenu # Netfilter and firewall selection

config BRCMSDK502L07_BUILD_CONNTRACK_TOOLS
	bool "Conntrack-tools"

if BRCMSDK502L07_BUILD_CONNTRACK_TOOLS
	config BRCMSDK502L07_BUILD_LIBNFNETLINK
		def_bool y
	config BRCMSDK502L07_BUILD_LIBMNL
		def_bool y
	config BRCMSDK502L07_BUILD_LIBNETFILTER_QUEUE
		def_bool y
	config BRCMSDK502L07_BUILD_LIBNETFILTER_CTIMEOUT
		def_bool y
	config BRCMSDK502L07_BUILD_LIBNETFILTER_CTHELPER
		def_bool y
	config BRCMSDK502L07_BUILD_LIBNETFILTER_CONNTRACK
		def_bool y
endif # BRCMSDK502L07_BUILD_CONNTRACK_TOOLS
config BRCMSDK502L07_BUILD_IPSET
	bool "IP sets"
	
if BRCMSDK502L07_BUILD_IPSET
	config BRCMSDK502L07_BUILD_LIBMNL
		def_bool y
endif # BRCMSDK502L07_BUILD_IPSET

choice
	prompt "IP Firewall"
	default BRCM502L07_IPTABLES_DONT_BUILD

	config BRCM502L07_IPTABLES_DONT_BUILD
		bool "don't build"
	config BRCM502L07_IPTABLES_DYNAMIC_BUILD
		bool "dynamic"
	config BRCM502L07_IPTABLES_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_IPTABLES_DYNAMIC_BUILD || BRCM502L07_IPTABLES_STATIC_BUILD
	config BRCMSDK502L07_BUILD_IPTABLES
		string
		default "dynamic" if BRCM502L07_IPTABLES_DYNAMIC_BUILD
		default "static"  if BRCM502L07_IPTABLES_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_IPTABLES
		def_bool y
		depends on BRCM502L07_IPTABLES_DYNAMIC_BUILD || BRCM502L07_IPTABLES_STATIC_BUILD
endif

choice
	prompt "Bridge Firewall"
	default BRCM502L07_EBTABLES_DONT_BUILD

	config BRCM502L07_EBTABLES_DONT_BUILD
		bool "don't build"

	config BRCM502L07_EBTABLES_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_EBTABLES_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_EBTABLES_DYNAMIC_BUILD || BRCM502L07_EBTABLES_STATIC_BUILD
	config BRCMSDK502L07_BUILD_EBTABLES
		string
		default "dynamic" if BRCM502L07_EBTABLES_DYNAMIC_BUILD
		default "static"  if BRCM502L07_EBTABLES_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_EBTABLES
		def_bool y
		depends on BRCM502L07_EBTABLES_DYNAMIC_BUILD || BRCM502L07_EBTABLES_STATIC_BUILD
endif

choice
	prompt "Time of Day restrictions"
	default BRCM502L07_TOD_DONT_BUILD

	config BRCM502L07_TOD_DONT_BUILD
		bool "don't build"

	config BRCM502L07_TOD_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_TOD_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_TOD_DYNAMIC_BUILD || BRCM502L07_TOD_STATIC_BUILD
	config BRCMSDK502L07_BUILD_TOD
		string
		default "dynamic" if BRCM502L07_TOD_DYNAMIC_BUILD
		default "static"  if BRCM502L07_TOD_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_TOD
		def_bool y
endif

choice
	prompt "Url Filtering"
	default BRCM502L07_URLFILTER_DONT_BUILD

	config BRCM502L07_URLFILTER_DONT_BUILD
		bool "don't build"

	config BRCM502L07_URLFILTER_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_URLFILTER_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_URLFILTER_DYNAMIC_BUILD || BRCM502L07_URLFILTER_STATIC_BUILD
	config BRCMSDK502L07_BUILD_URLFILTER
		string
		default "dynamic" if BRCM502L07_URLFILTER_DYNAMIC_BUILD
		default "static"  if BRCM502L07_URLFILTER_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_URLFILTER
		def_bool y
endif

choice
	prompt "Bridge Control Utility"
	default BRCM502L07_BRCTL_DONT_BUILD

	config BRCM502L07_BRCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_BRCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_BRCTL_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_BRCTL_DYNAMIC_BUILD || BRCM502L07_BRCTL_STATIC_BUILD
	config BRCMSDK502L07_BUILD_BRCTL
		string
		default "dynamic" if BRCM502L07_BRCTL_DYNAMIC_BUILD
		default "static"  if BRCM502L07_BRCTL_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_BRCTL
		def_bool y
endif

choice
	prompt "DHCP(server and client)"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS
	default BRCM502L07_UDHCP_DONT_BUILD

	config BRCM502L07_UDHCP_DONT_BUILD
		bool "don't build"

	config BRCM502L07_UDHCP_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_UDHCP_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_UDHCP_DYNAMIC_BUILD || BRCM502L07_UDHCP_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_UDHCP
		string
		default "dynamic" if BRCM502L07_UDHCP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_UDHCP_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_UDHCP
		def_bool y

	config BRCMSDK502L07_BUILD_UDHCP_RELAY
		bool "Support for DHCP relay"

	config BRCMSDK502L07_BRCM_DHCP_SERVER_DEFAULT
		bool "Server enabled by default"

	config BRCMSDK502L07_BRCM_DHCP_CLIENT_DEFAULT
		bool "Client enabled by default"
endif

choice
	prompt "SNTP support"
	depends on (BRCMSDK502L07_BUILD_BUSYBOX_NTPD=n)
	default BRCM502L07_SNTP_DONT_BUILD
	
	config BRCM502L07_SNTP_DONT_BUILD
		bool "don't build"

	config BRCM502L07_SNTP_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_SNTP_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_SNTP_DYNAMIC_BUILD || BRCM502L07_SNTP_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_SNTP
		string
		default "dynamic" if BRCM502L07_SNTP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_SNTP_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_SNTP
		def_bool y
endif

choice
	prompt "DNS Relay"
	default BRCMSDK502L07_DRELAY_DPROXY

	config BRCMSDK502L07_DRELAY_DNSPROBE
		bool "DNS-Probe"
	config BRCMSDK502L07_DRELAY_DPROXY
		bool "DNS-Proxy"
	config BRCMSDK502L07_DRELAY_DPROXYWITHPROBE
		bool "DNS-Proxy-with-Probe"
	config BRCMSDK502L07_DRELAY_NONE
		bool "None"
endchoice

config BRCMSDK502L07_BUILD_DNSPROBE
	string
	default "dynamic" if BRCMSDK502L07_DRELAY_DNSPROBE
	default ""

config BRCM502L07_RM_QUOTES_BUILD_DNSPROBE
	def_bool y

config BRCMSDK502L07_BUILD_DPROXY
	string
	default "dynamic" if  BRCMSDK502L07_DRELAY_DPROXY || BRCMSDK502L07_DRELAY_DPROXYWITHPROBE
	default "" if BRCMSDK502L07_DRELAY_DNSPROBE
	default ""

config BRCM502L07_RM_QUOTES_BUILD_DPROXY
	def_bool y

config BRCMSDK502L07_BUILD_DPROXYWITHPROBE
	string
	default "dynamic" if BRCMSDK502L07_DRELAY_DPROXYWITHPROBE
	default ""

config BRCM502L07_RM_QUOTES_BUILD_DPROXYWITHPROBE
	def_bool y

choice
	prompt "DNS Redirector"
	default BRCM502L07_DNSSPOOF_DONT_BUILD
config BRCM502L07_DNSSPOOF_DONT_BUILD
	bool "don't build"
config BRCM502L07_DNSSPOOF_DYNAMIC_BUILD
	bool "dynamic"
config BRCM502L07_DNSSPOOF_STATIC_BUILD
	bool "static"
endchoice
if BRCM502L07_DNSSPOOF_DYNAMIC_BUILD || BRCM502L07_DNSSPOOF_STATIC_BUILD
config BRCMSDK502L07_BUILD_DNSSPOOF
	string
	default "dynamic" if BRCM502L07_DNSSPOOF_DYNAMIC_BUILD
	default "static"  if BRCM502L07_DNSSPOOF_STATIC_BUILD
config BRCM502L07_RM_QUOTES_BUILD_DNSSPOOF
	def_bool y
endif

choice
	prompt "Dynamic DNS support"
	depends on BRCMSDK502L07_BUILD_BRCM_CMS
	default BRCM502L07_DDNSD_DONT_BUILD

	config BRCM502L07_DDNSD_DONT_BUILD
		bool "don't build"

	config BRCM502L07_DDNSD_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_DDNSD_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_DDNSD_DYNAMIC_BUILD || BRCM502L07_DDNSD_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_DDNSD
		string
		default "dynamic" if BRCM502L07_DDNSD_DYNAMIC_BUILD
		default "static"  if BRCM502L07_DDNSD_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_DDNSD
		def_bool y
endif

if (BRCM502L07_VCONFIG_DYNAMIC_BUILD || !BRCM502L07_VCONFIG_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_SUPERDMZ
		bool "Advanced DMZ"
endif 

choice
	prompt "Iproute2 Utility for Policy Routing"
	default BRCM502L07_IPROUTE2_DONT_BUILD

	config BRCM502L07_IPROUTE2_DONT_BUILD
		bool "don't build"

	config BRCM502L07_IPROUTE2_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_IPROUTE2_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_IPROUTE2_DYNAMIC_BUILD || BRCM502L07_IPROUTE2_STATIC_BUILD
	config BRCMSDK502L07_BUILD_IPROUTE2
		string
		default "dynamic" if BRCM502L07_IPROUTE2_DYNAMIC_BUILD
		default "static"  if BRCM502L07_IPROUTE2_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_IPROUTE2
		def_bool y
endif

choice
	prompt "Dynamic Routing Daemon RIP"
	default BRCM502L07_ZEBRA_DONT_BUILD

	config BRCM502L07_ZEBRA_DONT_BUILD
		bool "don't build"

	config BRCM502L07_ZEBRA_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_ZEBRA_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_ZEBRA_DYNAMIC_BUILD || BRCM502L07_ZEBRA_STATIC_BUILD
	config BRCMSDK502L07_BUILD_ZEBRA
		string
		default "dynamic" if BRCM502L07_ZEBRA_DYNAMIC_BUILD
		default "static"  if BRCM502L07_ZEBRA_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_ZEBRA
		def_bool y
endif

choice
	prompt "Multicast Proxy (mcpd)"
	default BRCM502L07_MCAST_PROXY_DONT_BUILD

	config BRCM502L07_MCAST_PROXY_DONT_BUILD
		bool "don't build"

	config BRCM502L07_MCAST_PROXY_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_MCAST_PROXY_STATIC_BUILD
		bool "static"
endchoice

if BRCM502L07_MCAST_PROXY_DYNAMIC_BUILD || BRCM502L07_MCAST_PROXY_STATIC_BUILD
	config BRCMSDK502L07_BUILD_MCAST_PROXY
		string
		default "dynamic" if BRCM502L07_MCAST_PROXY_DYNAMIC_BUILD
		default "static"  if BRCM502L07_MCAST_PROXY_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_MCAST_PROXY
		def_bool y
endif

config BRCMSDK502L07_BUILD_MCAST_SNOOP
	bool "Multicast Snooping"

config BRCMSDK502L07_BUILD_PCP
	bool "PCP UPnP IWF"

config BRCMSDK502L07_BCM_JUMBO_FRAME
	bool "Jumbo Frame Support"

if (BRCMSDK502L07_BCM_JUMBO_FRAME)
	config BRCMSDK502L07_BCM_MAX_MTU_SIZE
		int "Support for Maximum Payload Size"

	config BRCMSDK502L07_BCM_USER_DEFINED_DEFAULT_MTU
		bool "User Defined Default MTU"

	config BRCMSDK502L07_BCM_USER_DEFINED_DEFAULT_MTU_SIZE
		int "User Defined Default MTU Size"
		depends on BRCMSDK502L07_BCM_USER_DEFINED_DEFAULT_MTU

	config BRCMSDK502L07_BCM_IGNORE_BRIDGE_MTU
		bool "Ignore Bridge MTU while forwarding in accelerated path"
endif

config BRCMSDK502L07_BRCM_DRIVER_TM
	tristate "Broadcom Traffic Manager"

config BRCMSDK502L07_BUILD_BCMTM
	depends on (BRCMSDK502L07_BRCM_DRIVER_TM=y || BRCMSDK502L07_BRCM_DRIVER_TM=m)
	bool "Broadcom Traffic Manager CLI Support"

config BRCMSDK502L07_BRCM_DRIVER_DPI_QOS_CPU
	depends on (BRCMSDK502L07_BUILD_DPI=y && (BRCMSDK502L07_BRCM_DRIVER_TM=y || BRCMSDK502L07_BRCM_DRIVER_TM=m))
	bool "DPI QoS CPU Path (experimental)"

###################################################################################
menu "Traffic Control selection"

config BRCMSDK502L07_BRCM_KERNEL_NETQOS
	bool "Traffic Control"
	#def_bool y if (BRCMSDK502L07_BRCM_TC_RATE_LIMIT && BRCMSDK502L07_BRCM_TC_POLICING)

config BRCMSDK502L07_BRCM_TC_RATE_LIMIT
	bool "Rate Limit"
	select BRCMSDK502L07_BRCM_KERNEL_NETQOS # select : if BRCM_TC_RATE_LIMIT is enable, then BRCM_KERNEL_NETQOS will be enable automatically

config BRCMSDK502L07_BRCM_TC_POLICING
	bool "TCPolicing"
	select BRCMSDK502L07_BRCM_KERNEL_NETQOS
config BRCMSDK502L07_BRCM_HW_POLICING
	depends on (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	bool "HWPolicing"
endmenu # Traffic Control selection

config BRCMSDK502L07_BUILD_TMCTL
	bool "Enable Traffic Management Control Utility (TMCTL)"

config BRCMSDK502L07_BUILD_DPI
	bool "Enable Deep Packet Inspection"

config BRCMSDK502L07_BRCM_DRIVER_DPI
	depends on BRCMSDK502L07_BUILD_DPI
	def_tristate m

config BRCMSDK502L07_BRCM_DPI_TEST
	bool "DPI test classification mode"
	depends on BRCMSDK502L07_BUILD_DPI

config BRCMSDK502L07_BRCM_DRIVER_DPI_QOS
	bool "DPI QoS"
	depends on BRCMSDK502L07_BUILD_DPI

config BRCMSDK502L07_BRCM_DRIVER_DPI_WLAN_QOS
	bool "DPI WLAN QoS"
	depends on BRCMSDK502L07_BUILD_DPI && BRCMSDK502L07_BRCM_DRIVER_DPI_QOS

config BRCMSDK502L07_BUILD_MAP
	bool "Enable MAP-T MAP-E"

config BRCMSDK502L07_BRCM_DRIVER_MAP
	depends on BRCMSDK502L07_BUILD_MAP
	def_tristate m

config BRCMSDK502L07_BUILD_MPTCP
	bool "Enable MPTCP support"

endmenu # Firewall, ALGs, and Networking Features

###################################################################################
menu "Datapath"
## Flow-cache configuration - Start
menu "Flow-Cache Acceleration"

config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW
	tristate "Packet Flow Accelerator"

if (BRCMSDK502L07_BRCM_DRIVER_PKTFLOW)
	config BRCMSDK502L07_BRCM_PKTFLOW_MAX_FLOWS
		int "Max Number of Flow Entries"
		default 8192 if BRCMSDK502L07_BRCM_MINIGW
		default 16384 if (!BRCMSDK502L07_BRCM_MINIGW && (BRCMSDK502L07_BRCM_DRIVER_ARCHER=y || BRCMSDK502L07_BRCM_DRIVER_ARCHER=m || BRCMSDK502L07_BRCM_DRIVER_RDPA=y || BRCMSDK502L07_BRCM_DRIVER_RDPA=m))
		default 1024

	config BRCMSDK502L07_BRCM_PKTFLOW_MAX_FDB
		int "Max Number of FDB Entries"
		default 1024 if (BRCMSDK502L07_BRCM_DRIVER_ARCHER=y || BRCMSDK502L07_BRCM_DRIVER_ARCHER=m || BRCMSDK502L07_BRCM_DRIVER_RDPA || BRCMSDK502L07_BRCM_DRIVER_RDPA=m)
		default 128

	config BRCMSDK502L07_BRCM_PKTFLOW_MAX_HOST_DEV
		int "Max Number of Host Device Entries"
		default 64

	config BRCMSDK502L07_BRCM_PKTFLOW_MAX_HOST_MAC
		int "Max Number of Host MAC Entries"
		default 32

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_IPV6
		bool "IPv6 Support"

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_MCAST
		bool "Multicast Support"

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_GRE
		bool "GRE Support"

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_L2TP
		bool "L2TP Support"

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_FEATURE
		bool "Per Packet Modification Support"

	config BRCMSDK502L07_BRCM_DRIVER_PKTFLOW_DEBUG
		bool "Debug Support"

	choice
		prompt "Flow Cache Control Utility"
		default BRCM502L07_FCCTL_DONT_BUILD

		config BRCM502L07_FCCTL_DONT_BUILD
			bool "don't build"

		config BRCM502L07_FCCTL_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_FCCTL_STATIC_BUILD
		bool "static"
	endchoice

	if (BRCM502L07_FCCTL_STATIC_BUILD || BRCM502L07_FCCTL_DYNAMIC_BUILD)
		config BRCMSDK502L07_BUILD_FCCTL
			string
			default "dynamic" if BRCM502L07_FCCTL_DYNAMIC_BUILD
			default "static"  if BRCM502L07_FCCTL_STATIC_BUILD

		config BRCM502L07_RM_QUOTES_BUILD_FCCTL
			def_bool y
	endif
	
	choice
		prompt "Blog Control Utility"
		default BRCM502L07_BUILD_BLOGCTL_DONT_BUILD

		config BRCM502L07_BUILD_BLOGCTL_DONT_BUILD
			bool "don't build"

		config BRCM502L07_BUILD_BLOGCTL_DYNAMIC_BUILD
			bool "dynamic"

		config BRCM502L07_BUILD_BLOGCTL_STATIC_BUILD
			bool "static"
	endchoice

	if (BRCM502L07_BUILD_BLOGCTL_STATIC_BUILD || BRCM502L07_BUILD_BLOGCTL_DYNAMIC_BUILD)
		config BRCMSDK502L07_BUILD_BLOGCTL
			string
			default "dynamic" if BRCM502L07_BUILD_BLOGCTL_DYNAMIC_BUILD
			default "static"  if BRCM502L07_BUILD_BLOGCTL_STATIC_BUILD

		config BRCM502L07_RM_QUOTES_BUILD_BLOGCTL
			def_bool y
	endif
endif # if (BRCMSDK502L07_BRCM_DRIVER_PKTFLOW)
endmenu # menu "Flow-Cache Acceleration"
## Flow-cache configuration - End

###################################################################################
## 63268/FAP configuration - Start
if BRCMSDK502L07_BRCM_63268
	menu "FAP Configuration"
		config BRCMSDK502L07_BRCM_DRIVER_FAP
			tristate "FAP Support"
			depends on BRCMSDK502L07_BRCM_63268

		config BRCMSDK502L07_BRCM_DRIVER_FAP_GSO
			bool "GSO Support"
			depends on (BRCMSDK502L07_BRCM_63268 && (BRCMSDK502L07_BRCM_DRIVER_FAP && BRCMSDK502L07_BRCM_DRIVER_BPM))

		config BRCMSDK502L07_BRCM_DRIVER_FAP_GSO_LOOPBACK
			bool "FAP GSO LOOPBACK Support for WLAN"
			depends on BRCMSDK502L07_BRCM_DRIVER_FAP_GSO

		config BRCMSDK502L07_BRCM_DRIVER_FAP_LAYER2
			bool "FAP Layer 2 Bridge"
			depends on BRCMSDK502L07_BRCM_DRIVER_FAP

		config BRCMSDK502L07_BRCM_DRIVER_ARL
			tristate "ARL Support"
			depends on BRCMSDK502L07_BRCM_DRIVER_FAP
	endmenu # menu "FAP Configuration"
endif # if BRCMSDK502L07_BRCM_63268

## 63178/47622/ARCHER configuration - Start
if (BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
	config BRCMSDK502L07_BRCM_DRIVER_ARCHER
		tristate "Archer Packet Accelerator"

	if !BRCMSDK502L07_BRCM_DRIVER_ARCHER
		config BRCMSDK502L07_BRCM_DRIVER_ARCHER_WLAN
			def_bool n
	endif # if !BRCMSDK502L07_BRCM_DRIVER_ARCHER

	if (BRCMSDK502L07_BRCM_DRIVER_ARCHER)
		menu "ARCHER Configuration"
			config BRCMSDK502L07_BRCM_DRIVER_ARCHER_WLAN
				bool "Archer WLAN Interface"

			config BRCMSDK502L07_BRCM_DRIVER_ARCHER_GSO
				bool "Archer Generic Segmentation Offload (GSO)"

			config BRCMSDK502L07_BUILD_ARCHERCTL
				bool "Archer Packet Accelerator CLI Support"

			config BRCMSDK502L07_BRCM_DRIVER_ARCHER_SIM
				bool "Archer Simulation"

			config BRCMSDK502L07_BRCM_DRIVER_CMDLIST
				def_tristate m

			config BRCMSDK502L07_BRCM_CSO
				bool "Checksum Offload(CSO) Support"
		endmenu # menu "ARCHER Configuration"
	endif # if (BRCMSDK502L07_BRCM_DRIVER_ARCHER)
endif # if (BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
## 63178/47622/ARCHER configuration - End

###################################################################################
## RDPA configuration - Start
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
menu "Runner Data Path API Selection"

config BRCMSDK502L07_BUILD_RDPA
	bool "Build RDPA"
	default y

if (BRCMSDK502L07_BUILD_RDPA)
	config BRCMSDK502L07_BRCM_DRIVER_BDMF
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA_GPL
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA_USR
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA_GPL_EXT
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA_MW
		def_tristate m

	config BRCMSDK502L07_BRCM_DRIVER_RDPA_DRV
		def_tristate m

	config BRCMSDK502L07_BUILD_BDMF_SHELL
		bool "BDMF Shell"

	if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
		config BRCMSDK502L07_BRCM_DRIVER_GPON_STACK
			tristate "GPON Stack Driver"

		config BRCMSDK502L07_BRCM_DRIVER_RDPA_BRIDGE
			tristate "Runner Bridge Driver"

		config BRCMSDK502L07_BRCM_DRIVER_LASER
			tristate "GPON Laser Driver"
	endif

	if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)
		config BRCMSDK502L07_BUILD_DSL_RUNNER
			def_bool y
	endif # if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)

	if (BRCMSDK502L07_BRCM_4908 && BRCMSDK502L07_BUILD_HND_EAP)
		config BRCMSDK502L07_BRCM_CAPWAP
			bool "Control and Provisioning of Wireless Access Points (CAPWAP)"
	endif # if (BRCMSDK502L07_BRCM_4908 && BRCMSDK502L07_BUILD_HND_EAP)
endif #if (BRCMSDK502L07_BUILD_RDPA)

endmenu #menu "Runner Data Path API Selection"

endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6836 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846)
## RDPA configuration - End

###################################################################################
## Runner Flow Acceleration (PKTRUNNER) configuration - Start
if (BRCMSDK502L07_BUILD_RDPA)
menu "Runner Flow Acceleration"
	config BRCMSDK502L07_BRCM_DRIVER_PKTRUNNER
		tristate "Runner Packet Accelerator"

	if (BRCMSDK502L07_BRCM_DRIVER_PKTRUNNER)
		config BRCMSDK502L07_BRCM_RUNNER_MAX_FLOWS
			int "Max Number of Runner Accelerated Flows" if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6878)
			default 16384

		config BRCMSDK502L07_BRCM_DRIVER_PKTRUNNER_GSO
			bool "Runner GSO Support"
			depends on (!BRCMSDK502L07_BRCM_63158 && !BRCMSDK502L07_BRCM_6858 && !BRCMSDK502L07_BRCM_6856 && !BRCMSDK502L07_BRCM_6846 && !BRCMSDK502L07_BRCM_6878)

		config BRCMSDK502L07_BRCM_DRIVER_CMDLIST
			def_tristate m
			depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)

		config BRCMSDK502L07_BRCM_DRIVER_CMDLIST_SIM
			bool "Command List Simulation"
			depends on (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)

		config BRCMSDK502L07_BRCM_CSO
			bool "Checksum Offload(CSO) Support"
			depends on (!BRCMSDK502L07_BRCM_6838 || !BRCMSDK502L07_BRCM_6848)
	
		config BRCMSDK502L07_BRCM_RDPA_MCAST_SUPPORT
			bool "Enable RDPA Multicast Support"
			default y if !BRCMSDK502L07_BRCM_4908
			default n
			depends on BRCMSDK502L07_BUILD_DSL_RUNNER

		config BRCMSDK502L07_BCM_FCACHE_CLASSIFICATION_BYPASS
			bool "Enable Sw Fcache Classification bypass"
			depends on (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908)

		config BRCMSDK502L07_BRCM_DRIVER_NETXL
			tristate "NetXL (Network Device Accelerator) Driver"
	endif # if (BRCMSDK502L07_BRCM_DRIVER_PKTRUNNER)
endmenu # menu "Runner Flow Acceleration"
endif # if (BRCMSDK502L07_BUILD_RDPA)
## Runner Flow Acceleration (PKTRUNNER) configuration - End

###################################################################################
## Runner Memory configuration - Start
if (BRCMSDK502L07_BUILD_RDPA)
menu "Runner Memory Configuration"
	if (BRCMSDK502L07_BUILD_DSL_RUNNER)
		if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)
			config BRCMSDK502L07_BRCM_DRIVER_FPM
				def_tristate m

			config BRCMSDK502L07_BRCM_FPM_POOL_NUM
				int "FPM Pool Number"
				default 2 if (BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER && BRCMSDK502L07_BRCM_4908)

			config BRCMSDK502L07_BRCM_FPM_USE_DT
				bool "FPM init based on device tree"
		endif # if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)
	endif # if (BRCMSDK502L07_BUILD_DSL_RUNNER)

	
	config BRCMSDK502L07_BRCM_RDP_PARAM1_SIZE
		int "TM memory reservation(MB)"

	config BRCMSDK502L07_BRCM_RDP_PARAM2_SIZE
		int "MC memory reservation(MB)"

	if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_63158)
		menu "Feed Ring dynamic allocations"
			config BRCMSDK502L07_BCM_FEED_RING_DYNAMIC
				bool "Enable Feed Ring dynamic allocations"

			if BRCMSDK502L07_BCM_FEED_RING_DYNAMIC
				config BRCMSDK502L07_BCM_FEED_RING_SIZE
					int "Feed Ring Size"
					default 2048
				
				config BRCMSDK502L07_BCM_FEED_RING_ALLOC_START
					int "Feed Allocation Start"
					default 1536
				
				config BRCMSDK502L07_BCM_FEED_RING_ALLOC_BATCH
					int "Feed Allocation Batch"
					default 32
				
				config BRCMSDK502L07_BCM_FEED_RING_REFILL_EVERY
					int "Feed Refill Every"
					default 1024

				config BRCMSDK502L07_BCM_FEED_RING_MAX_ALLOCATIONS
					int "Feed Max Allocations"
					default 16384
			endif
		endmenu # menu "Feed Ring dynamic allocations"
	endif # if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878 || BRCMSDK502L07_BRCM_63158)

endmenu # menu "Runner Memory Configuration"
endif # if (BRCMSDK502L07_BUILD_RDPA)
## Runner Memory configuration - End

###################################################################################
## WLAN Acceleration Support - Start
menu "WLAN Acceleration"
if (BRCMSDK502L07_BRCM_DRIVER_FAP || BRCMSDK502L07_BRCM_DRIVER_RDPA || BRCMSDK502L07_BRCM_DRIVER_PKTFLOW)
config BRCMSDK502L07_BRCM_DRIVER_WIFI_FORWARDING_DRV
	tristate "WIFI Forwarding Driver"

config BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER
	bool "DHD Runner Acceleration Support"
	depends on BRCMSDK502L07_BUILD_RDPA

config BRCMSDK502L07_BRCM_DHD_PARAM1_SIZE
	int "DHD 0 memory reservation(MB)"
	default 0
	depends on BRCMSDK502L07_BUILD_RDPA && BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER

config BRCMSDK502L07_BRCM_DHD_PARAM2_SIZE
	int "DHD 1 memory reservation(MB)"
	default 0
	depends on BRCMSDK502L07_BUILD_RDPA && BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER

config BRCMSDK502L07_BRCM_DHD_PARAM3_SIZE
	int "DHD 2 memory reservation(MB)"
	default 0
	depends on BRCMSDK502L07_BUILD_RDPA && BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER

config BRCMSDK502L07_BRCM_DRIVER_DHD_RUNNER_GSO
	bool "Runner DHD GSO Support"
	depends on BRCMSDK502L07_BRCM_DRIVER_PKTRUNNER_GSO
endif # if (BRCMSDK502L07_BRCM_DRIVER_FAP || BRCMSDK502L07_BRCM_DRIVER_RDPA || BRCMSDK502L07_BRCM_DRIVER_PKTFLOW)
endmenu # menu "WLAN Acceleration"
## WLAN Acceleration Support - End

###################################################################################
## Software BPM Support - Start
menu "Software Buffer Pool Manager"
config BRCMSDK502L07_BRCM_DRIVER_BPM
	tristate "Buffer Pool Manager (BPM)"

if BRCMSDK502L07_BRCM_DRIVER_BPM
   config BRCMSDK502L07_BRCM_BUF_MEM_PRCNT
	int "Buffer Memory as % of Total Memory"
   config BRCMSDK502L07_BRCM_BPM_BUF_TRACKING
	bool "Buffer Tracking Enabled"
  choice
	prompt "BPM Control Utility"
	default BRCM502L07_BPMCTL_DONT_BUILD
  config BRCM502L07_BPMCTL_DONT_BUILD
	bool "don't build"
  config BRCM502L07_BPMCTL_DYNAMIC_BUILD
	bool "dynamic"
  config BRCM502L07_BPMCTL_STATIC_BUILD
	bool "static"
  endchoice
  if BRCM502L07_BPMCTL_DYNAMIC_BUILD || BRCM502L07_BPMCTL_STATIC_BUILD
     config BRCMSDK502L07_BUILD_BPMCTL
	string
	default "dynamic" if BRCM502L07_BPMCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_BPMCTL_STATIC_BUILD
     config BRCM502L07_RM_QUOTES_BUILD_BPMCTL
	def_bool y
  endif
endif
endmenu # menu "Software Buffer Pool Manager"
## Software BPM Support - End

###################################################################################
## Ingress QoS Support - Start
menu "Ingress QoS"
config BRCMSDK502L07_BRCM_DRIVER_INGQOS
	tristate "Ingress QoS"

if BRCMSDK502L07_BRCM_DRIVER_INGQOS
  choice
	prompt "Ingress QoS Control Utility"
	default BRCM502L07_IQCTL_DONT_BUILD
  config BRCM502L07_IQCTL_DONT_BUILD
	bool "don't build"
  config BRCM502L07_IQCTL_DYNAMIC_BUILD
	bool "dynamic"
  config BRCM502L07_IQCTL_STATIC_BUILD
	bool "static"
  endchoice
  if BRCM502L07_IQCTL_DYNAMIC_BUILD || BRCM502L07_IQCTL_STATIC_BUILD
     config BRCMSDK502L07_BUILD_IQCTL
	string
	default "dynamic" if BRCM502L07_IQCTL_DYNAMIC_BUILD
	default "static"  if BRCM502L07_IQCTL_STATIC_BUILD
     config BRCM502L07_RM_QUOTES_BUILD_IQCTL
	def_bool y
  endif
endif
endmenu #menu "Buffer Pool Manager and Ingress QoS"
## Ingress QoS Support - End

###################################################################################
## Misc Datapath configuration - Start
menu "Misc datapath configuration"
config BRCMSDK502L07_BRCM_DRIVER_SW_GSO
	bool "SW GSO Support on Host CPU"

config BRCMSDK502L07_BRCM_DRIVER_FBOND
	tristate "Packet Flow Bonding (experimental)"

if (BRCMSDK502L07_BRCM_DRIVER_FBOND)
	config BRCMSDK502L07_BRCM_DRIVER_FBOND_DEBUG
		bool "Debug Support"

	choice
		prompt "Flow Bonding Control Utility"
		default BRCM502L07_FBCTL_DONT_BUILD
		config BRCM502L07_FBCTL_DONT_BUILD
			bool "don't build"
		config BRCM502L07_FBCTL_DYNAMIC_BUILD
			bool "dynamic"
		config BRCM502L07_FBCTL_STATIC_BUILD
			bool "static"
	endchoice
	if BRCM502L07_FBCTL_DYNAMIC_BUILD || BRCM502L07_FBCTL_STATIC_BUILD
		config BRCMSDK502L07_BUILD_FBCTL
			string
			default "dynamic" if BRCM502L07_FBCTL_DYNAMIC_BUILD
			default "static"  if BRCM502L07_FBCTL_STATIC_BUILD
		config BRCM502L07_RM_QUOTES_BUILD_FBCTL
			def_bool y
  	endif
endif

config BRCMSDK502L07_BRCM_RNR_CPU_RX_DYN_METER
	bool "Runner CPU Rx dynamic meter"
	depends on BRCMSDK502L07_BUILD_RDPA
endmenu # menu "Misc datapath configuration"
## Misc Datapath configuration - End

endmenu #menu "Datapath"
##########################################################################
menu "BEEP - Broadcom Execution Environment Platform"

config BRCMSDK502L07_BUILD_MODSW_EE
	bool "Enable BEEP"
	
if (BRCMSDK502L07_BUILD_MODSW_EE)
	choice
		prompt "Bus Channel (IPC)"
		default BRCMSDK502L07_MODSW_EE_BUILD_DBUS

		config BRCMSDK502L07_MODSW_EE_BUILD_DBUS
			bool "DBUS"

		config BRCMSDK502L07_MODSW_EE_BUILD_BUS_NONE
			bool "None"
	endchoice

if (BRCMSDK502L07_MODSW_EE_BUILD_DBUS)
	config BRCMSDK502L07_BUILD_ZLIB
		def_bool y
	config BRCMSDK502L07_BUILD_FFI
		def_bool y
	config BRCMSDK502L07_BUILD_GETTEXT
		def_bool y
	config BRCMSDK502L07_BUILD_GLIB
		def_bool y
#	config BRCMSDK502L07_BUILD_LIBJSONC
#		def_bool y
# 502L07 duplicate >>>
#	config BRCMSDK502L07_BUILD_DBUSREMOTE_TCP
#		bool "Enable DBUSRemote Over TCP Support"
# 502L07 duplicate <<<
endif
#	config BRCMSDK502L07_BUILD_E2FSPROGS
#		def_bool y
#	config BRCMSDK502L07_BUILD_LXC
#		def_bool y

	config BRCMSDK502L07_BUILD_BEEP_BBCD
		def_bool y 
	config BRCMSDK502L07_BUILD_MODSW_EXAMPLEEE
		def_bool y
	config BRCMSDK502L07_BUILD_MODSW_OPENWRTEE
		def_bool y
	
	config BRCMSDK502L07_BUILD_MODSW_WEBUI
		bool "Enable Management of BEEP from WebUI" 
		
	config BRCMSDK502L07_BUILD_MODSW_WEBUI_ADMIN
		depends on BRCMSDK502L07_BUILD_MODSW_WEBUI
		bool " Allow Admin access (LAN side)" 

	config BRCMSDK502L07_BUILD_MODSW_WEBUI_SUPPORT
		depends on BRCMSDK502L07_BUILD_MODSW_WEBUI
		bool "Allow Support access (WAN side)" 
		
	config BRCMSDK502L07_BUILD_MODSW_CLI
		bool "Enable Management of BEEP from CLI [Experimental]" 

	# ===========================
	#  EE selection
	# ===========================	
	menu "EE Selection"
	config BRCMSDK502L07_BUILD_MODSW_BEE_PREINSTALL
		bool "Broadcom Execution Env (BEE) Preinstall"
		
	config BBRCMSDK502L07_BUILD_MODSW_EXAMPLEEE_PREINSTALL
		bool "Broadcom Example Execution Env (EE) Preinstall"

# 502L07 not exist >>>	
#	config BRCMSDK502L07_BUILD_MODSW_OPENWRTEE
#		bool "OpenWRT Execution Env (EE) Preinstall"
# 502L07 not exist <<<
		
	config BRCMSDK502L07_BUILD_MODSW_DOCKEREE
		depends on (BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63158)
		bool " Docker Execution Env (EE) Preinstall" 
		
	
	config BRCMSDK502L07_BUILD_MODSW_DOCKEREE_BR_IP
		depends on BRCMSDK502L07_BUILD_MODSW_DOCKEREE && (BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63158)
		string " docker0 IP Address/Mask" 
		
	config BRCMSDK502L07_BUILD_MODSW_OSGIEE
		bool "OSGI Execution Env (EE) Preinstall"
		
	config BRCMSDK502L07_BUILD_OSGI_FELIX
		depends on BRCMSDK502L07_BUILD_MODSW_OSGIEE
		bool "Enable Felix OSGI" 
	config BRCMSDK502L07_BUILD_JVM_CLASSPATH
		depends on BRCMSDK502L07_BUILD_MODSW_OSGIEE
		bool "Enable Java Classpath"
	config BRCMSDK502L07_BUILD_JVM_JAMVM
		depends on BRCMSDK502L07_BUILD_MODSW_OSGIEE
		bool "Enable JamVM JVM"	
	config BRCMSDK502L07_JAMVM_MIN_HEAP_SIZE
		int "Initial Heap Size for JamVM (in kbytes, 4000=4M)"
		depends on (BRCMSDK502L07_BUILD_JVM_JAMVM && BRCMSDK502L07_BUILD_MODSW_OSGIEE)
		default 4000 	
	config BRCMSDK502L07_JAMVM_MAX_HEAP_SIZE
		int "Maximum Heap Size for JamVM (in kbytes, 10000=10M)"
		depends on (BRCMSDK502L07_BUILD_JVM_JAMVM && BRCMSDK502L07_BUILD_MODSW_OSGIEE)
		default 10000
	config BRCMSDK502L07_JAMVM_STACK_SIZE_PER_THREAD
		int "Stack Size of Each Thread (in kbytes, 256=256K)"
		depends on (BRCMSDK502L07_BUILD_JVM_JAMVM && BRCMSDK502L07_BUILD_MODSW_OSGIEE)
		default 256 			
	endmenu
	# ===========================
	#  DU selection
	# ===========================	
	menu "DU Selection"
	if (BRCMSDK502L07_BUILD_MODSW_BEE_PREINSTALL)
	config BRCMSDK502L07_BUILD_BRCM_BEE_AIRIQ_PREINSTALL
		bool "Air-IQ Spectrum Analysis BEE Preinstall"
	config BBRCMSDK502L07_BUILD_BRCM_BEE_CWMPC_PREINSTALL
		bool "CWMP BEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_BEE_DAD_PREINSTALL
		bool "DAD BEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_BEE_DMACTL_PREINSTALL
		bool "Data Model Access Client BEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_BEE_DSLDIAGD_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_DSLDIAGD
		bool "DSL Diag daemon BEE Preinstall" 
	config BRCMSDK502L07_BUILD_BRCM_BEE_IPERFV2_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_IPERFV2
		bool "IPerf v2 BEE Preinstall" 
	config BRCMSDK502L07_BUILD_BRCM_BEE_SAMBA_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_SAMBA
		bool "Samba BEE Preinstall" 
	config BRCMSDK502L07_BUILD_BRCM_BEE_SPTESTSUITE_PREINSTALL
		bool "Service Platform Test Suite BEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_BEE_TR69C_PREINSTALL
		depends on BRCMSDK502L07_MGMT_TR69C_BEEP
		bool "tr69c BEE Preinstall"
# 502L07 not exist >>>
#	config BBRCMSDK502L07_BUILD_BRCM_BEE_USPC_PREINSTALL
#		depends on BRCMSDK502L07_BUILD_DM_PURE181
#		bool "User Services Platform Client BEE Preinstall" 
#	config BRCMSDK502L07_BUILD_BRCM_BEE_USPD_PREINSTALL
#		depends on BRCMSDK502L07_BUILD_DM_PURE181
#		bool "User Services Platform Daemon BEE Preinstall"
# 502L07 not exist <<<
	endif
	##########  HOSTEEE Preinstall #############
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_AIRIQ_PREINSTALL
		bool "Air-IQ Spectrum Analysis HOSTEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_CWMPC_PREINSTALL
		bool "CWMP HOSTEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_DAD_PREINSTALL
		bool "DAD HOSTEE Preinstall"
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_DMACTL_PREINSTALL
		bool "Data Model Access Client HOSTEE Preinstall"
		
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_DSLDIAGD_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_DSLDIAGD
		bool "DSL Diag daemon HOSTEE Preinstall" 
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_IPERFV2_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_IPERFV2
		bool "IPerf v2 HOSTEE Preinstall" 
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_SAMBA_PREINSTALL
		depends on BRCMSDK502L07_BUILD_BEEP_SAMBA
		bool "Samba HOSTEE Preinstall" 
		
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_SPTESTSUITE_PREINSTALL
		bool "Service Platform Test Suite HOSTEE Preinstall"
		
		
	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_TR69C_PREINSTALL
		depends on BRCMSDK502L07_MGMT_TR69C_BEEP
		bool "tr69c HOSTEE Preinstall"
# 502L07 not exist >>>
#	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_USPC_PREINSTALL
#		depends on BRCM502L07_BUILD_DM_PURE181
#		bool "User Services Platform Client HOSTEE Preinstall" 
#	config BRCMSDK502L07_BUILD_BRCM_HOSTEE_USPD_PREINSTALL
#		depends on BRCMSDK502L07_BUILD_DM_PURE181
#		bool "User Services Platform Daemon HOSTEE Preinstall"
# 502L07 not exist <<<
	endmenu
endif #if (BRCMSDK502L07_BUILD_MODSW_EE)

endmenu #menu "BEEP - Broadcom Execution Environment Platform"

############################################################################33
menu "ZyXEL Features"

config BRCMSDK502L07_ZYXEL_USE_CE_SROM_FOR_ELISA_PROJECT
	bool 'Use CE power srom for VMG3925B'
	def_bool n

config BRCMSDK502L07_ZYXEL_WIND_ITALY_CUSTOMIZATION
	bool 'Customization for WIND Italy'
	def_bool n

config BRCMSDK502L07_ZYXEL_ISKON_CUSTOMIZATION
	bool 'Customization for ISKON'
	def_bool n

config BRCMSDK502L07_ZYXEL_HT_CUSTOMIZATION
	bool 'Customization for Hawaiian Telcom'
	def_bool n

config BRCMSDK502L07_ZYXEL_ALLOW_IGMPv2_JOIN_WITH_SSM
	bool 'Allow IGMPv2 Join with SSM'
	def_bool n

config BRCMSDK502L07_ZYXEL_FIX_WAN_MAC
	bool 'ZyXEL Fix WAN MAC'

config BRCMSDK502L07_ZYXEL_ONE_MAC_ADDRESS
	bool "Utilize base MAC address on all WAN interfaces"
	def_bool n

config BRCMSDK502L07_ZYXEL_PPPOE_PASS_THROUGH_WAN_MAC
	bool 'Zyxel PPPoE pass through by WAN MAC'
	def_bool n

config BRCMSDK502L07_BUILD_ZCFG
	bool 'Use ZyXEL Configuration Mgmt System (ZCFG)'
	default y if ZYXEL_SUPPORT_ZCFG
	
config BRCMSDK502L07_ZYXEL_INDEPENDENT_WPS_LED
	bool 'support independent WPS LED design'
	default y if !ZYXEL_WPS_SPOTLIGHT

config BRCMSDK502L07_ZCFG_TR98_COMPATIBLE
	bool 'ZCFG is compatible with TR098'
	depends on BRCMSDK502L07_BUILD_ZCFG

config BRCMSDK502L07_ZYXEL
	bool 'ZyXEL Product'

config BRCMSDK502L07_ZYXEL_L2_WAN_SAME_MAC
	bool "Assign same MAC (5th) for all L2 WAN interface"
	def_bool n

##############################################################################
## Please create a new project in ascending order as best you can.
##############################################################################
if (BRCMSDK502L07_ZYXEL)
	if (BRCMSDK502L07_BRCM_63268)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_3925
				bool "VMG3925"
			config BRCMSDK502L07_ZYXEL_VMG3925_B10C
				bool "VMG3925-B10C"
			config BRCMSDK502L07_ZYXEL_VMG3925_B30C
				bool "VMG3925-B30C"
			config BRCMSDK502L07_ZYXEL_3926
				bool "VMG3926"
			config BRCMSDK502L07_ZYXEL_3926B
				bool "VMG3926B"
			config BRCMSDK502L07_ZYXEL_5313
				bool "VMG5313"
			config BRCMSDK502L07_ZYXEL_5948
				bool "VMG5948"
			config BRCMSDK502L07_ZYXEL_8924_B10A
				bool "VMG8924-B10A"
			config BRCMSDK502L07_ZYXEL_8924
				bool "VMG8924-B10B"
			config BRCMSDK502L07_ZYXEL_8924_B10D
				bool "VMG8924-B10D"
			config BRCMSDK502L07_ZYXEL_8924_B30D
				bool "VMG8924-B30D"
			config BRCMSDK502L07_ZYXEL_8948
				bool "VMG8948"
			config BRCMSDK502L07_ZYXEL_9823
				bool "VMG9823"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "VMG3925"       if BRCMSDK502L07_ZYXEL_3925
			default "VMG3925_B10C"  if BRCMSDK502L07_ZYXEL_VMG3925_B10C
			default "VMG3925_B30C"  if BRCMSDK502L07_ZYXEL_VMG3925_B30C
			default "VMG3926"       if BRCMSDK502L07_ZYXEL_3926
			default "VMG3926B"      if BRCMSDK502L07_ZYXEL_3926B
			default "VMG5313"       if BRCMSDK502L07_ZYXEL_5313
			default "VMG5948"       if BRCMSDK502L07_ZYXEL_5948
			default "VMG8924_B10A"  if BRCMSDK502L07_ZYXEL_8924_B10A
			default "VMG8924"       if BRCMSDK502L07_ZYXEL_8924
			default "VMG8924_B10D"  if BRCMSDK502L07_ZYXEL_8924_B10D
			default "VMG8924_B30D"  if BRCMSDK502L07_ZYXEL_8924_B30D
			default "VMG8948"       if BRCMSDK502L07_ZYXEL_8948
			default "VMG9823"       if BRCMSDK502L07_ZYXEL_9823
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B10A  if BRCMSDK502L07_ZYXEL_3925
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B10C  if BRCMSDK502L07_ZYXEL_VMG3925_B10C
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B30C  if BRCMSDK502L07_ZYXEL_VMG3925_B30C
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3926_B10A  if BRCMSDK502L07_ZYXEL_3926
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3926B_B10A if BRCMSDK502L07_ZYXEL_3926B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG5313_B30A  if BRCMSDK502L07_ZYXEL_5313
			default BRCMSDK502L07_ZYXEL_BOARD_VMG5948_B10A  if BRCMSDK502L07_ZYXEL_5948
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10A  if BRCMSDK502L07_ZYXEL_8924_B10A
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10B  if BRCMSDK502L07_ZYXEL_8924
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10D  if BRCMSDK502L07_ZYXEL_8924_B10D
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B30D  if BRCMSDK502L07_ZYXEL_8924_B30D
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8948_B10A  if BRCMSDK502L07_ZYXEL_8948
			default BRCMSDK502L07_ZYXEL_BOARD_VMG9823_B10A  if BRCMSDK502L07_ZYXEL_9823
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B10A
				bool "VMG3925-B10A"
				depends on BRCMSDK502L07_ZYXEL_3925
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B10C
				bool "VMG3925-B10C"
				depends on BRCMSDK502L07_ZYXEL_VMG3925_B10C
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3925_B30C
				bool "VMG3925-B30C"
				depends on BRCMSDK502L07_ZYXEL_VMG3925_B30C
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3926_B10A
				bool "VMG3926-B10A"
				depends on BRCMSDK502L07_ZYXEL_3926
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3926B_B10A
				bool "VMG3926-B10B"
				depends on BRCMSDK502L07_ZYXEL_3926B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG5313_B10A
				bool "VMG5313-B10A"
				depends on BRCMSDK502L07_ZYXEL_5313
			config BRCMSDK502L07_ZYXEL_BOARD_VMG5313_B30A
				bool "VMG5313-B30A"
				depends on BRCMSDK502L07_ZYXEL_5313
			config BRCMSDK502L07_ZYXEL_BOARD_VMG5948_B10A
				bool "VMG5948-B10A"
				depends on BRCMSDK502L07_ZYXEL_5948
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10A
				bool "VMG8924-B10A"
				depends on BRCMSDK502L07_ZYXEL_8924_B10A
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10B
				bool "VMG8924-B10B"
				depends on BRCMSDK502L07_ZYXEL_8924
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B10D
				bool "VMG8924-B10D"
				depends on BRCMSDK502L07_ZYXEL_8924_B10D
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8924_B30D
				bool "VMG8924-B30D"
				depends on BRCMSDK502L07_ZYXEL_8924_B30D
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8948_B10A
				bool "VMG8948-B10A"
				depends on BRCMSDK502L07_ZYXEL_8948
			config BRCMSDK502L07_ZYXEL_BOARD_VMG9823_B10A
				bool "VMG9823-B10A"
				depends on BRCMSDK502L07_ZYXEL_9823
		endchoice
	endif #if (BRCMSDK502L07_BRCM_63268)

	if (BRCMSDK502L07_BRCM_63138)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_3086
				bool "FMG3086"
			config BRCMSDK502L07_ZYXEL_3586
				bool "FMG3586"
			config BRCMSDK502L07_ZYXEL_EMG3415
				bool "EMG3415"
			config BRCMSDK502L07_ZYXEL_VMG3927_B50B
				bool "VMG3927-B50B"
			config BRCMSDK502L07_ZYXEL_VMG4927_B50A
				bool "VMG4927-B50A"
			config BRCMSDK502L07_ZYXEL_VMG8823_B10B
				bool "VMG8823-B10B"
			config BRCMSDK502L07_ZYXEL_VMG8823_B30B
				bool "VMG8823-B30B"
			config BRCMSDK502L07_ZYXEL_VMG8823_B50B
				bool "VMG8823-B50B"
			config BRCMSDK502L07_ZYXEL_VMG8823_B60B
				bool "VMG8823-B60B"
			config BRCMSDK502L07_ZYXEL_VMG8825_B50B
				bool "VMG8825-B50B"
			config BRCMSDK502L07_ZYXEL_XMG3512
				bool "XMG3512"
			config BRCMSDK502L07_ZYXEL_XMG3563_B10A
				bool "XMG3563-B10A"
			config BRCMSDK502L07_ZYXEL_XMG8825_B50A
				bool "XMG8825-B50A"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "FMG3086"  if BRCMSDK502L07_ZYXEL_3086
			default "FMG3586"  if BRCMSDK502L07_ZYXEL_3586
			default "EMG3415"  if BRCMSDK502L07_ZYXEL_EMG3415
			default "VMG3927_B50B"  if BRCMSDK502L07_ZYXEL_VMG3927_B50B
			default "VMG4927_B50A"  if BRCMSDK502L07_ZYXEL_VMG4927_B50A
			default "VMG8823_B10B"  if BRCMSDK502L07_ZYXEL_VMG8823_B10B
			default "VMG8823_B30B"  if BRCMSDK502L07_ZYXEL_VMG8823_B30B
			default "VMG8823_B50B"  if BRCMSDK502L07_ZYXEL_VMG8823_B50B
			default "VMG8823_B60B"  if BRCMSDK502L07_ZYXEL_VMG8823_B60B
			default "VMG8825_B50B"  if BRCMSDK502L07_ZYXEL_VMG8825_B50B
			default "XMG3512"  if BRCMSDK502L07_ZYXEL_XMG3512
			default "XMG3563_B10A"  if BRCMSDK502L07_ZYXEL_XMG3563_B10A
			default "XMG8825_B50A"	if BRCMSDK502L07_ZYXEL_XMG8825_B50A
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_FMG3086_B10A if BRCMSDK502L07_ZYXEL_3086
			default BRCMSDK502L07_ZYXEL_BOARD_FMG3586_B10A if BRCMSDK502L07_ZYXEL_3586
			default BRCMSDK502L07_ZYXEL_BOARD_EMG3415_B10A if BRCMSDK502L07_ZYXEL_EMG3415
			default BRCMSDK502L07_ZYXEL_BOARD_VMG3927_B50B if BRCMSDK502L07_ZYXEL_VMG3927_B50B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG4927_B50A if BRCMSDK502L07_ZYXEL_VMG4927_B50A
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B10B if BRCMSDK502L07_ZYXEL_VMG8823_B10B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B30B if BRCMSDK502L07_ZYXEL_VMG8823_B30B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B50B if BRCMSDK502L07_ZYXEL_VMG8823_B50B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B60B if BRCMSDK502L07_ZYXEL_VMG8823_B60B
			default BRCMSDK502L07_ZYXEL_BOARD_VMG8825_B50B if BRCMSDK502L07_ZYXEL_VMG8825_B50B
			default BRCMSDK502L07_ZYXEL_BOARD_XMG3512_B10A if BRCMSDK502L07_ZYXEL_XMG3512
			default BRCMSDK502L07_ZYXEL_BOARD_XMG3563_B10A if BRCMSDK502L07_ZYXEL_XMG3563_B10A
			default BRCMSDK502L07_ZYXEL_BOARD_XMG8825_B50A if BRCMSDK502L07_ZYXEL_XMG8825_B50A
			config BRCMSDK502L07_ZYXEL_BOARD_FMG3086_B10A
				bool "FMG3086_B10A"
				depends on BRCMSDK502L07_ZYXEL_3086
			config BRCMSDK502L07_ZYXEL_BOARD_FMG3586_B10A
				bool "FMG3586_B10A"
				depends on BRCMSDK502L07_ZYXEL_3586
			config BRCMSDK502L07_ZYXEL_BOARD_EMG3415_B10A
				bool "EMG3415_B10A"
				depends on BRCMSDK502L07_ZYXEL_EMG3415
			config BRCMSDK502L07_ZYXEL_BOARD_VMG3927_B50B
				bool "VMG3927_B50B"
				depends on BRCMSDK502L07_ZYXEL_VMG3927_B50B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG4927_B50A
				bool "VMG4927_B50A"
				depends on BRCMSDK502L07_ZYXEL_VMG4927_B50A
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B10B
				bool "VMG8823_B10B"
				depends on BRCMSDK502L07_ZYXEL_VMG8823_B10B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B30B
				bool "VMG8823_B30B"
				depends on BRCMSDK502L07_ZYXEL_VMG8823_B30B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B50B
				bool "VMG8823_B50B"
				depends on BRCMSDK502L07_ZYXEL_VMG8823_B50B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8823_B60B
				bool "VMG8823_B60B"
				depends on BRCMSDK502L07_ZYXEL_VMG8823_B60B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG8825_B50B
				bool "VMG8825_B50B"
				depends on BRCMSDK502L07_ZYXEL_VMG8825_B50B
			config BRCMSDK502L07_ZYXEL_BOARD_XMG3512_B10A
				bool "XMG3512_B10A"
				depends on BRCMSDK502L07_ZYXEL_XMG3512
			config BRCMSDK502L07_ZYXEL_BOARD_XMG3563_B10A
				bool "XMG3563_B10A"
				depends on BRCMSDK502L07_ZYXEL_XMG3563_B10A
			config BRCMSDK502L07_ZYXEL_BOARD_XMG8825_B50A
				bool "XMG8825_B50A"
				depends on BRCMSDK502L07_ZYXEL_XMG8825_B50A
		endchoice

		config BRCMSDK502L07_ZYXEL_SUPPORT_ETHWAN_AS_LAN
			bool "Support ETHWAN can config as LAN for BCM63138"
			default n
	endif #if (BRCMSDK502L07_BRCM_63138)

	if (BRCMSDK502L07_BRCM_63381)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_1312
				bool "VMG1312"
			config BRCMSDK502L07_ZYXEL_5313B
				bool "VMG5313B"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "VMG1312"  if BRCMSDK502L07_ZYXEL_1312
			default "VMG5313B"  if BRCMSDK502L07_ZYXEL_5313B
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_VMG1312_B10D if BRCMSDK502L07_ZYXEL_1312
			default BRCMSDK502L07_ZYXEL_BOARD_VMG5313B_B10B if BRCMSDK502L07_ZYXEL_5313B
			config BRCMSDK502L07_ZYXEL_BOARD_VMG1312_B10D
				bool "VMG1312_B10D"
				depends on BRCMSDK502L07_ZYXEL_1312
			config BRCMSDK502L07_ZYXEL_BOARD_VMG5313B_B10B
				bool "VMG5313_B10B"
				depends on BRCMSDK502L07_ZYXEL_5313B
		endchoice
	endif #if (BRCMSDK502L07_BRCM_63381)

	if (BRCMSDK502L07_BRCM_6838)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_96838GWOV
				bool "96838GWOV"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "96838GWOV"  if BRCMSDK502L07_ZYXEL_96838GWOV
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_BCM96838GWOV if BRCMSDK502L07_ZYXEL_96838GWOV
			config BRCMSDK502L07_ZYXEL_BOARD_BCM96838GWOV
				bool "96838GWOV"
				depends on BRCMSDK502L07_ZYXEL_96838GWOV
		endchoice
	endif #if (BRCMSDK502L07_BRCM_6838)

	if (BRCMSDK502L07_BRCM_63158)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_963158GW
				bool "963158GW"
			config BRCMSDK502L07_ZYXEL_DX5511_B0
				bool "DX5511-B0"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "963158GW"  if BRCMSDK502L07_ZYXEL_963158GW
			default "DX5511_B0"  if BRCMSDK502L07_ZYXEL_DX5511_B0
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_963158GW if BRCMSDK502L07_ZYXEL_963158GW
			default BRCMSDK502L07_ZYXEL_BOARD_DX5511_B0 if BRCMSDK502L07_ZYXEL_DX5511_B0
			config BRCMSDK502L07_ZYXEL_BOARD_963158GW
				bool "963158GW"
				depends on BRCMSDK502L07_ZYXEL_963158GW
			config BRCMSDK502L07_ZYXEL_BOARD_DX5511_B0
				bool "DX5511_B0"
				depends on BRCMSDK502L07_ZYXEL_DX5511_B0
		endchoice
	endif #if (BRCMSDK502L07_BRCM_63158)
	
	if (BRCMSDK502L07_BRCM_63178)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_963178GWV
				bool "963178GWV"
			config BRCMSDK502L07_ZYXEL_DX3100_B0
				bool "DX3100-B0"
			config BRCMSDK502L07_ZYXEL_DX3200_B0
				bool "DX3200-B0"
			config BRCMSDK502L07_ZYXEL_DX5301_B0
				bool "DX5301-B0"
			config BRCMSDK502L07_ZYXEL_DX5301_B1
				bool "DX5301-B1"
                        config BRCMSDK502L07_ZYXEL_DX5301_B2
                                bool "DX5301-B2"
			config BRCMSDK502L07_ZYXEL_DX3201_B0
				bool "DX3201-B0"
			config BRCMSDK502L07_ZYXEL_WX3401_B0
				bool "WX3401-B0"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "963178GWV"  if BRCMSDK502L07_ZYXEL_963178GWV
			default "DX3100_B0"  if BRCMSDK502L07_ZYXEL_DX3100_B0
			default "DX3200_B0"  if BRCMSDK502L07_ZYXEL_DX3200_B0
			default "DX5301_B0"  if BRCMSDK502L07_ZYXEL_DX5301_B0
			default "DX5301_B1"  if BRCMSDK502L07_ZYXEL_DX5301_B1
			default "DX5301_B2"  if BRCMSDK502L07_ZYXEL_DX5301_B2
			default "DX3201_B0"  if BRCMSDK502L07_ZYXEL_DX3201_B0
			default "WX3401_B0"  if BRCMSDK502L07_ZYXEL_WX3401_B0
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_963178GWV if BRCMSDK502L07_ZYXEL_963178GWV
			default BRCMSDK502L07_ZYXEL_BOARD_DX3100_B0 if BRCMSDK502L07_ZYXEL_DX3100_B0
			default BRCMSDK502L07_ZYXEL_BOARD_DX3200_B0 if BRCMSDK502L07_ZYXEL_DX3200_B0
			default BRCMSDK502L07_ZYXEL_BOARD_DX5301_B0 if BRCMSDK502L07_ZYXEL_DX5301_B0
			default BRCMSDK502L07_ZYXEL_BOARD_DX5301_B1 if BRCMSDK502L07_ZYXEL_DX5301_B1
                        default BRCMSDK502L07_ZYXEL_BOARD_DX5301_B2 if BRCMSDK502L07_ZYXEL_DX5301_B2
			default BRCMSDK502L07_ZYXEL_BOARD_DX3201_B0 if BRCMSDK502L07_ZYXEL_DX3201_B0
			default BRCMSDK502L07_ZYXEL_BOARD_WX3401_B0 if BRCMSDK502L07_ZYXEL_WX3401_B0
			config BRCMSDK502L07_ZYXEL_BOARD_963178GWV
				bool "963178GWV"
				depends on BRCMSDK502L07_ZYXEL_963178GWV
			config BRCMSDK502L07_ZYXEL_BOARD_DX3100_B0
				bool "DX3100_B0"
				depends on BRCMSDK502L07_ZYXEL_DX3100_B0
			config BRCMSDK502L07_ZYXEL_BOARD_DX3200_B0
				bool "DX3200_B0"
				depends on BRCMSDK502L07_ZYXEL_DX3200_B0
			config BRCMSDK502L07_ZYXEL_BOARD_DX5301_B0
				bool "DX5301_B0"
				depends on BRCMSDK502L07_ZYXEL_DX5301_B0
			config BRCMSDK502L07_ZYXEL_BOARD_DX5301_B1
				bool "DX5301_B1"
				depends on BRCMSDK502L07_ZYXEL_DX5301_B1
                        config BRCMSDK502L07_ZYXEL_BOARD_DX5301_B2
                                bool "DX5301_B2"
                                depends on BRCMSDK502L07_ZYXEL_DX5301_B2
			config BRCMSDK502L07_ZYXEL_BOARD_WX3401_B0
				bool "WX3401_B0"
				depends on BRCMSDK502L07_ZYXEL_WX3401_B0
			config BRCMSDK502L07_ZYXEL_BOARD_DX3201_B0
				bool "DX3201_B0"
				depends on BRCMSDK502L07_ZYXEL_DX3201_B0
		endchoice
	endif #if (BRCMSDK502L07_BRCM_63178)

	if (BRCMSDK502L07_BRCM_4908)
		choice
			prompt "ZyXEL product"
			config BRCMSDK502L07_ZYXEL_962118GWV
				bool "962118GWV"
			config BRCMSDK502L07_ZYXEL_EX3510_B0
				bool "EX3510-B0"
		endchoice

		config BRCMSDK502L07_ZYXEL_PRODUCT
			string
			default "962118GWV"  if BRCMSDK502L07_ZYXEL_962118GWV
			default "EX3510_B0"  if BRCMSDK502L07_ZYXEL_EX3510_B0
		config BRCM502L07_RM_QUOTES_ZYXEL_PRODUCT
			def_bool y

		choice
			prompt "Select board:"
			default BRCMSDK502L07_ZYXEL_BOARD_962118GWV if BRCMSDK502L07_ZYXEL_962118GWV
			default BRCMSDK502L07_ZYXEL_BOARD_EX3510_B0 if BRCMSDK502L07_ZYXEL_EX3510_B0
			config BRCMSDK502L07_ZYXEL_BOARD_962118GWV
				bool "962118GWV"
				depends on BRCMSDK502L07_ZYXEL_962118GWV
			config BRCMSDK502L07_ZYXEL_BOARD_EX3510_B0
				bool "EX3510-B0"
				depends on BRCMSDK502L07_ZYXEL_EX3510_B0
		endchoice
	endif #if (BRCMSDK502L07_BRCM_4908)

   config BRCMSDK502L07_ZYPRJ_HARDWARE_VERSION
	int "ZyXEL hardware version for the board(SR1 is 1, SR2 is 2,...)"
	default 2 if BRCMSDK502L07_ZYXEL_5313
	default 1 if BRCMSDK502L07_ZYXEL_5948 || BRCMSDK502L07_ZYXEL_8948
	default 0


	config BRCMSDK502L07_ZYXEL_CFE_SOFTWARE_FLASH_LED
		bool "Support led flash by software in cfe!"
		depends on !BRCMSDK502L07_BRCM_63268 && !BRCMSDK502L07_BRCM_6838
		default y

	config BRCMSDK_ZYXEL_EXTERNAL_DECT
		def_bool y
		depends on BUILD_ZYXEL_PHONE_DECT_SUPPORT
		select BRCMSDK502L07_ZYXEL_EXTERNAL_DECT if BRCMSDK502L07_ZYXEL_5948 || BRCMSDK502L07_ZYXEL_8948

	config BRCMSDK502L07_ZYXEL_EXTERNAL_DECT
		bool "Support DSPG DECT module"
		default y
		depends on BRCMSDK502L07_ZYXEL_5948 || BRCMSDK502L07_ZYXEL_8948

	config BRCMSDK502L07_ZYXEL_TEST_EXTERNAL_DECT
		bool "Testing external DECT module"
		default y
		depends on BRCMSDK502L07_ZYXEL_EXTERNAL_DECT

	config BRCMSDK502L07_ZYXEL_DEDICATED_START_ENDPOINT_NUM
		int "The start num of endpoint to initial with off-hook state"
		default 2
		depends on BRCMSDK502L07_ZYXEL_TEST_EXTERNAL_DECT

	config BRCMSDK502L07_ZYXEL_DEDICATED_END_ENDPOINT_NUM
		int "The end num of endpoint to initial with off-hook state"
		default 3
		depends on BRCMSDK502L07_ZYXEL_TEST_EXTERNAL_DECT

	config BRCMSDK502L07_ZYXEL_PHONE_FXS_PHONE_PORT_SWAP
		bool "Support FXS Phone Port Swap (exchange the only two Local FXS Phone Ports)"
		default y
		depends on (BRCMSDK502L07_BRCM_VOICE_SUPPORT)

	config BRCMSDK_ZYXEL_VOICE_KSOCKET_RTP
		def_bool y
		depends on BUILD_ZYXEL_VOICE_KSOCKET_RTP
		select BRCMSDK502L07_ZYXEL_VOICE_KSOCKET_RTP

	config BRCMSDK502L07_ZYXEL_VOICE_KSOCKET_RTP
		bool "Support Kernel Socket for the VoIP Media Stream (including RTP, RTCP & UDPTL/T38)"
		default y
		depends on BUILD_ZYXEL_VOICE_KSOCKET_RTP
		help
			This config MUST be SYNCed to the application one: make menuconfig --> ZyXEL Voice (ZyIMS VoIP) -->
			Support Kernel Socket function for the VoIP Media Stream (including RTP, RTCP & UDPTL/T38)
			(CONFIG_BUILD_ZYXEL_VOICE_KSOCKET_RTP).

	choice
		prompt "LED pattern of 2.4G/5G WiFi"
		default BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN_SUNRISE
		depends on BRCMSDK502L07_ZYXEL_8948
		config BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN_STANDARD
			bool "Standard"
		config BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN_SUNRISE
			bool "Sunrise"
	endchoice

	config BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN
		int
		default 0 if BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN_STANDARD
		default 1 if BRCMSDK502L07_ZYXEL_WIFI_LED_PATTERN_SUNRISE
		default 0
		depends on BRCMSDK502L07_ZYXEL_8948

	config BRCMSDK502L07_ZYXEL_PARTITION
		bool "ZyXEL customized flash partition"

	config BRCMSDK502L07_ZYXEL_AT_COMMANDS
		bool "ZyXEL add AT commands into CFE"

	config BRCMSDK502L07_ZYXEL_DEBUG_CFERAM
		bool "ZyXEL build CFERAM debug image for ATRB"

	config BRCMSDK502L07_ZYXEL_DEBUG_ADDR
		hex "CFERAM address"
		default 0xd00000 if BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148
		default 0xe00000 if BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_63158
		default 0x80401000
		depends on BRCMSDK502L07_ZYXEL_DEBUG_CFERAM

	config BRCMSDK502L07_ZYXEL_RSA_FORMAT
		bool "ZyXEL customized firmware image(RAS.bin) and upgrade mechainsm."

	config BRCMSDK502L07_BUILD_ZYBTNCHK
		bool "ZyXEL testing tool for Button"

	config BRCMSDK502L07_BUILD_ZYLEDCTL
		bool "ZyXEL testing tool for LED"

	config BRCMSDK502L07_ZYXEL_SFP_HIGHER_PRIORITY
		bool 'ZyXEL SFP has higher priority than ether wan in Crossbar model'
		default n

	config BRCMSDK502L07_ZYXEL_KERNEL_RESET_BTN
		bool "Enable reset button function in kernel space"

	config BRCMSDK502L07_NAND_READBACK_CHECK
		bool "Enable NAND Readback Check function"

	config BRCMSDK502L07_ZYXEL_SW_INTERNET_LED_BLINK
		bool "Enable SW Internet LED blinking control"

	config BRCMSDK502L07_ZYXEL_FW_UPGRADE_POWER_LED_BLINK
		bool "Support FW Upgrade Power LED blinking control"
		default n

	config BRCMSDK502L07_ZYXEL_SUPPORT_3G_LED_GREEN_AND_RED
		bool "Support Internet LED Blink Orange When 3G Is Up"
		default n

	choice
		prompt "ZyXEL X-TUR_Customization"
		config BRCMSDK502L07_NO_XTUR_CUSTOMIZATION
			bool "No Customization"
		config BRCMSDK502L07_SUNRISE_XTUR_CUSTOMIZATION
			bool "Sunrise"
	endchoice

	choice
		prompt "Broadcom Wifi version selection"
		default BCM502L07_WIFI_VER_17_10_99_7

		config BCM502L07_WIFI_VER_17_10_99_7
			bool "17.10.99.7"
			help
				"for 43684 EA driver"
		config BCM502L07_WIFI_VER_17_10_99_1301
			bool "17.10.99.1301"
			help
				"for 43684 GA driver"
		config BCM502L07_WIFI_VER_17_10_99_17
			bool "17.10.99.17"
			help
				"for 43684 GA driver"
		config BCM502L07_WIFI_VER_17_10_99_27
			bool "17.10.99.27"
			help
				"for 43684 GA driver for SDK 502L07P1"
		config BCM502L07_WIFI_VER_17_10_117_0
			bool "17.10.117.0"
			help
				"for 6710 EA driver"
		config BCM502L07_WIFI_VER_17_10_121_11
			bool "17.10.121.11"
			help
				"for 6710 GA driver for SDK 502L07P1"
		config BCM502L07_WIFI_VER_7_14_170_43
			bool "7.14.170.43"
			help
				"for 43602 GA driver for SDK 502L07P1"

	endchoice

	config BCM502L07_WIFI_DRIVER
		string
		default 17.10.99.7 if BCM502L07_WIFI_VER_17_10_99_7
		default 17.10.99.1301 if BCM502L07_WIFI_VER_17_10_99_1301
		default 17.10.99.17 if BCM502L07_WIFI_VER_17_10_99_17
		default 17.10.99.27 if BCM502L07_WIFI_VER_17_10_99_27
		default 17.10.117.0 if BCM502L07_WIFI_VER_17_10_117_0
		default 17.10.121.11 if BCM502L07_WIFI_VER_17_10_121_11
		default 7.14.170.43 if BCM502L07_WIFI_VER_7_14_170_43

	config BRCMSDK502L07_WIFI_DRIVER_SERIES
		string
		default 17_10_99 if (BCM502L07_WIFI_VER_17_10_99_7 || BCM502L07_WIFI_VER_17_10_99_1301 || BCM502L07_WIFI_VER_17_10_99_17 || BCM502L07_WIFI_VER_17_10_99_27)
		default 17_10_121 if BCM502L07_WIFI_VER_17_10_121_11
		default 7_14_170 if BCM502L07_WIFI_VER_7_14_170_43

	config BRCMSDK502L07_WIFI_DRIVER_SUBVERSION
		string
		default 7 if BCM502L07_WIFI_VER_17_10_99_7
		default 1301 if BCM502L07_WIFI_VER_17_10_99_1301
		default 17 if BCM502L07_WIFI_VER_17_10_99_17
		default 27 if BCM502L07_WIFI_VER_17_10_99_27
		default 11 if BCM502L07_WIFI_VER_17_10_121_11
		default 43 if BCM502L07_WIFI_VER_7_14_170_43

	config BRCMSDK502L07_ZYXEL_FORCE_WIFI_SROM
		bool 'ZyXEL Force WiFi srom from software(/etc/wlan/bcmXXXX_map.bin)'

	config BRCMSDK502L07_ZYXEL_WL_PROBRESP_FLTER
		bool 'ZyXEL wireless probe response filter'	

	config BRCMSDK502L07_ZYXEL_EASYMESH
		bool 'support zyxel customization on BCM SDK'

	config BRCMSDK502L07_ZYXEL_BUILD_DHD_IMAGE_SRC
		bool 'Zyxel build dhd image src'

	config BRCMSDK502L07_ZYXEL_UPS_FEATURE
		bool
		prompt "Support UPS feature"
		default n
		help
			Display the status of UPS battery by LED.

	config BRCMSDK502L07_ZYXEL_OPAL_EXTENDER
		bool 'support zyxel opal extender'
		default n

	config BRCMSDK502L07_ZYXEL_OPAL_EXTENDER_USA
		bool 'support zyxel opal extender for USA product'
		default n

endif #if (BRCMSDK502L07_ZYXEL)
endmenu #menu "ZyXEL Features"

############################################################################
menu "Bootloader and Secure Boot Options"
comment "Bootloader and Secure Boot Options"

config BRCMSDK502L07_BUILD_DYNAMIC_CFE
	bool "Build Bootloader With Linux"

config BRCMSDK502L07_BUILD_CFE_BOARD_DTB
	bool "Support Board Device Tree Blob"
	depends on BRCMSDK502L07_BUILD_DYNAMIC_CFE

config BRCMSDK502L07_BUILD_HND_EAP_UBOOT
	bool "Use u-boot as secondary bootloader (EAP only)"

config BRCMSDK502L07_BUILD_CFE_DDR4
	depends on (BRCMSDK502L07_BRCM_63158 && BRCMSDK502L07_BRCM_CHIP_REV != "A0" && BRCMSDK502L07_BRCM_CHIP_REV != "a0" ) || (BRCMSDK502L07_BRCM_47622)
	bool "Support DDR4 in CFEROM"

config BRCMSDK502L07_BUILD_CFE_APPEND_BOOT_CMDLINE
	string "Extra Boot Command Line Argument"

### Gen 1 Bootrom
if (BRCMSDK502L07_BRCM_63268)
menu "Gen1 Secure Boot"
comment "Gen1 Secure Boot"

config BRCMSDK502L07_BUILD_SECURE_BOOT
	bool "Enable Secure Boot"

config BRCM502L07_SECURE_BOOT_NOR_BOOT_SIZE
	int "Nor Flash: boot sector size"
	depends on BRCMSDK502L07_BUILD_SECURE_BOOT
	default 128 if BRCMSDK502L07_BRCM_63268

endmenu # "Gen1 Secure Boot"
endif #if (BRCMSDK502L07_BRCM_63268)

### Gen 2 Bootrom
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)

config BRCMSDK502L07_SECURE_BOOT_ARCH
	string
	default "GEN2"
config BRCM502L07_RM_QUOTES_SECURE_BOOT_ARCH
	def_bool y

menu "Gen2 Secure Boot Feature Selection"
comment "Gen2 Secure Boot Feature Selection"

config BRCMSDK502L07_BUILD_SECURE_BOOT
	bool "Enable Secure Boot"

if (BRCMSDK502L07_BUILD_SECURE_BOOT)
config BRCMSDK502L07_SECURE_BOOT_NUM_BOOT_BLKS
	int "Number of boot blocks ( max: 8 )"
	default 8

config BRCMSDK502L07_SECURE_BOOT_NUM_BTLDR_IMAGES
	int "Number of secure boot btldr images ( max: 3 less than the number of boot blocks )"
	default 2

config BRCM502L07_SECURE_BOOT_NOR_BOOT_SIZE
	int "Nor Flash: boot sector size"
	default 192 if (BRCMSDK502L07_BRCM_63381)
	default 384 if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)

config BRCMSDK502L07_SECURE_BOOT_KEY_DIR
	string "Gen2 Key Dir"
	default "targets/keys/demo/GEN2"

config BRCMSDK502L07_SECURE_BOOT_TURNKEY
	bool "Secure Boot Turnkey OTP/SOTP Tools"

if (BRCMSDK502L07_SECURE_BOOT_TURNKEY)
config BRCMSDK502L07_BTRM_NAND_BOOT_PARTITION_SIZE
	int "Boot partition size (Max 1024 Kb)"
	default 1024

choice
	prompt "Request Secure Mode"
		default BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_MFG
	config BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_MFG
		bool "MFG"
	config BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_OP
		bool "OP"
endchoice

config BRCMSDK502L07_SECURE_BOOT_TK_OID
	hex "OID (hex)" if BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_OP
	default 5678

config BRCMSDK502L07_SECURE_BOOT_TK_MID
	hex "MID (hex)" if !(BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_OP)
	default 1234

config BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ
	string
	default "OP" if (BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_OP)
	default "MFG" if !(BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ_OP)

config BRCMSDK502L07_SECURE_BOOT_TK_ABORT_TIMEOUT
	int "Abort Timeout"
	default 5

config BRCMSDK502L07_SECURE_BOOT_TK_KS_OFFS
	int
	default 1016

endif #if (BRCMSDK502L07_SECURE_BOOT_TURNKEY)
endif #if (BRCMSDK502L07_BUILD_SECURE_BOOT)

endmenu # "Gen2 Secure Boot Feature Selection"
endif #if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)

### Gen 3 Bootrom
if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846|| BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_SECURE_BOOT_ARCH
	string
	default "GEN3"
config BRCM502L07_RM_QUOTES_SECURE_BOOT_ARCH
	def_bool y

menu "Gen3 Bootrom Bootloader"
comment "Gen3 Bootrom Bootloader"

config BRCMSDK502L07_BTRM_BOOT_ONLY
	bool "Bootrom boot"

if (BRCMSDK502L07_BTRM_BOOT_ONLY)
config BRCMSDK502L07_BTRM_NAND_BOOT_PARTITION_SIZE
	int "Boot partition size (Max 1024 Kb)"
	default 1024
	
config BRCMSDK502L07_BTRM_NUM_IMAGES_IN_PARTITION
	int "Number bootloader images within boot partition (Max 10)"
	default 6	
	
config BRCMSDK502L07_BTRM_IMAGE_SIZE_ALLOCATION
	int "Size allocated for each bootloader (Kb)"
	default 120 if (BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846)
	default 96 if BRCMSDK502L07_BRCM_6878
	default 128
	
config BRCMSDK502L07_BTRM_NUM_NVRAM_DATA_IN_PARTITION
	int "Number nvram copies within boot partition (Max 10)"
	default 6

config BRCMSDK502L07_BUILD_IMAGE_OFFSET_ZERO
	bool "Set image offset to 0"
	depends on ((BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_47622) && BRCMSDK502L07_BRCM_FLASH_BUILD_NOR)

config BRCMSDK502L07_BUILD_CFE_IMAGE_OFFSET_ZERO
	def_bool y
	depends on BRCMSDK502L07_BUILD_IMAGE_OFFSET_ZERO

config BRCMSDK502L07_BUILD_SECURE_BOOT
	bool "Enable Secure Boot Builds"
endif

if (BRCMSDK502L07_BUILD_SECURE_BOOT)
config BRCMSDK502L07_SECURE_BOOT_ENCRYPT_BTLDRS
	bool "AES Encrypt bootloader images within boot partition"

config BRCMSDK502L07_SECURE_BOOT_PROCESS_FLD_OEM_COT
	bool "Field mode ROT/ROE includes using field OEM COT"
	depends on (BRCMSDK502L07_BUILD_SECURE_BOOT && BRCMSDK502L07_SECURE_BOOT_ENCRYPT_BTLDRS)

if (BRCMSDK502L07_BRCM_63158)
choice
	prompt "Enable Hardware Acceleration"
	default BRCMSDK502L07_SECURE_BOOT_HWA_NONE

	config BRCMSDK502L07_SECURE_BOOT_HWA_OPT1
		bool "SKP"
	config BRCMSDK502L07_SECURE_BOOT_HWA_OPT2
		bool "SKP/SPU"
	config BRCMSDK502L07_SECURE_BOOT_HWA_NONE
		bool "None"
endchoice #prompt "Enable Hardware Acceleration"

config BRCMSDK502L07_SECURE_BOOT_HWA
	def_bool y if (BRCMSDK502L07_SECURE_BOOT_HWA_OPT1 || BRCMSDK502L07_SECURE_BOOT_HWA_OPT2)

config BRCMSDK502L07_SECURE_BOOT_HWA_OPT
	string
	default "hwa_skp"       if BRCMSDK502L07_SECURE_BOOT_HWA_OPT1
	default "hwa_skp_spu"   if BRCMSDK502L07_SECURE_BOOT_HWA_OPT2
config BRCM502L07_RM_QUOTES_SECURE_BOOT_HWA_OPT
	def_bool y
	depends on BRCMSDK502L07_SECURE_BOOT_HWA_OPT1 || BRCMSDK502L07_SECURE_BOOT_HWA_OPT2
endif

config BRCMSDK502L07_SECURE_BOOT_KEY_DIR
	string "Gen3 Key Dir"
	default "targets/keys/demo/GEN3"

config BRCMSDK502L07_SECURE_BOOT_TURNKEY
	bool "Secure Boot Turnkey OTP/SOTP Tools"

if (BRCMSDK502L07_SECURE_BOOT_TURNKEY)
choice
	prompt "Request Secure Mode"
		default BRCMSDK502L07_SECURE_BOOT_TK_REQ_MFG
	config BRCMSDK502L07_SECURE_BOOT_TK_REQ_MFG
		bool "MFG"
	config BRCMSDK502L07_SECURE_BOOT_TK_REQ_FLD
		bool "OP"
endchoice

config BRCMSDK502L07_SECURE_BOOT_TK_MODE_REQ
	string
	default "FLD" if (BRCMSDK502L07_SECURE_BOOT_TK_REQ_FLD)
	default "MFG" if !(BRCMSDK502L07_SECURE_BOOT_TK_REQ_FLD)

config BRCMSDK502L07_SECURE_BOOT_TK_MID
	hex "MID (hex)"
	default 1234

config BRCMSDK502L07_SECURE_BOOT_TK_ABORT_TIMEOUT
	int "Abort Timeout"
	default 5

config BRCMSDK502L07_SECURE_BOOT_TK_KS_OFFS
	int
	default 1016

endif #if (BRCMSDK502L07_SECURE_BOOT_TURNKEY)
endif #if (BRCMSDK502L07_BUILD_SECURE_BOOT)

endmenu # "Gen3 Bootrom Bootloader"
endif #if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6836 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846)

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622)
comment "Secure OS selection"

	config BRCMSDK502L07_BUILD_SECURE_OS
		bool "Enable Secure OS (OPTEE)"

	if (BRCMSDK502L07_BUILD_SECURE_OS)
		config BRCMSDK502L07_BCM_OPTEE
			def_bool y
	# 502L07 not exist >>>
	#choice
	#	prompt "Secure OS"
	#		default BRCMSDK502L07_OPTEE
	#	config BRCMSDK502L07_OPTEE
	#		bool "OPTEE"
	#endchoice
	# 502L07 not exist <<<

		config BRCMSDK502L07_BUILD_ARMTF
			def_bool y if (BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856)

		config BRCMSDK502L07_BCM_KERNEL_CODE_PROTECTION
			bool "Enable Kernel Code Protection"
	endif # if (BRCMSDK502L07_BUILD_SECURE_OS)

endif #if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622)

if BRCMSDK502L07_BRCM_6878
	config BRCMSDK502L07_BUILD_AVS_FIRMWARE
		bool "Enable AVS FIRMWARE"

	if BRCMSDK502L07_BUILD_AVS_FIRMWARE
		menu "AVS FIRMWARE"
			config BRCMSDK502L07_AVS_IMAGE_MAX_SIZE
				int "Image Max Size (Kb)"
				default 6
			config BRCMSDK502L07_AVS_IMAGE_PATH
				string "Image Path"
				default "targets/avs/avs6878.bin"
		endmenu # menu "AVS FIRMWARE"
	endif
endif #if BRCMSDK502L07_BRCM_6878

endmenu # "Bootloader and Secure Boot Options"
############################################################################
menu "Security Features"
comment "Security Toolkit Options"
if (BRCMSDK502L07_BRCM_DRIVER_OTP= "m" || BRCMSDK502L07_BRCM_DRIVER_OTP= "y")
	config BRCMSDK502L07_BUILD_OTPCTL
		bool "Build OTP configuration utility (OTPCTL)"
endif   

if (BRCMSDK502L07_SECURE_BOOT_ARCH="GEN3")
	config BRCMSDK502L07_BCM_FAILSAFE_BOOT
		bool "Failsafe image boot support"
	if (BRCMSDK502L07_BCM_FAILSAFE_BOOT)
		config BRCMSDK502L07_BUILD_CFE_FAILSAFE_BOOT
			def_bool y

#		if !(BRCMSDK502L07_BRCM_DRIVER_WDT)
#			config BRCMSDK502L07_BRCM_DRIVER_WDT
#				def_bool y
#		endif

		config BRCMSDK502L07_BUILD_CFE_FAILSAFE_BOOT_WD_TMO
			int "Abort Watchdog Timeout (s) max 30"
			default 30
	endif
endif

if (BRCMSDK502L07_BUILD_DYNAMIC_CFE)

	config BRCMSDK502L07_BUILD_CFE_DBG_JTAG_OPEN
		bool "DEBUG (Dangerous) Open JTAG on Key Abort"

	config BRCMSDK502L07_BUILD_CFE_SUPPORT_HASH_BLOCK
		bool "Support signed hash block in secure modes"

	if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846|| BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)
	config BRCMSDK502L07_BUILD_ROOTFS_SQUASHFS_HASH
		bool "Support Kernel SQUASH ROOTFS hash validation"
	endif #if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)

	config BRCMSDK502L07_BUILD_CFE_NONSEC_MFG_CONSOLE
		bool "Drop security privileges to non-secure mode when entering CFE console in MFG mode"

	config BRCMSDK502L07_BUILD_CFE_NONSEC_FLD_CONSOLE
		bool "Drop security privileges to non-secure mode when entering CFE console in FLD mode"

	if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6856)
	config BRCMSDK502L07_BRCM_BUILD_SOTP_DRIVER
		bool "Build SOTP Driver"
	endif #if (BRCM_4908 || BRCM_63138 || BRCM_63148 || BRCM_63158 || BRCM_6858 || BRCM_6846 || BRCM_6856)

	config BRCMSDK502L07_BRCM_DRIVER_SOTP
	string
	default "m"	if BRCMSDK502L07_BRCM_BUILD_SOTP_DRIVER

	config BRCMSDK502L07_BUILD_CFE_ALLOW_NONSEC_SOTP_ACCESS
		depends on (BRCMSDK502L07_BRCM_BUILD_SOTP_DRIVER)
		bool "Allow non-secure access to SOTP register block (also builds sotpctl utility if enabled)"
		
	config BRCMSDK502L07_BUILD_SOTPCTL
		string
		default "y"		if BRCMSDK502L07_BUILD_CFE_ALLOW_NONSEC_SOTP_ACCESS
		
	config BRCMSDK502L07_BRCM_KERNEL_CRYPTO
		def_bool y if (BRCMSDK502L07_BUILD_ROOTFS_SQUASHFS_HASH)

	config BRCMSDK502L07_BRCM_KERNEL_CRYPTO_SHA2
		def_bool y if (BRCMSDK502L07_BUILD_ROOTFS_SQUASHFS_HASH)

# Marked by pureSDK502L07 >>>
#	choice
#		prompt "CFE Interactive"
#			default BRCMSDK502L07_BRCM_CFE_INTERACTIVE_KEYABORT
#		config BRCMSDK502L07_BRCM_CFE_INTERACTIVE_NONE
#			bool "None"
#		config BRCMSDK502L07_BRCM_CFE_INTERACTIVE_FAIL
#			bool "Fail"
#		config BRCMSDK502L07_BRCM_CFE_INTERACTIVE_KEYABORT
#			bool "KeyAbort"
#	endchoice
#
#	choice
#		prompt "CFE Command Set"
#			default BRCMSDK502L07_BRCM_CFE_COMMAND_FULL
#		config BRCMSDK502L07_BRCM_CFE_COMMAND_NONE
#			bool "None"
#		config BRCMSDK502L07_BRCM_CFE_COMMAND_NVRAM_ONLY
#			bool "NVRAM-Only"
#		config BRCMSDK502L07_BRCM_CFE_COMMAND_MINIMAL
#			bool "Minimal"
#		config BRCMSDK502L07_BRCM_CFE_COMMAND_FULL
#			bool "Full"
#	endchoice
# Marked by pureSDK502L07 <<<

endif #if (BRCMSDK502L07_BUILD_DYNAMIC_CFE)

if !(BRCMSDK502L07_BUILD_DYNAMIC_CFE)
comment "CFE features unavailable unless bootloader is built with Linux"
endif
  #comment ''
  comment 'Seccomp - Secure Computing with Filters'
  #comment ''
  config BRCMSDK502L07_BUILD_LIBSECCOMP
	bool "Build seccomp library"
endmenu # "Security Features"
############################################################################
menu "Other Features"
#
# Power Management Stuff.
#
comment "Other Features"

config BRCMSDK502L07_BRCM_DRIVER_PWRMNGT
	tristate "PWRMNGT Driver"

choice
	prompt "PWRCTL"
	default BRCM502L07_PWRCTL_DONT_BUILD
	depends on (BRCMSDK502L07_BRCM_DRIVER_PWRMNGT=m)

	config BRCM502L07_PWRCTL_DONT_BUILD
		bool "don't build"

	config BRCM502L07_PWRCTL_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_PWRCTL_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_PWRCTL_DYNAMIC_BUILD || BRCM502L07_PWRCTL_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_PWRCTL
		string
		default "dynamic" if BRCM502L07_PWRCTL_DYNAMIC_BUILD
		default "static"  if BRCM502L07_PWRCTL_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_PWRCTL
		def_bool y
endif

config BRCMSDK502L07_BRCM_AVS_PWRSAVE
	bool "Adaptive Voltage Scaling"
	depends on (BRCMSDK502L07_BRCM_63268 && BRCMSDK502L07_BRCM_DRIVER_PWRMNGT=m)

if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	config BRCMSDK502L07_BRCM_DRIVER_PMD
		tristate "PMD Driver"

	config BRCMSDK502L07_RDPA_IFILTER_SUPPORT
		def_bool y

	config BRCMSDK502L07_BUILD_PMD
		def_bool y
endif

if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848)
	config BRCMSDK502L07_BRCM_DRIVER_SIM_CARD
		tristate "Sim Card"

	config BRCMSDK502L07_BRCM_MINIGW
		bool "MINIMAL DDR GW"
		default n
endif

if !(BRCMSDK502L07_BRCM_60333)
config BRCMSDK502L07_BRCM_ETH_PWRSAVE
	bool "Ethernet Auto Power Down and Sleep"

if !(BRCMSDK502L07_BRCM_6362 || BRCMSDK502L07_BRCM_6328)
	config BRCMSDK502L07_BRCM_ENERGY_EFFICIENT_ETHERNET
		bool "Energy Efficient Ethernet"
endif
endif

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63178)
	config BRCMSDK502L07_BRCM_ETH_DEEP_GREEN_MODE
		bool "Ethernet Deep Green Mode"
endif

if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848)
	config BRCMSDK502L07_BRCM_HOSTMIPS_PWRSAVE
		bool "Automated MIPS clk divider"
endif

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_6858)
	config BRCMSDK502L07_BRCM_CPU_FREQ_PWRSAVE
		bool "Automated CPUFREQ clk divider"

	config BRCMSDK502L07_BRCM_CPU_FREQ_TARGET_LOAD
		int "Interactive governor target load"
		default 20
		depends on BRCMSDK502L07_BRCM_CPU_FREQ_PWRSAVE
endif

if (BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
	config BRCMSDK502L07_BRCM_UBUS4_DCM
		bool "UBUS4 dynamic clock module"
endif

if (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6878)
	config BRCMSDK502L07_BRCM_XRDP_AUTOGATE
		bool "XRDP Dynamic Clock Gating"
endif

config BRCMSDK502L07_BRCM_CPUIDLE_CLK_DIVIDER
	bool "Automated CPUIDLE clk divider" if ((BRCMSDK502L07_BRCM_4908 && !BRCMSDK502L07_BRCM_CPU_FREQ_PWRSAVE) || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6836)

if (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)
	config BRCMSDK502L07_BRCM_CPUOFF
		bool "Automated idle CPU power-down"
endif

if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
	config BRCMSDK502L07_BRCM_DDR_SELF_REFRESH_PWRSAVE
		bool "DDR Self-Refresh Power Saving"
endif

if (BRCMSDK502L07_BRCM_63268 || BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_63381 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)
	config BRCMSDK502L07_BUILD_WL_IDLE_PWRSAVE
		bool "PCIe L1 Active State Power Management"
endif

if (BRCMSDK502L07_BRCM_63268)
	choice
		prompt "Shutdown Internal 1.2V Regulator"
		default BRCMSDK502L07_BRCM_1V2REG_AUTO_SHUTDOWN

		config BRCMSDK502L07_BRCM_1V2REG_AUTO_SHUTDOWN
			bool "Auto"

		config BRCMSDK502L07_BRCM_1V2REG_ALWAYS_SHUTDOWN
			bool "Always"

		config BRCMSDK502L07_BRCM_1V2REG_NEVER_SHUTDOWN
			bool "Never"
	endchoice
endif

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148)
	config BRCMSDK502L07_BUILD_BMU
	bool "Battery Management Unit"

	choice
		prompt "Battery Configuration"
		default BRCMSDK502L07_BUILD_BMU_0CELL

		config BRCMSDK502L07_BUILD_BMU_2CELL
			bool "2-Cell"

		config BRCMSDK502L07_BUILD_BMU_3CELL
			bool "3-Cell"

		config BRCMSDK502L07_BUILD_BMU_0CELL
			bool "none"
	endchoice
endif

if (!BRCMSDK502L07_BRCM_60333)
	choice
		prompt "NAND Driver selection"
		default BRCMSDK502L07_BUILD_STANDARD_NAND_DRIVER

		config BRCMSDK502L07_BUILD_STANDARD_NAND_DRIVER
			bool "Standard"

		config BRCMSDK502L07_BUILD_LEGACY_NAND_DRIVER
			bool "Legacy"
	endchoice
endif

config  BRCMSDK502L07_BUILD_TMS
	bool "Trunk Management (802.3ah, 802.1ag, Y.1731)"

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)
	if !BRCMSDK502L07_BUILD_SECURE_OS
		config BRCMSDK502L07_BRCM_DRIVER_TRNG
			bool "True RNG Driver"

		config BRCMSDK502L07_BUILD_CFE_ALLOW_NONSEC_RNG_ACCESS
			def_bool y
			depends on BRCMSDK502L07_BRCM_DRIVER_TRNG

		choice
			prompt "RNGD"
			default BRCM502L07_RNGD_DONT_BUILD

			config BRCM502L07_RNGD_DONT_BUILD
				bool "don't build"

			config BRCM502L07_RNGD_DYNAMIC_BUILD
				bool "dynamic"

			config BRCM502L07_RNGD_STATIC_BUILD
				bool "static"
		endchoice

		if (BRCM502L07_RNGD_DYNAMIC_BUILD || BRCM502L07_RNGD_STATIC_BUILD)
			config BRCMSDK502L07_BUILD_RNGD
				string
				default "dynamic" if BRCM502L07_RNGD_DYNAMIC_BUILD
				default "static"  if BRCM502L07_RNGD_STATIC_BUILD

			config BRCM502L07_RM_QUOTES_BUILD_RNGD
				def_bool y
		endif
	endif #!BRCMSDK502L07_BUILD_SECURE_OS
		
endif #if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178 || BRCMSDK502L07_BRCM_6878)

config BRCMSDK502L07_BUILD_AUTODETECTION
	bool "Enable Connection Auto Detection"

config BRCMSDK502L07_BUILD_BCM_CLEDS_PROC_DRIVER
	bool "CLED proc drivers"
	

config BRCMSDK502L07_BUILD_LEDCTL
	bool "LED Control Utility"

config BRCMSDK502L07_BCM_WLCLED
	bool "Enable WLAN LED"

config BRCMSDK502L07_BUILD_WDTCTL
	def_bool y
	depends on BRCMSDK502L07_BRCM_DRIVER_WDT

config BRCMSDK502L07_BUILD_BACKUP_PSI
	bool "Suport Backup Config File"
choice
	prompt "BACKUP mode"
	default BRCMSDK502L07_BUILD_BACKUP_PSI_MIRROR_MODE
	depends on BRCMSDK502L07_BUILD_BACKUP_PSI

config BRCMSDK502L07_BUILD_BACKUP_PSI_MIRROR_MODE
	bool "MIRROR"

config BRCMSDK502L07_BUILD_BACKUP_PSI_DEVICE_DEFAULT
	bool "DEVICE_DEFAULT"
endchoice

config BRCMSDK502L07_BUILD_PSICTL
	bool "Build PSICTL utility"

config BRCMSDK502L07_COMPRESSED_CONFIG_FILE
	bool "Enable Compressed Config File"

config BRCMSDK502L07_CMS_CONFIG_COMPAT
	bool "Enable backward compatibility of CMS Config Files"

config BRCMSDK502L07_CMS_CONFIG_IGNORE_UNRECOGNIZED
	bool "Ignore unrecognized objects, params, and attrs in CMS Config Files"

choice
	prompt "Internet Printing Protocol support"
	default BRCM502L07_IPPD_DONT_BUILD

config BRCM502L07_IPPD_DONT_BUILD
	bool "don't build"

config BRCM502L07_IPPD_DYNAMIC_BUILD
	bool "dynamic"

config BRCM502L07_IPPD_STATIC_BUILD
	bool "static"
endchoice
if BRCM502L07_IPPD_DYNAMIC_BUILD || BRCM502L07_IPPD_STATIC_BUILD
	config BRCMSDK502L07_BUILD_IPPD
		string
		default "dynamic" if BRCM502L07_IPPD_DYNAMIC_BUILD
		default "static"  if BRCM502L07_IPPD_STATIC_BUILD
	config BRCM502L07_RM_QUOTES_BUILD_IPPD
		def_bool y
endif

config BRCMSDK502L07_BUILD_DLNA
	bool "DLNA support"

config BRCMSDK502L07_BUILD_SPDSVC
	bool "Speed Service support"

config BRCMSDK502L07_BUILD_SPDTEST
	bool "Speed Test support"

config BRCMSDK502L07_BUILD_IEEE1905
	bool "IEEE1905 support"

if BRCMSDK502L07_BUILD_IEEE1905
	config BRCMSDK502L07_BUILD_IEEE1905_GOLDENNODE
		bool "IEEE1905 Golden Node"

	config BRCMSDK502L07_BUILD_IEEE1905_REGISTRAR
		bool "IEEE1905 Registrar"

	config BRCMSDK502L07_BRCM_1905_TOPOLOGY_WEB_PAGE
		bool "Topology Web Page"

	config BRCMSDK502L07_BRCM_1905_FM
		bool "Flow Manager Support (experimental)"

	if BRCMSDK502L07_BRCM_1905_FM 
		config BRCMSDK502L07_BRCM_1905_AUTO_WDS
			bool "Auto-connect WDS"
			depends on BRCMSDK502L07_BRCM_DRIVER_WIRELESS
	endif
endif

choice
	prompt "SSL and Certificate"
	default BRCM502L07_CERT_DYNAMIC_BUILD  if BRCMSDK502L07_BRCM_VOICE_SUPPORT
	default BRCM502L07_CERT_DONT_BUILD

	config BRCM502L07_CERT_DONT_BUILD
		bool "don't build"

	config BRCM502L07_CERT_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_CERT_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_CERT_DYNAMIC_BUILD || BRCM502L07_CERT_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_CERT
		string
		default "dynamic" if BRCM502L07_CERT_DYNAMIC_BUILD
		default "static"  if BRCM502L07_CERT_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_CERT
		def_bool y
endif

comment "Default Configuration"

config BRCMSDK502L07_BRCM_DEFAULTCFG
	string "File Name"

# Time Synchronization
# for 6858 - 1588 is not supported yet [TBD]
if (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846)
	config BRCMSDK502L07_BRCM_DRIVER_TIME_SYNC
		tristate "Time Synchronization"

	if (BRCMSDK502L07_BRCM_DRIVER_TIME_SYNC)
		config BRCMSDK502L07_BRCM_GPON_TODD
			bool "Support GPON ToDD"

		config BRCMSDK502L07_BRCM_PTP_1588
			bool "Support PTP 1588"

		config BRCMSDK502L07_BRCM_TIME_SYNC_8KHZ
			bool "Support Sync Clock: 8KHz"

		config BRCMSDK502L07_BRCM_TIME_SYNC_PON_UNSTABLE
			bool "Support Sync Signal: PON Unstable"
	endif
endif #(BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6836 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_6846)


config BRCMSDK502L07_BUILD_LIBJSONC
	default y if BRCMSDK502L07_BUILD_MODSW_EE && BRCMSDK502L07_MODSW_EE_BUILD_DBUS
	bool "LIBJSONC library "

config BRCMSDK502L07_BUILD_LIBXML2
	bool "LIBXML2 library"

config BRCMSDK502L07_BUILD_LIBSQLITE
	bool "LIBSQLite library"

config BRCMSDK502L07_BUILD_LIBCAP
	bool "LIBCAP library"

config BRCMSDK502L07_BRCM_USER_SSP
	bool "Userspace Stack Smashing Protection support"

choice
	prompt "Select the Stack Smashing Protection Coverage Level"
	default BRCMSDK502L07_BRCM_SSP_LEVEL_MIN
	depends on BRCMSDK502L07_BRCM_USER_SSP

	config BRCMSDK502L07_BRCM_SSP_LEVEL_MIN
		bool "Minmum"

	config BRCMSDK502L07_BRCM_SSP_LEVEL_TYP
		bool "Typical"

	config BRCMSDK502L07_BRCM_SSP_LEVEL_MAX
		bool "Maximum"
endchoice

config BRCMSDK502L07_BUILD_LXC
	bool "Support Linux Containers (LXC)"
	default n
	default y if BRCMSDK502L07_BUILD_MODSW_EE

config BRCMSDK502L07_BUILD_DBUS
	default y if BRCMSDK502L07_MODSW_EE_BUILD_DBUS
	bool "Support Dbus"

config BRCMSDK502L07_BUILD_DBUSREMOTE_TCP
	bool "Enable DBUSRemote Over TCP Support"
	depends on BRCMSDK502L07_BUILD_DBUS

config BRCMSDK502L07_BUILD_QRCODE
	bool "QR Code Support"


config BRCMSDK502L07_BUILD_BLUETOOTH_LIB
	bool "Bluetooth Library"

config BRCMSDK502L07_BRCM_DRIVER_BLUETOOTH_USB
	tristate "Bluetooth USB Driver"
	depends on BRCMSDK502L07_BUILD_BLUETOOTH_LIB

config BRCMSDK502L07_BRCM_BLUETOOTH_FIRMWARE_FILE
	string "Bluetooth Firmware"
	depends on BRCMSDK502L07_BUILD_BLUETOOTH_LIB

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_4908)
	config BRCMSDK502L07_BRCM_DRIVER_M2M_DMA
		bool "M2M DMA Support"
endif

config BRCMSDK502L07_BUILD_BCM_RECVFILE
	bool "Recvfile support"

config BRCMSDK502L07_BCM_SPEEDYGET
	bool "wget speed test"

# 502L07 modified >>>
#config BRCMSDK502L07_BUILD_OPENVSWITCH
#	bool "Openvswitch"
# 502L07 modified <<<

menu "Openvswitch"
config BRCMSDK502L07_BUILD_OPENVSWITCH
	bool "OVS Support"

if (BRCMSDK502L07_PROFILE_ARCH != "mips")
	config BRCMSDK502L07_BRCM_OVS_SUPPORT
		bool "OVS Broadcom Support"

	config BRCMSDK502L07_BRCM_OVS_SUPPORT_MCAST
		bool "OVS Broadcom Multicast Support"
		depends on BRCMSDK502L07_BRCM_OVS_SUPPORT
endif
endmenu # menu "Openvswitch"

config BRCMSDK502L07_BUILD_BRCM_AIRIQ
	bool "AIRIQ support"

config BRCMSDK502L07_BUILD_BRCM_HOSTAPD
	bool "HOSTAPD support"

if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)
config BRCMSDK502L07_BUILD_BCM_ASOC_AUDIO
	bool "ASOC_Sound Card Support"

if (BRCMSDK502L07_BUILD_BCM_ASOC_AUDIO)
choice
	prompt "Select the codec"
	default BRCM502L07_SND_SOC_PCM5100

	config BRCM502L07_SND_SOC_MAPLELEAF
		bool "MapleLeaf(TIchips)"

	config BRCM502L07_SND_SOC_CS4345
		bool "CS4345"

	config BRCM502L07_SND_SOC_PCM5100
		bool "PCM5100"
endchoice
endif #if (BRCMSDK502L07_BUILD_BCM_ASOC_AUDIO)
endif #if (BRCMSDK502L07_BRCM_63138 || BRCMSDK502L07_BRCM_63158 || BRCMSDK502L07_BRCM_63148 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_47622 || BRCMSDK502L07_BRCM_63178)

config BRCMSDK502L07_BRCM_REASON_TO_SKB_MARK
	depends on  (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	bool "Trap Reason to Skb Mark Support"
	
config BRCMSDK502L07_BRCM_DW_CXC_DATA_MODE
	depends on  (BRCMSDK502L07_BRCM_6838 || BRCMSDK502L07_BRCM_6848 || BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	bool "Dragonware CXC Data Mode Support"

config BRCMSDK502L07_BUILD_MACSECKEYMGMT
	bool "MACsec Key Managment"
	depends on  BRCMSDK502L07_BRCM_6858

endmenu #menu "Other Features"

##########################################################################
menu "Management Protocols and User Interface Selection"

config BRCMSDK502L07_BRCM_DRIVER_SERIAL
	bool "SERIAL Port Driver"

config BRCMSDK502L07_ARM_PL011_SERIAL
	bool "ARM PL011 SERIAL Port Driver"

config BRCMSDK502L07_BUILD_CLI_MENU
	bool "Support Menu Driven Interface"

config BRCMSDK502L07_BUILD_CLI_CMD
	bool "Support Command Line Interface"

config BRCMSDK502L07_BUILD_FAPCTL
	depends on BRCMSDK502L07_BRCM_DRIVER_FAP
	bool "FAP CLI Support"

config BRCMSDK502L07_BUILD_RDPACTL
	depends on BRCMSDK502L07_BRCM_DRIVER_RDPA
	bool "RDPA CLI Support"

config BRCMSDK502L07_BUILD_ARLCTL
	depends on BRCMSDK502L07_BRCM_DRIVER_ARL
	bool "ARL CLI Support"

# Hmm, we only ask about telnetd and sshd if CLI is built,
# but we ask about consoled even when there is no CLI.
# Should telnetd and sshd also be independent of the CLI?
if (BRCMSDK502L07_BUILD_CLI_MENU || BRCMSDK502L07_BUILD_CLI_CMD)
	config BRCMSDK502L07_BUILD_TELNETD
		bool "Telnet"

	config BRCMSDK502L07_BUILD_SSHD
		bool "SSHD (Secure Shell Server)"

	if BRCMSDK502L07_BUILD_SSHD
		config BRCMSDK502L07_BUILD_SSHD_MIPS_GENKEY
			bool "SSHD Key Generation on target"
	endif
	
	config BRCMSDK502L07_BRCM_MAX_BSD_PTP
		int "Maximum Sessions for Telnet and SSH(BSD Pseudo Terminals)"
endif

choice
	prompt "httpd"
	default BRCMSDK502L07_BUILD_HTTPD_NONE

	config BRCMSDK502L07_BUILD_HTTPD
		bool "basic"

	config BRCMSDK502L07_BUILD_HTTPD_SSL
		bool "SSL"

	config BRCMSDK502L07_BUILD_HTTPD_BASIC_SSL
		bool "basic+SSL"

	config BRCMSDK502L07_BUILD_HTTPD_none
		bool "none"
endchoice

if (BRCMSDK502L07_BUILD_HTTPD || BRCMSDK502L07_BUILD_HTTPD_SSL)
	config BRCMSDK502L07_WEB_POPUP
		bool "Display HTML page in pop-up window"
endif

config BRCMSDK502L07_BUILD_QUICKSETUP
	bool "Quick Setup" if ((BRCMSDK502L07_BUILD_HTTPD || BRCMSDK502L07_BUILD_HTTPD_SSL || BRCMSDK502L07_BUILD_HTTPD_BASIC_SSL) && BRCMSDK502L07_BUILD_ATMWAN)
	def_bool n if !((BRCMSDK502L07_BUILD_HTTPD || BRCMSDK502L07_BUILD_HTTPD_SSL || BRCMSDK502L07_BUILD_HTTPD_BASIC_SSL) && BRCMSDK502L07_BUILD_ATMWAN)

config BRCMSDK502L07_BRCM_CPU_MEMORY_WEB_PAGE
	bool "CPU & Memory Web Page"

###################################################################################
menu "WebUI language selection"

choice
	prompt "Supported language"
	default BRCMSDK502L07_BRCM_LANG_EN

	config BRCMSDK502L07_BRCM_LANG_EN
		bool "English"

	config BRCMSDK502L07_BRCM_LANG_CN
		bool "Simplified_Chinese"

	config BRCMSDK502L07_BRCM_LANG_TW
		bool "Traditional_Chinese"

	config BRCMSDK502L07_BRCM_LANG_KR
		bool "Korean"
endchoice

config BRCMSDK502L07_BRCM_WEBUI_LANG
	string
	default "en_US"  if BRCMSDK502L07_BRCM_LANG_EN
	default "zh_CN"  if BRCMSDK502L07_BRCM_LANG_CN
	default "zh_TW"  if BRCMSDK502L07_BRCM_LANG_TW
	default "ko_KR"  if BRCMSDK502L07_BRCM_LANG_KR
config BRCM502L07_RM_QUOTES_BRCM_WEBUI_LANG
	def_bool y

endmenu #menu "WebUI language selection"

choice
	prompt "TR69 Management protocol"
	default BRCMSDK502L07_MGMT_none

	config BRCMSDK502L07_MGMT_TR69C
		bool "TR69"
if (BRCMSDK502L07_BUILD_MODSW_EE)
	config BRCMSDK502L07_MGMT_TR69C_BEEP
		bool "TR69_BEEP"
		depends on (BRCMSDK502L07_BUILD_MODSW_EE)
endif

	config BRCMSDK502L07_MGMT_none
		bool "none"
endchoice

if (BRCMSDK502L07_MGMT_TR69C || BRCMSDK502L07_MGMT_TR69C_BEEP)
choice
	prompt "TR69 SSL support"
	default BRCMSDK502L07_MGMT_TR69C_SSL

	config BRCMSDK502L07_MGMT_TR69C_NO_SSL
		bool "TR69_NO_SSL"

	config BRCMSDK502L07_MGMT_TR69C_BCM_SSL
		bool "TR69_BCM_SSL"

	config BRCMSDK502L07_MGMT_TR69C_SSL
		bool "TR69_SSL"
endchoice
endif

config BRCMSDK502L07_BRCM_MULTIPLE_TR69C_SUPPORT
	int "Multiple TR69C support --->"
	depends on (BRCMSDK502L07_MGMT_TR69C) && (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	default "1"  if (BRCMSDK502L07_MGMT_TR69C) && (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
config BRCM502L07_RM_QUOTES_BRCM_MULTIPLE_TR69C_SUPPORT
	depends on (BRCMSDK502L07_MGMT_TR69C) && (BRCMSDK502L07_BRCM_6858 || BRCMSDK502L07_BRCM_6856 || BRCMSDK502L07_BRCM_6846 || BRCMSDK502L07_BRCM_6878)
	def_bool y
	
config BRCMSDK502L07_BUILD_TR69C
	string
	default "dynamic"  if BRCMSDK502L07_MGMT_TR69C
	default ""
config BRCM502L07_RM_QUOTES_BUILD_TR69C
	def_bool y

config BRCMSDK502L07_BUILD_TR69C_BEEP
	string
	default "dynamic"  if (BRCMSDK502L07_MGMT_TR69C_BEEP||BRCMSDK502L07_MGMT_TR69C_BEEP_PREINSTALL||BRCMSDK502L07_MGMT_TR69C_STANDALONE)
config BRCM502L07_RM_QUOTES_BUILD_TR69C_BEEP
	depends on (BRCMSDK502L07_MGMT_TR69C_BEEP||BRCMSDK502L07_MGMT_TR69C_BEEP_PREINSTALL||BRCMSDK502L07_MGMT_TR69C_STANDALONE)
	def_bool y

config BRCMSDK502L07_BUILD_TR69C_SSL
	string
	default "dynamic"  if BRCMSDK502L07_MGMT_TR69C_SSL
	default ""
config BRCM502L07_RM_QUOTES_BUILD_TR69C_SSL
	def_bool y

config BRCMSDK502L07_BUILD_TR69C_BCM_SSL
	string
	default "dynamic"  if BRCMSDK502L07_MGMT_TR69C_BCM_SSL
	default ""
config BRCM502L07_RM_QUOTES_BUILD_TR69C_BCM_SSL
	def_bool y

config BRCMSDK502L07_BRCM_CERT_FILE
	string "Certificate file" if BRCMSDK502L07_MGMT_TR69C_BCM_SSL
	default ""
config BRCM502L07_RM_QUOTES_BRCM_CERT_FILE
	def_bool y

if (BRCMSDK502L07_MGMT_TR69C || BRCMSDK502L07_MGMT_TR69C_BEEP)
	config BRCMSDK502L07_BUILD_TR69_XBRCM
		bool "BRCM_PROPRIETARY"

	config BRCMSDK502L07_BUILD_TR69_UPLOAD
		bool "RPC_UPLOAD"

	config BRCMSDK502L07_BUILD_TR69_QUEUED_TRANSFERS
		bool "RPC_QUEUED_TRANSFERS"

	config BRCMSDK502L07_BUILD_TR69_TR143
		bool "TR143"

	config BRCMSDK502L07_BUILD_TR69_PERIODIC_STATISTICS
		bool "TR157 Periodic Statistics Support"

	config BRCMSDK502L07_BUILD_TR69_VENDOR_RPC
		bool "VENDOR SPECIFIC RPC"

	config BRCMSDK502L07_BUILD_TR69_AUTONOMOUS_TRANSFER_COMPLETE_RPC
		bool "RPC_AUTONOMOUS_TRANSFER_COMPLETE"

	config BRCMSDK502L07_BUILD_STUN
		bool "TR111_PART2 (STUN)"

	config BRCMSDK502L07_BUILD_PROFILE_SUPPORTED_DATA_MODEL
		bool "PROFILE_SUPPORTED_DATA_MODEL"
endif

config BRCMSDK502L07_BUILD_XMPP
	bool "Extensible Messaging and Presence Protocol (XMPP)"

config BRCMSDK502L07_BUILD_ALLJOYN
	bool "AllJoyn"

config BRCMSDK502L07_BUILD_UPNP_IGD_HTTP_CONNREQ
	bool "UPnP IGD and HTTP Connection Requests"

choice
	prompt "SNMP Management protocol"
	default BRCM502L07_SNMP_DONT_BUILD

	config BRCM502L07_SNMP_DONT_BUILD
		bool "don't build"

	config BRCM502L07_SNMP_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_SNMP_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_SNMP_DYNAMIC_BUILD || BRCM502L07_SNMP_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_SNMP
		string
		default "dynamic" if BRCM502L07_SNMP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_SNMP_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_SNMP
		def_bool y
endif

if (BRCM502L07_SNMP_DYNAMIC_BUILD || BRCM502L07_SNMP_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_SNMP_SET
		bool "set operation"
	#   config BRCMSDK502L07_BUILD_SNMP_ADSL_MIB
	#		bool "ADSL mib"
	#   config BRCMSDK502L07_BUILD_SNMP_AT_MIB
	#		bool "AT mib"
	#   config BRCMSDK502L07_BUILD_SNMP_ATM_MIB
	#		bool "ATM mib"
	config BRCMSDK502L07_BUILD_SNMP_BRIDGE_MIB
		bool "qBridge and pBridge mib"
	#   config BRCMSDK502L07_BUILD_SNMP_ICMP_MIB
	#		bool "ICMP mib"
	#   config BRCMSDK502L07_BUILD_SNMP_IP_MIB
	#		bool "IP mib"
	config BRCMSDK502L07_BUILD_SNMP_SNMP_MIB
		bool "SNMP mib"
	config BRCMSDK502L07_BUILD_SNMP_SYSOR_MIB
		bool "SYSOR mib"
	#    config BRCMSDK502L07_BUILD_SNMP_TCP_MIB
	#	bool "TCP mib"
	#    config BRCMSDK502L07_BUILD_SNMP_UDP_MIB
	#	bool "UDP mib"
	config BRCMSDK502L07_BUILD_SNMP_UDP
		bool "UDP transport"
	#    config BRCMSDK502L07_BUILD_SNMP_EOC
	#	bool "EOC transport"
	#    config BRCMSDK502L07_BUILD_SNMP_AAL5
	#	bool "AAL5 transport"
	#    config BRCMSDK502L07_BUILD_SNMP_AUTO
	#	bool "AUTO transport"
	config BRCMSDK502L07_BUILD_SNMP_CHINA_TELECOM_CPE_MIB
		bool "CT CPE mib"
	#    config BRCMSDK502L07_BUILD_SNMP_BRCM_CPE_MIB
	#	bool "BRCM CPE mib"
	config BRCMSDK502L07_BUILD_SNMP_DEBUG
		bool "SNMP debug"
	if BRCMSDK502L07_BUILD_SNMP_DEBUG
		config BRCMSDK502L07_BUILD_SNMP_TRANSPORT_DEBUG
			bool "Transport debug"

		config BRCMSDK502L07_BUILD_SNMP_LAYER_DEBUG
			bool "SNMP layer debug"
	endif
endif #if (BRCM502L07_SNMP_DYNAMIC_BUILD || BRCM502L07_SNMP_STATIC_BUILD)

config BRCMSDK502L07_BUILD_TR64
	bool "TR64 Application"

if (BRCMSDK502L07_BUILD_TR64)
	config BRCMSDK502L07_BUILD_TR64_LAYER3
		bool "Layer3Forwarding"

	config BRCMSDK502L07_BUILD_TR64_DEVICEINFO
		bool "DeviceInfo"

	config BRCMSDK502L07_BUILD_TR64_DEVICECONFIG
		bool "DeviceConfig"

	config BRCMSDK502L07_BUILD_TR64_MANAGEMENTSERVER
		bool "ManagementServer"

	config BRCMSDK502L07_BUILD_TR64_TIME
		bool "Time"

	config BRCMSDK502L07_BUILD_TR64_QUEUEMANAGEMENT
		bool "QueueManagement"

	config BRCMSDK502L07_BUILD_TR64_LAYER2BRIDGE
		bool "Layer2Bridging"

	config BRCMSDK502L07_BUILD_TR64_LANHOSTCONFIGMGMT
		bool "LANHostConfigMgmt"

	config BRCMSDK502L07_BUILD_TR64_LANETHINTERFACECONFIG
		bool "LANEthInterfaceConfig"

	config BRCMSDK502L07_BUILD_TR64_WLANCONFIG
		bool "WLANConfig"

	config BRCMSDK502L07_BUILD_TR64_LANUSBINTERFACECONFIG
		bool "USBInterfaceConfig"

	config BRCMSDK502L07_BUILD_TR64_LANHOSTS
		bool "LANHosts"

	config BRCMSDK502L07_BUILD_TR64_WANCOMMONINTERFACE
		bool "WANCommonInterface"

	config BRCMSDK502L07_BUILD_TR64_WANDSLINTERFACE
		bool "WANDslInterface"

	#   config BRCMSDK502L07_BUILD_TR64_WANETHERNETCONFIG
	#		bool "WANEthernetConfig"

	config BRCMSDK502L07_BUILD_TR64_WANDSLCONNECTIONMGMT
		bool "WANDslConnectionMgmt"

	config BRCMSDK502L07_BUILD_TR64_WANDSLDIAGNOSTICS
		bool "WANDslDiagnostics"

	config BRCMSDK502L07_BUILD_TR64_WANDSLLINKCONFIG
		bool "WANDslLinkConfig"

	config BRCMSDK502L07_BUILD_TR64_WANCABLELINKCONFIG
		bool "WANCableLinkConfig"

	#   config BRCMSDK502L07_BUILD_TR64_WANETHERNETLINKCONFIG
	#		bool "WANEthernetLinkConfig"

	config BRCMSDK502L07_BUILD_TR64_WANIPCONNECTION
		bool "WANIPConnection"

	config BRCMSDK502L07_BUILD_TR64_WANPPPCONNECTION
		bool "WANPPPConnection"

	config BRCMSDK502L07_BUILD_TR64_IPPINGDIAG
		bool "IPPingDiagnostics"

	config BRCMSDK502L07_BUILD_TR64_WANATMF5LOOPBACKDIAG
		bool "WANATMF5LoopbackDiagnostics"
endif #if (BRCMSDK502L07_BUILD_TR64)

choice
	prompt "UPNP"
	default BRCM502L07_UPNP_DONT_BUILD

	config BRCM502L07_UPNP_DONT_BUILD
		bool "don't build"

	config BRCM502L07_UPNP_DYNAMIC_BUILD
		bool "dynamic"

	config BRCM502L07_UPNP_STATIC_BUILD
		bool "static"
endchoice

if (BRCM502L07_UPNP_DYNAMIC_BUILD || BRCM502L07_UPNP_STATIC_BUILD)
	config BRCMSDK502L07_BUILD_UPNP
		string
		default "dynamic" if BRCM502L07_UPNP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_UPNP_STATIC_BUILD

	config BRCM502L07_RM_QUOTES_BUILD_UPNP
		def_bool y
endif

config BRCMSDK502L07_BUILD_HASHED_PASSWORDS
	bool "Hashed Passwords"

endmenu #menu 'Management Protocols and User Interface Selection'

###################################################################################
menu "Debug selection"

config BRCMSDK502L07_BUZZZ
	bool "BUZZZ: Broadcom Analyzer Tool"

if (BRCMSDK502L07_BUZZZ)
	config BRCM502L07_BUZZZ_FUNC
		bool "Enable function call tracing"

	config BRCM502L07_BUZZZ_PMON
		bool "Enable performance monitoring"

	config BRCM502L07_BUZZZ_KEVT
		bool "Enable Kernel Event call tracing"

	config BRCMSDK502L07_BUILD_BUZZZ
		string
		default "y"
	config BRCM502L07_RM_QUOTES_BUILD_BUZZZ
		def_bool y

	config BRCMSDK502L07_BRCM_KTOOLS
		string
		default "y"
	config BRCM502L07_RM_QUOTES_BRCM_KTOOLS
		def_bool y
endif #if (BRCMSDK502L07_BUZZZ)

config BRCMSDK502L07_BRCM_KERNEL_FTRACE
	bool "Enable kernel tracing"

config BRCMSDK502L07_BRCM_KERNEL_PREEMPTIRQSOFF_TRACE
	bool "Enable preemption and irqs off tracing (additional overhead)"
	depends on BRCMSDK502L07_BRCM_KERNEL_FTRACE

config BRCMSDK502L07_BRCM_KERNEL_FUNCTION_TRACE
	bool "Enable function tracing (additional overhead)"
	depends on BRCMSDK502L07_BRCM_KERNEL_FTRACE

config BRCMSDK502L07_BRCM_DRIVER_LOG
	tristate "Broadcom Kernel Logging Driver"

config BRCMSDK502L07_BRCM_KERNEL_KALLSYMS
	bool "Enable KALLSYMS in kernel"

config BRCMSDK502L07_BRCM_KERNEL_DEBUG
	bool "Support GDB in kernel"

choice
	prompt "Network Transmit/Receive Utility (TTCP)"
	default BRCM502L07_EPITTCP_DONT_BUILD

config BRCM502L07_EPITTCP_DONT_BUILD
	bool "don't build"

config BRCM502L07_EPITTCP_DYNAMIC_BUILD
	bool "dynamic"

config BRCM502L07_EPITTCP_STATIC_BUILD
	bool "static"
endchoice
if BRCM502L07_EPITTCP_DYNAMIC_BUILD || BRCM502L07_EPITTCP_STATIC_BUILD
	config BRCMSDK502L07_BUILD_EPITTCP
		string
		default "dynamic" if BRCM502L07_EPITTCP_DYNAMIC_BUILD
		default "static"  if BRCM502L07_EPITTCP_STATIC_BUILD
	config BRCM502L07_RM_QUOTES_BUILD_EPITTCP
		def_bool y
endif

config BRCMSDK502L07_ENABLE_PRINTK_AND_BUG
	bool "Enable Kernel CONFIG_PRINTK and CONFIG_BUG"

config BRCMSDK502L07_BCM_DEFAULT_CONSOLE_LOGLEVEL
	int "Default console printk level"
	depends on BRCMSDK502L07_ENABLE_PRINTK_AND_BUG

config BRCMSDK502L07_BCM_PRINTK_TIME
	bool "Include timestamp in printk"
	depends on BRCMSDK502L07_ENABLE_PRINTK_AND_BUG

config BRCMSDK502L07_BCM_COLORIZE_PRINTS
	bool "Enable Colorized Prints"

config BRCMSDK502L07_BCM_ASSERTS
	bool "Enable Asserts"

config BRCMSDK502L07_BCM_FATAL_ASSERTS
	bool "Enable Fatal Asserts"
	depends on BRCMSDK502L07_BCM_ASSERTS

config BRCMSDK502L07_BCM_KERNEL_HACKING
	bool "Enable Linux Kernel Hacking/Debug Features"

if (BRCMSDK502L07_BCM_KERNEL_HACKING)
	config BRCMSDK502L07_BCM_DEBUG_SPINLOCK
		bool "Enable Spinlock Debug"

	config BRCMSDK502L07_BCM_DEBUG_MUTEXES
		bool "Enable Mutex Debug"
		
	config BRCMSDK502L07_BCM_RCU_CPU_STALL_DETECTOR
		bool "Enable RCU Stall Detector"
		
	config BRCMSDK502L07_BCM_DEBUG_PREEMPT
		bool "Enable Preemption Debugging"
				
	config BRCMSDK502L07_BCM_DEBUG_SLAB
		bool "Enable SLAB Debugging"
				
	config BRCMSDK502L07_BCM_DETECT_HUNG_TASK
		bool "Enable Detect Hung Task"
		
	config BRCMSDK502L07_BCM_SCHEDSTATS
		bool "Enable Scheduler Stats"
		
	config BRCMSDK502L07_BCM_SCHED_DEBUG
		bool "Enable Scheduler DebugEnable Scheduler Debug"
		
	config BRCMSDK502L07_BCM_DEBUG_ATOMIC_SLEEP
		bool "Enable Sleep While Atomic Checks"
endif #if (BRCMSDK502L07_BCM_KERNEL_HACKING)

config BRCMSDK502L07_BCM_BCM_SCHEDAUDIT
	bool "Enable BCM Scheduler Audit"

config BRCMSDK502L07_BCM_MAGIC_SYSRQ
	bool "Enable Magic SysRq"

config BRCMSDK502L07_BRCM_KERNEL_VMTOOLS
	bool "Enable Memory Diagnostic Tools in Kernel"

config BRCMSDK502L07_BRCM_KERNEL_CSTAT
	bool "Enable Cache Stats Tool in Kernel"

config BRCMSDK502L07_BRCM_IKOS
	bool "Build for IKOS simulation (experimental)"

config BRCMSDK502L07_BRCM_DRIVER_BCMPROF
	tristate "Broadcom PROF Driver"

config BRCMSDK502L07_BUILD_DEBUG_TOOLS
	bool "Enable Debug Tools"

config BRCMSDK502L07_BUILD_GDBSERVER
	bool "Build GDBserver for application debugging"

config BRCMSDK502L07_ENABLE_APP_COREDUMPS
	bool "Enable application core dumps"

config BRCMSDK502L07_CMS_SECURITY_LOG
	bool "Enable CMS Security Logging"

config BRCMSDK502L07_CMS_LOG_DEBUG
	bool "Enable CMS Debug Logging"

config BRCMSDK502L07_WLCSM_DEBUG_TRACE
	depends on !BRCMSDK502L07_BUILD_BRCM_UNFWLCFG
	bool "Enable WLCSM Debug"

choice
	prompt "Debug Log level"
	default BRCMSDK502L07_CMS_LOG_LEVEL_2
	depends on BRCMSDK502L07_CMS_LOG_DEBUG
	config BRCMSDK502L07_CMS_LOG_LEVEL_1
		bool "1"
	config BRCMSDK502L07_CMS_LOG_LEVEL_2
		bool "2"
endchoice

config BRCMSDK502L07_CMS_STARTUP_DEBUG
	bool "Enable CMS Startup Debug"
	depends on BRCMSDK502L07_CMS_LOG_DEBUG

config BRCMSDK502L07_CMS_ACTION_LOG
	bool "Enable CMS Action Logging"

config BRCMSDK502L07_CMS_MEM_BOUNDARY_CHECK
	bool "Enable CMS Memory Boundary Checking"

config BRCMSDK502L07_CMS_MEM_POISON_ALLOC_FREE
	bool "Enable CMS Memory Poison Allocs and Frees"

config BRCMSDK502L07_CMS_MEM_LEAK_TRACING
	bool "Enable CMS Memory Leak Tracing"

config BRCMSDK502L07_CMS_FATAL_ASSERT
	bool "Enable CMS Asserts"

config BRCMSDK502L07_CMS_BYPASS_LOGIN
	bool "Bypass CMS Login"

# it should be tristate in the future
config BRCMSDK502L07_BUILD_SOAP
	bool "Soap server"

if (BRCMSDK502L07_BUILD_SOAP)
	choice
		prompt "Soap server version"
		default BRCMSDK502L07_BRCM_APP_SOAP_V3
		depends on BRCMSDK502L07_BUILD_SOAP

		config BRCMSDK502L07_BRCM_APP_SOAP_V3
			bool "3.0"

		config BRCMSDK502L07_BRCM_APP_SOAP_V2
			bool "2.0"

		config BRCMSDK502L07_BRCM_APP_SOAP_V1
			bool "1.5"
	endchoice
	
	config BRCMSDK502L07_BUILD_SOAP_VER
		int
		default 1  if BRCMSDK502L07_BRCM_APP_SOAP_V1
		default 2  if BRCMSDK502L07_BRCM_APP_SOAP_V2
		default 3  if BRCMSDK502L07_BRCM_APP_SOAP_V3
endif #if (BRCMSDK502L07_BUILD_SOAP)


config BRCMSDK502L07_BUILD_DIAGAPP
	bool "Chip Diagnostic Utility"



config BRCMSDK502L07_BENCHMARKS_SMP
	bool "Enable OpenSSL speed and multi-process Dhrystone (for SMP profiling)"

config BRCMSDK502L07_BUILD_SYSSTAT
	bool "Build SYSSTAT family of utilities (mpstat, iostat, pidstat, sar, etc)"

config BRCMSDK502L07_BUILD_STRESS
	bool "Build Stress app and scripts"

config BRCMSDK502L07_BUILD_POSIX_STRESS
	bool "Build POSIX stress utility"

config BRCMSDK502L07_BUILD_LMBENCH
	bool "Build lmbench suite (note publication restrictions)"

config BRCMSDK502L07_BUILD_TCPDUMP
	bool "Build tcpdump (implies libpcap)"

config BRCMSDK502L07_BUILD_SENDPACKETS
	bool "Build sendpackets raw packet generator (implies libpcap)"

config BRCMSDK502L07_BUILD_IPERFV2
	bool "Build Iperf Version 2 traffic generator"

config BRCMSDK502L07_BUILD_IPERFV3
	bool "Build Iperf Version 3 traffic generator"



# 502L07 not exist >>>
#config BRCMSDK502L07_BUILD_IPERF
#	bool "Build Iperf traffic generator"
# 502L07 not exist <<<

config BRCMSDK502L07_BUILD_PCIUTILS
	bool "Build PCI utilities"

config BRCMSDK502L07_BUILD_STRACE
	bool "Build system call tracer (strace)"

config BRCMSDK502L07_BUILD_DISABLE_EXEC_STACK
	bool "Build with executable stack disabled"

config BRCMSDK502L07_BUILD_DISABLE_PINMUXTEST
	bool "Build PinMuxTest tool disabled"
	

config BRCMSDK502L07_BUILD_LINUX_PERF
	bool "Build linux perf tool"

choice
	prompt "Restrict memory available for use"

	config BRCMSDK502L07_BRCM_MEMORY_RESTRICTION_OFF
		bool "AUTO"

	config BRCMSDK502L07_BRCM_MEMORY_RESTRICTION_16M
		bool "16M"

	config BRCMSDK502L07_BRCM_MEMORY_RESTRICTION_32M
		bool "32M"

	config BRCMSDK502L07_BRCM_MEMORY_RESTRICTION_64M
		bool "64M"
endchoice

config BRCMSDK502L07_BUILD_SPICTL
	bool "Enable spictl SPI SLAVE DEVICE TEST"

config BRCMSDK502L07_BUILD_WEB_SOCKETS_TEST
	bool "Enable websocket tests (wstest.html)"

config BRCMSDK502L07_BUILD_SPICTL
	bool "Enable spictl SPI SLAVE DEVICE TEST"

config BRCMSDK502L07_BRCM_DRIVER_MEMCCAP
	tristate "Build memccap tool"
	depends on (BRCMSDK502L07_BRCM_4908 || BRCMSDK502L07_BRCM_63158)

config BRCMSDK502L07_BUILD_FPING
	bool "Build fping utility"

config BRCMSDK502L07_BUILD_MTD_OOPS
	bool "Enable MTD_OOPS feature"

if (BRCMSDK502L07_BUILD_MTD_OOPS)
config BRCMSDK502L07_OOPSLOG_PARTITION_NAME
	string "Oops Log Partition Name"
	default "mtdoops"
endif

config BRCMSDK502L07_BUILD_ARM_PLTS
	bool "Enable ARM_MODULE_PLTS to allow large modules"
	depends on (BRCMSDK502L07_PROFILE_ARCH = "arm")
endmenu #menu "Debug selection"

endmenu #menu "Broadcom SDK Configuration"
