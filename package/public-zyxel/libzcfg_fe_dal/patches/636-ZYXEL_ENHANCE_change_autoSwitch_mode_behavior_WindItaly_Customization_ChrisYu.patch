Index: libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_scheduler_access.c
===================================================================
--- libzcfg_fe_dal-1.0.orig/network/wireless/zcfg_fe_dal_wifi_scheduler_access.c	2018-09-25 11:54:17.984919217 +0800
+++ libzcfg_fe_dal-1.0/network/wireless/zcfg_fe_dal_wifi_scheduler_access.c	2018-09-25 13:28:46.303253394 +0800
@@ -9,6 +9,11 @@
 
 #define CWMP_SOAP_MSG_DEBUG (1 << 1)
 
+#ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+bool defaultwlanConfig;
+#endif //ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+
+
 dal_param_t WLAN_SCH_ACCESS_param[] =
 {
 	//Schedule
@@ -103,11 +108,14 @@
 	enable = json_object_get_boolean(reqObj);
 
 #ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+	defaultwlanConfig = false;
 	struct json_object *reqAutoObj = NULL;
 	struct json_object *reqMasterShipObj = NULL;
 
 	bool autoSwitchEnable = false;
 	bool masterShip = false;
+	bool curEnable = false;
+	
 	
 	reqAutoObj = json_object_object_get(Jobj,"AutoSwitchWiFiRadio");
 	reqMasterShipObj = json_object_object_get(Jobj,"MasterShip");
@@ -122,6 +130,9 @@
 		return ret;
 	}
 	else{
+#ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+		curEnable = json_object_get_boolean(json_object_object_get(wlanSchedulerActiveObj, "Enable"));
+#endif //ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
 		if(json_object_object_get(Jobj, "Enable"))
 			json_object_object_add(wlanSchedulerActiveObj, "Enable", json_object_new_boolean(enable));
 #ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
@@ -129,6 +140,11 @@
 			json_object_object_add(wlanSchedulerActiveObj, "AutoSwitchWiFiRadio", json_object_new_boolean(autoSwitchEnable));
 		if(json_object_object_get(Jobj, "MasterShip"))
 			json_object_object_add(wlanSchedulerActiveObj, "MasterShip", json_object_new_boolean(masterShip));
+		if ((enable == false) && (enable != curEnable) && (masterShip == true)){
+			if (zcfgFeDalDefaultWiFiConfig() == ZCFG_SUCCESS){
+				defaultwlanConfig = true;
+			}
+		}
 #endif //ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
 
 		ret = zcfgFeObjJsonSet(RDM_OID_WLAN_SCHEDULER_ACCESS, &schedulerIid, wlanSchedulerActiveObj, NULL);
@@ -137,15 +153,67 @@
 	return ret;
 }
 
+zcfgRet_t zcfgFeDalDefaultWiFiConfig(void){
+
+	zcfgRet_t ret = ZCFG_SUCCESS;
+	objIndex_t iid;
+	struct json_object *ssidObj = NULL;
+	bool enableStatus;
+
+	IID_INIT(iid);
+	while(zcfgFeObjJsonGetNext(RDM_OID_WIFI_SSID, &iid, &ssidObj) == ZCFG_SUCCESS){
+		if (json_object_get_int(json_object_object_get(ssidObj, "X_ZYXEL_Attribute")) == 0){
+			if (!strcmp(json_object_get_string(json_object_object_get(ssidObj, "X_ZYXEL_GuestAPs")),"")){
+				//GUEST	
+				enableStatus = false;
+			}
+			else{
+				//MAIN
+				enableStatus = true;
+			}
+
+			json_object_object_add(ssidObj, "Enable", json_object_new_boolean(enableStatus));
+		}
+		zcfgFeObjJsonSetWithoutApply(RDM_OID_WIFI_SSID, &iid, ssidObj, NULL);
+		json_object_put(ssidObj);
+	}
+	return ret;
+	
+}
+
+void zcfgFeDalUpdateWiFiConfig(void){
+	
+	objIndex_t radioIid;
+	struct json_object *radioObj = NULL;
+	IID_INIT(radioIid);
+	while(zcfgFeObjJsonGetNext(RDM_OID_WIFI_SSID, &radioIid, &radioObj) == ZCFG_SUCCESS){	
+		if ((radioIid.idx[0] == 1) || (radioIid.idx[0] == 5)) {
+			zcfgFeObjJsonBlockedSet(RDM_OID_WIFI_SSID, &radioIid, radioObj, NULL);
+		}
+		json_object_put(radioObj);
+	}
+	
+}
+
 zcfgRet_t zcfgFeDalWlanSchAccess(const char *method, struct json_object *Jobj, struct json_object *Jarray, char *replyMsg)
 {
 	zcfgRet_t ret = ZCFG_SUCCESS;
+#ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+	defaultwlanConfig = false;
+#endif //ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON	
 
 	if(!method || !Jobj)
 		return ZCFG_INTERNAL_ERROR;
 
 	if(!strcmp(method, "PUT")) {
 		ret = zcfgFeDalWlanSchedulerAccessEdit(Jobj, NULL);
+#ifdef ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON
+		if (defaultwlanConfig == true){
+			zcfgFeDalUpdateWiFiConfig();
+		}
+#endif //ZYXEL_WLAN_SCHEDULER_AUTO_SWITCH_RADIO_ON	
+
+		
 	}
 	else if(!strcmp(method, "GET")) {
 		ret = zcfgFeDalWlanSchedulerAccessGet(Jobj, Jarray, NULL);
