Index: libzyutil-1.0/BROADCOM/libzyutil_wrapper.c
===================================================================
--- libzyutil-1.0.orig/BROADCOM/libzyutil_wrapper.c	2019-04-29 10:56:46.392224493 +0800
+++ libzyutil-1.0/BROADCOM/libzyutil_wrapper.c	2019-04-29 10:58:05.104628654 +0800
@@ -14,6 +14,75 @@
 #define PROC_NVRAM_BOARDID  "/proc/nvram/boardid"
 #endif
 
+#ifdef ZYXEL_AT_SET_KEY_BRCM //Chris Test
+char *zyGetSupervisorPWD(void){
+	
+	NVRAM_DATA nvramData;
+    static char fake[SUPER_PWD_LEN+1] = {0};
+
+	memset(&nvramData, 0, sizeof(NVRAM_DATA));
+
+	if(nvramDataGet(&nvramData) < 0){
+		//printf(" #### zyGetSupervisorPWD #### - Failed zyGetSupervisorPWD Failed\n");
+		return fake;
+	}
+	//printf(" #### zyGetSupervisorPWD #### - nvramData.supervisor = %s\n", nvramData.supervisor);
+	//printf(" #### zyGetSupervisorPWD #### - nvramData.supervisor len = %d\n", strlen(nvramData.supervisor));
+	if (strlen(nvramData.supervisor) == 0){
+		//printf(" #### zyGetSupervisorPWD #### - Failed - zyGetSupervisorPWD Empty\n");
+		return fake;
+	}
+	memcpy(fake, nvramData.supervisor, SUPER_PWD_LEN);
+	printf("%s Set to default passowrd\n", __FUNCTION__);
+	
+	return fake;
+}
+char *zyGetAdminPWD(void){
+	
+	NVRAM_DATA nvramData;
+	static char fake[ADMIN_PWD_LEN+1] = {0};
+	
+	memset(&nvramData, 0, sizeof(NVRAM_DATA));
+
+	if(nvramDataGet(&nvramData) < 0){
+		//printf(" #### zyGetAdminPWD #### - Failed zyGetAdminPWD Failed\n");
+		return fake;
+	}
+	//printf(" #### zyGetAdminPWD #### - nvramData.admin = %s\n", nvramData.admin);
+	//printf(" #### zyGetAdminPWD #### - nvramData.admin len = %d\n", strlen(nvramData.admin));
+	if (strlen(nvramData.admin) == 0){
+		//printf(" #### zyGetAdminPWD #### - Failed - zyGetAdminPWD Empty\n");
+		return fake;
+	}
+	memcpy(fake, nvramData.admin, ADMIN_PWD_LEN);
+	printf("%s Set to default passowrd\n", __FUNCTION__);
+	
+	return fake;
+}
+char *zyGetPSK(void){
+	
+	NVRAM_DATA nvramData;
+	static char fake[KEYPASSPHRASE_LEN+1] = {0};
+	
+	memset(&nvramData, 0, sizeof(NVRAM_DATA));
+
+	if(nvramDataGet(&nvramData) < 0){
+		//printf(" #### zyGetPSK #### - Failed zyGetPSK Failed\n");
+		return fake;
+	}
+	//printf(" #### zyGetPSK #### - nvramData.WpaPskKey = %s\n", nvramData.WpaPskKey);
+	//printf(" #### zyGetPSK #### - nvramData.WpaPskKey len = %d\n", strlen(nvramData.WpaPskKey));
+	if (strlen(nvramData.WpaPskKey) == 0){
+		//printf(" #### zyGetPSK #### - Failed - zyGetPSK Empty\n");
+		return fake;
+	}
+	memcpy(fake, nvramData.WpaPskKey, KEYPASSPHRASE_LEN);
+	printf("%s Set to default Psk\n", __FUNCTION__);
+	
+	return fake;
+}
+#endif
+
 #ifdef SUPPORT_LANVLAN
 zcfgRet_t zyUtilISetIfState(char *ifName, bool up)
 {
Index: libzyutil-1.0/zyutil.h
===================================================================
--- libzyutil-1.0.orig/zyutil.h	2019-04-29 10:56:46.568224498 +0800
+++ libzyutil-1.0/zyutil.h	2019-04-29 10:58:12.426193008 +0800
@@ -122,6 +122,11 @@
 //void zyUtilIptablesLockInit(void);
 //void zyUtilIptablesLock(void);
 //void zyUtilIptablesUnLock(void);
+#ifdef ZYXEL_AT_SET_KEY_BRCM
+char *zyGetSupervisorPWD(void);
+char *zyGetAdminPWD(void);
+char *zyGetPSK(void);
+#endif
 
 int zyUtilAuthUserAccount(const char *username, const char *password);
 char *zyGetAccountInfoFromFile(char *username, char *filePath);
