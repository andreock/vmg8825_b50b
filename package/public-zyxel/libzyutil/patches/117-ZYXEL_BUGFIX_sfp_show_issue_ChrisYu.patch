Index: libzyutil-1.0/zyutil_sfp.c
===================================================================
--- libzyutil-1.0.orig/zyutil_sfp.c	2020-03-31 18:31:12.611415884 +0800
+++ libzyutil-1.0/zyutil_sfp.c	2020-03-31 18:33:25.397038081 +0800
@@ -221,20 +221,36 @@
 
 }
 
-int dump_DDMI_state(sfp_ddmi_state_t *ddmi_state)
+void dumpString(unsigned char *_string, int length)
 {
-    printf("DDMI state:\n");
-    printf("sfp presetnt      = %d\n",        ddmi_state->present);
-    printf("sfp vendor name   = %s\n",        ddmi_state->sfp_vendor);
-    printf("sfp part number   = %s\n",        ddmi_state->sfp_pn);
-    printf("sfp serial number = %s\n",        ddmi_state->sfp_sn);
-    printf("sfp rx power      = %f dbm\n",    ddmi_state->rx_power);
-    printf("sfp tx power      = %f dbm\n",    ddmi_state->tx_power);
-    printf("sfp temperature   = %f C\n",    ddmi_state->temperature);
+	int i;
+	for(i=0;i<length;i++){
+		/* cut garbled ending, ASC char out of 32~126*/
+		if( _string[i] < 32 || _string[i] > 126 )
+			_string[i] = '\0';
+	}
+	if(0<length)
+		_string[length-1] = '\0';
+}
 
+int dump_DDMI_state(sfp_ddmi_state_t *ddmi_state)
+{
+	dumpString( &ddmi_state->sfp_vendor, DDMI_STRING_MAX_LENGTH);
+	dumpString( &ddmi_state->sfp_pn, DDMI_STRING_MAX_LENGTH);
+	dumpString( &ddmi_state->sfp_sn, DDMI_STRING_MAX_LENGTH);
+	
+	printf("DDMI state:\n");
+	printf("sfp presetnt      = %d\n",        ddmi_state->present);
+	printf("sfp vendor name   = %s\n",        ddmi_state->sfp_vendor);
+	printf("sfp part number   = %s\n",        ddmi_state->sfp_pn);
+	printf("sfp serial number = %s\n",        ddmi_state->sfp_sn);
+	printf("sfp rx power      = %f dbm\n",    ddmi_state->rx_power);
+	printf("sfp tx power      = %f dbm\n",    ddmi_state->tx_power);
+	printf("sfp temperature   = %f C\n",      ddmi_state->temperature);
     return 0;
 }
 
+
 float _extCalibrationRxPower_uW(unsigned short rxPower, float calibate0, float calibate1, float calibate2, float calibate3, float calibate4)
 {
     return (calibate0 +
